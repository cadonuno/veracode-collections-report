{"name": "Widget Markets", "description": "", "created": "2022-06-28T20:11:24.000Z", "created_by": "verainternal_aabutler", "modified": "2023-02-16T15:08:15.000Z", "modified_by": "verainternal_aabutler", "tags": "", "guid": "c9d4869c-7965-4cd6-9d5d-05bdc58ff624", "org_id": "afa8dbc8-8040-439d-8ac6-7299dcfc0ffa", "business_unit": null, "compliance_status": "OUT_OF_COMPLIANCE", "last_scan_date": "2024-04-26T17:45:11.000Z", "compliance_overview": {"not_passing_policy": 4, "passing_policy": 0, "conditionally_passing_policy": 0, "not_assessed": 1, "total_items": 5, "total_ignored": 0}, "custom_fields": [{"name": "Custom 1", "value": ""}, {"name": "Custom 2", "value": ""}, {"name": "Custom 3", "value": ""}, {"name": "Custom 4", "value": ""}, {"name": "Custom 5", "value": ""}, {"name": "Custom 6", "value": ""}, {"name": "Custom 7", "value": ""}, {"name": "Custom 8", "value": ""}, {"name": "Custom 9", "value": ""}, {"name": "Custom 10", "value": ""}], "asset_infos": [{"guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "type": "APPLICATION", "name": "Verademo", "attributes": {"app_url": "HomeAppProfile:90250:1367805", "team_accessible": true, "teams": [{"team_id": 256469, "team_name": "Backend Team", "guid": "0102931e-4d9b-4ac5-a5cd-4de16ffcab9a"}], "scans": [{"status": "PUBLISHED", "modified_date": "2024-04-23T15:21:37.000Z", "scan_url": "DynamicParamsView:90250:1367805:35282781:35251574::35267224", "scan_type": "DYNAMIC"}, {"status": "PUBLISHED", "modified_date": "2024-03-08T19:37:14.000Z", "scan_url": "StaticOverview:90250:1367805:33657073:33626540:33642190", "scan_type": "STATIC"}, {"status": "PUBLISHED", "modified_date": "2022-03-25T17:49:54.000Z", "scan_url": "ManualParamsView:90250:1367805:17489771:17462014:::17477664", "scan_type": "MANUAL"}], "created": "2022-03-03T14:17:53.000Z", "policy_in_grace_period": false, "policy_passed_rules": false, "policies": [{"guid": "ccdc9751-3057-44b4-b8f0-a1712cf17edd", "name": "OWASP Top 10", "policy_compliance_status": "DID_NOT_PASS"}], "last_completed_scan_date": "2024-04-23T15:21:37.000Z", "policy_passed_scan_requirements": true, "is_ignored": false}}, {"guid": "5d690c8f-d696-48b8-a2f9-0056d8b05c8c", "type": "APPLICATION", "name": "verademo-java-gcp", "attributes": {"app_url": "HomeAppProfile:90250:1461267", "team_accessible": true, "teams": [{"team_id": 256469, "team_name": "Backend Team", "guid": "0102931e-4d9b-4ac5-a5cd-4de16ffcab9a"}], "scans": [], "created": "2022-06-16T18:59:27.000Z", "policy_in_grace_period": false, "policy_passed_rules": false, "policies": [{"guid": "4cbdbf17-7979-4848-bd7f-f5c0e1b67d18", "name": "Veracode Recommended High + SCA", "policy_compliance_status": "NOT_ASSESSED"}], "last_completed_scan_date": null, "policy_passed_scan_requirements": false, "is_ignored": false}}, {"guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "type": "APPLICATION", "name": "Verademo.NET", "attributes": {"app_url": "HomeAppProfile:90250:1394124", "team_accessible": true, "teams": [{"team_id": 256469, "team_name": "Backend Team", "guid": "0102931e-4d9b-4ac5-a5cd-4de16ffcab9a"}], "scans": [{"status": "PUBLISHED", "modified_date": "2022-12-07T21:35:04.000Z", "scan_url": "DynamicParamsView:90250:1394124:22619331:22590622::22606272", "scan_type": "DYNAMIC"}, {"status": "PUBLISHED", "modified_date": "2024-04-26T17:45:11.000Z", "scan_url": "StaticOverview:90250:1394124:35444429:35413146:35428796", "scan_type": "STATIC"}], "created": "2022-03-29T16:55:35.000Z", "policy_in_grace_period": false, "policy_passed_rules": false, "policies": [{"guid": "61800e31-f076-4def-83b4-89f2f1fb15d0", "name": "Veracode Recommended Very High + SCA", "policy_compliance_status": "DID_NOT_PASS"}], "last_completed_scan_date": "2024-04-26T17:45:11.000Z", "policy_passed_scan_requirements": false, "is_ignored": false}}, {"guid": "7d954dc6-fbc3-43da-8572-31c9dc5c0b98", "type": "APPLICATION", "name": "Vulnerable_Tornado_App", "attributes": {"app_url": "HomeAppProfile:90250:1414756", "team_accessible": true, "teams": [], "scans": [{"status": "PUBLISHED", "modified_date": "2022-04-19T17:52:18.000Z", "scan_url": "StaticOverview:90250:1414756:17952623:17924826:17940476", "scan_type": "STATIC"}], "created": "2022-04-19T17:28:29.000Z", "policy_in_grace_period": true, "policy_passed_rules": true, "policies": [{"guid": "9f47093a-0493-4ab4-bce4-3246eb2ab50f", "name": "Veracode Recommended Medium + SCA", "policy_compliance_status": "DID_NOT_PASS"}], "last_completed_scan_date": "2022-04-19T17:52:18.000Z", "policy_passed_scan_requirements": false, "is_ignored": false}}, {"guid": "df376eb3-a039-40db-8d24-1c11da1bfd42", "type": "APPLICATION", "name": "OpenSSL", "attributes": {"app_url": "HomeAppProfile:90250:1509220", "team_accessible": true, "teams": [], "scans": [{"status": "PUBLISHED", "modified_date": "2022-08-16T17:49:49.000Z", "scan_url": "StaticOverview:90250:1509220:20235769:20207605:20223255", "scan_type": "STATIC"}], "created": "2022-08-16T13:14:48.000Z", "policy_in_grace_period": true, "policy_passed_rules": false, "policies": [{"guid": "61800e31-f076-4def-83b4-89f2f1fb15d0", "name": "Veracode Recommended Very High + SCA", "policy_compliance_status": "DID_NOT_PASS"}], "last_completed_scan_date": "2022-08-16T17:49:49.000Z", "policy_passed_scan_requirements": false, "is_ignored": false}}], "total_assets": 5, "total_ignored_assets": 0, "team_accessible": true, "restricted": false, "_links": {"self": {"href": "https://api.veracode.com/appsec/v1/collections/c9d4869c-7965-4cd6-9d5d-05bdc58ff624"}}, "collection_summary": {"sev5": 32, "sev4": 82, "sev3": 196, "sev2": 50, "sev1": 0, "sev0": 29}, "collection_policy_summary": {"sev5": 30, "sev4": 81, "sev3": 166, "sev2": 6, "sev1": 0, "sev0": 3}, "findings_list": {"0dae4e5d-2744-4191-9e52-22eaec684310": {"findings_by_severity": {"sev5": 31, "sev4": 78, "sev3": 164, "sev2": 33, "sev1": 0, "sev0": 25}, "policy_findings_by_severity": {"sev5": 29, "sev4": 77, "sev3": 136, "sev2": 5, "sev1": 0, "sev0": 1}, "total_findings": 331, "total_policy_findings": 248, "app_findings": [{"issue_id": 217, "scan_type": "MANUAL", "description": "Valid AWS Access and Secret keys were found in a developer repository for the organization.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-25T17:45:59.115Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-03-25T17:49:54.194Z"}, "finding_details": {"severity": 5, "note": "CVSS v3 Vector: (AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:L/A:N) = 9.3", "input_vector": "Exposed AWS Secret Key", "capec_id": 9, "module": "manual_analysis", "exploit_difficulty": 1, "cwe": {"id": 200, "name": "Exposure of Sensitive Information to an Unauthorized Actor", "href": "https://api.veracode.com/appsec/v1/cwes/200"}, "severity_desc": "Confidentiality, Integrity, and Availability may be partially or completely affected, depending on the privilege level of the compromised account and the contents of the compromised AWS hosts.", "exploit_desc": "An attacker could use the exposed AWS secret key to access, add, modify or delete private Amazon services and data.", "remediation_desc": "Treat all exposed AWS access and secret keys as compromised. Retire exposed keys and replace with new ones. Ensure the developer removes the repository from being publicly accessible.", "location": "https://github.com/verahacktdev/Amazonsearchcode", "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "cvss": 9.3, "exploitability": 2, "mpt_link": {"href": "https://api.veracode.com/mpt/v1/findings/8c3f8c58-cbf9-4d78-913b-0a5d04742a5c?include_artifacts=false"}}, "build_id": 17489771}, {"issue_id": 218, "scan_type": "MANUAL", "description": "An archived github repository was discovered on the website searchcode.com, which contained several social media secret account keys, as well as a private ssh key. The original code repository has been removed from github.com website, however the code still remains public at this site.", "count": 2, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-25T17:45:59.115Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-03-25T17:49:54.194Z"}, "finding_details": {"severity": 5, "note": "CVSS v3 Vector: (AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:L/A:N) = 9.3", "input_vector": "Exposed Secret Access Data", "capec_id": 9, "module": "manual_analysis", "exploit_difficulty": 1, "cwe": {"id": 200, "name": "Exposure of Sensitive Information to an Unauthorized Actor", "href": "https://api.veracode.com/appsec/v1/cwes/200"}, "severity_desc": "The ssh private key allows root access to a publicly facing server through an exposed ssh service. The social media secret tokens allow for an attacker to post, modify, or delete information from the organizations public accounts. Confidentiality, integrity, and availability are completely compromised.", "exploit_desc": "An attacker could use the information discovered either directly, by attempting to use the keys, tokens, passwords, or secrets ; or indirectly by learning valuable internal organizational and development data from the exposed source code found on the searchcode website.", "remediation_desc": "Although it is not possible to remove an archived entry from this codesearch archive, ensure that any sensitive information exposed, such as API tokens, passwords, cryptographic keys, and social media account secrets have been changed.", "location": "https://searchcode.com/file/verahackt/", "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "cvss": 9.3, "exploitability": 2, "mpt_link": {"href": "https://api.veracode.com/mpt/v1/findings/4e71d5a2-f336-450d-ac73-d3a716c3a75d?include_artifacts=false"}}, "build_id": 17489771}, {"issue_id": 223, "scan_type": "MANUAL", "description": "A web application deserializes untrusted data without sufficiently verifying that the resulting data will be valid.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-25T17:45:59.115Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-03-25T17:49:54.194Z"}, "finding_details": {"severity": 5, "note": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H = 10.0", "input_vector": "sessID Parameter", "capec_id": 1, "module": "manual_analysis", "exploit_difficulty": 1, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "severity_desc": "Confidentiality, Integrity, and Availability are all completely compromised, as an attacker can execute commands on the server as the \"[REDACTED]\" user, which appears to have ownership of all the application files.", "exploit_desc": "An attacker can manipulate requests to the application and insert a payload which executes commands on the server.", "remediation_desc": "The recommended way to protect against deserialization attacks is to not allow users to pass serialized objects. Instead, non-binary formats such as JSON could be used to pass data, and integrity checks could be performed to ensure that malicious code is not included.", "location": "10.10.253.20", "finding_category": {"id": 22, "name": "Encapsulation", "href": "https://api.veracode.com/appsec/v1/categories/22"}, "cvss": 10.0, "exploitability": 2, "mpt_link": {"href": "https://api.veracode.com/mpt/v1/findings/null?include_artifacts=false"}}, "build_id": 17489771}, {"issue_id": 49, "scan_type": "STATIC", "description": "<span>This call to java.lang.Runtime.exec() contains a command injection flaw.  The argument to the function is constructed using untrusted input.  If an attacker is allowed to specify all or part of the command, it may be possible to execute commands on the server with the privileges of the executing process.  The level of exposure depends on the effectiveness of input validation routines, if any. The first argument to exec() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.  Most APIs that execute system commands also have a \"safe\" version of the method that takes an array of strings as input rather than a single string, which protects against some forms of command injection.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/78.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Command_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "CLOSED", "resolution": "MITIGATED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "APPROVED", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 5, "cwe": {"id": 78, "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/78"}, "file_path": "com/veracode/verademo/controller/ToolsController.java", "file_name": "ToolsController.java", "module": "verademo.war", "relative_location": 27, "finding_category": {"id": 18, "name": "Command or Argument Injection", "href": "https://api.veracode.com/appsec/v1/categories/18"}, "procedure": "com.veracode.verademo.controller.ToolsController.ping", "exploitability": 0, "attack_vector": "java.lang.Runtime.exec", "file_line_number": 56}, "annotations": [{"comment": "Because of ABC", "action": "APPROVED", "created": "2023-09-05T19:24:42.950Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-242 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:27.251Z", "user_name": "Aaron Butler"}, {"comment": "By xyz", "action": "APPDESIGN", "created": "2022-05-13T14:37:09.121Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-62 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:14.445Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 115, "scan_type": "STATIC", "description": "<span>This call to java.lang.Runtime.exec() contains a command injection flaw.  The argument to the function is constructed using untrusted input.  If an attacker is allowed to specify all or part of the command, it may be possible to execute commands on the server with the privileges of the executing process.  The level of exposure depends on the effectiveness of input validation routines, if any. The first argument to exec() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.  Most APIs that execute system commands also have a \"safe\" version of the method that takes an array of strings as input rather than a single string, which protects against some forms of command injection.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/78.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Command_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 5, "cwe": {"id": 78, "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/78"}, "file_path": "com/veracode/verademo/controller/ToolsController.java", "file_name": "ToolsController.java", "module": "verademo.war", "relative_location": 46, "finding_category": {"id": 18, "name": "Command or Argument Injection", "href": "https://api.veracode.com/appsec/v1/categories/18"}, "procedure": "com.veracode.verademo.controller.ToolsController.ping", "exploitability": 0, "attack_vector": "java.lang.Runtime.exec", "file_line_number": 59}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-243 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:28.689Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-63 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:15.176Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 118, "scan_type": "STATIC", "description": "<span>This call to java.lang.Runtime.exec() contains a command injection flaw.  The argument to the function is constructed using untrusted input.  If an attacker is allowed to specify all or part of the command, it may be possible to execute commands on the server with the privileges of the executing process.  The level of exposure depends on the effectiveness of input validation routines, if any. The first argument to exec() contains tainted data from the variables (new String\\[...\\]). The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.  Most APIs that execute system commands also have a \"safe\" version of the method that takes an array of strings as input rather than a single string, which protects against some forms of command injection.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/78.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Command_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 5, "cwe": {"id": 78, "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/78"}, "file_path": "com/veracode/verademo/controller/ToolsController.java", "file_name": "ToolsController.java", "module": "verademo.war", "relative_location": 52, "finding_category": {"id": 18, "name": "Command or Argument Injection", "href": "https://api.veracode.com/appsec/v1/categories/18"}, "procedure": "com.veracode.verademo.controller.ToolsController.fortune", "exploitability": 0, "attack_vector": "java.lang.Runtime.exec", "file_line_number": 88}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-4 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:42:53.271Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-244 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:29.427Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-64 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:16.050Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 73, "scan_type": "STATIC", "description": "<span>This call to java.lang.Runtime.exec() contains a command injection flaw.  The argument to the function is constructed using untrusted input.  If an attacker is allowed to specify all or part of the command, it may be possible to execute commands on the server with the privileges of the executing process.  The level of exposure depends on the effectiveness of input validation routines, if any. The first argument to exec() contains tainted data from the variable cmd. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.  Most APIs that execute system commands also have a \"safe\" version of the method that takes an array of strings as input rather than a single string, which protects against some forms of command injection.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/78.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Command_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "PROPOSED", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 5, "cwe": {"id": 78, "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/78"}, "file_path": "com/veracode/verademo/controller/ToolsController.java", "file_name": "ToolsController.java", "module": "verademo.war", "relative_location": 58, "finding_category": {"id": 18, "name": "Command or Argument Injection", "href": "https://api.veracode.com/appsec/v1/categories/18"}, "procedure": "com.veracode.verademo.controller.ToolsController.fortune", "exploitability": 0, "attack_vector": "java.lang.Runtime.exec", "file_line_number": 91}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-245 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:30.455Z", "user_name": "Aaron Butler"}, {"comment": "controlled by ABC", "action": "FP", "created": "2022-06-28T20:22:02.447Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-65 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:16.977Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"scan_type": "SCA", "description": "org.apache.sling.commons.json is vulnerable to Improper Input Validation. The vulnerability exists because the library does not properly validate user inputs, which allows an attacker to trigger unexpected errors by supplying maliciously crafted input.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 20, "name": "Improper Input Validation", "href": "https://api.veracode.com/appsec/v1/cwes/20"}, "component_id": "8e65d6c5-1044-42a1-9842-107728590261", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-47937", "cvss": 9.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-47937", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-47937", "epss_score": 0.00465, "epss_percentile": 0.75634, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "7348cbd5-d4b3-4c84-9a1e-0fb8c775ad43", "component_filename": "org.apache.sling.commons.json-2.0.4-incubator.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.sling:org.apache.sling.commons.json"}], "version": "2.0.4-incubator"}}, {"scan_type": "SCA", "description": "Apache Commons includes a class called InvokerTransformer. An application is vulnerable to a deserialization attack if this class is available on the classpath and the application deserializes untrusted or user-supplied data. It's not necessary to actually use InvokerTransfomer to be vulnerable. With these two criteria satisfied, an attacker may construct a gadget chain using classes in the component to execute arbitrary code. The chain relies on the class InvokerTransformer in the org.apache.commons.collections.functors package to invoke methods during the deserialization process.\n\nThe fix prevents deserialization of InvokerTransformer by default unless it's specifically enabled.\n\nCVE-2015-4852, CVE-2015-6420, CVE-2015-7501, and CVE-2015-7450 are all related to this artifact.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "9fdb0cb9-3f05-4fb3-b221-cd97bdacc307", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2015-4852", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2015-4852", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2015-4852", "epss_score": 0.96725, "epss_percentile": 0.99671, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "67bfca41-3dff-4e32-bd33-fdd2079d1ed1", "component_filename": "commons-collections4-4.0.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.commons:commons-collections4"}], "version": "4.0"}}, {"scan_type": "SCA", "description": "Apache Commons includes a class called InvokerTransformer. An application is vulnerable to a deserialization attack if this class is available on the classpath and the application deserializes untrusted or user-supplied data. It's not necessary to actually use InvokerTransfomer to be vulnerable. With these two criteria satisfied, an attacker may construct a gadget chain using classes in the component to execute arbitrary code. The chain relies on the class InvokerTransformer in the org.apache.commons.collections.functors package to invoke methods during the deserialization process.\n\nThe fix prevents deserialization of InvokerTransformer by default unless it's specifically enabled.\n\nCVE-2015-4852, CVE-2015-6420, CVE-2015-7501, and CVE-2015-7450 are all related to this artifact.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "9fdb0cb9-3f05-4fb3-b221-cd97bdacc307", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2015-4852", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2015-4852", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2015-4852", "epss_score": 0.96725, "epss_percentile": 0.99671, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "67bfca41-3dff-4e32-bd33-fdd2079d1ed1", "component_filename": "commons-collections4-4.0.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.commons:commons-collections4"}], "version": "4.0"}}, {"scan_type": "SCA", "description": "Apache Commons includes a class called InvokerTransformer. An application is vulnerable to a deserialization attack if this class is available on the classpath and the application deserializes untrusted or user-supplied data. It's not necessary to actually use InvokerTransfomer to be vulnerable. With these two criteria satisfied, an attacker may construct a gadget chain using classes in the component to execute arbitrary code. The chain relies on the class InvokerTransformer in the org.apache.commons.collections.functors package to invoke methods during the deserialization process.\n\nThe fix prevents deserialization of InvokerTransformer by default unless it's specifically enabled.\n\nCVE-2015-4852, CVE-2015-6420, CVE-2015-7501, and CVE-2015-7450 are all related to this artifact.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:45:22.998Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "9fdb0cb9-3f05-4fb3-b221-cd97bdacc307", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2015-4852", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2015-4852", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2015-4852", "epss_score": 0.96725, "epss_percentile": 0.99671, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "67bfca41-3dff-4e32-bd33-fdd2079d1ed1", "component_filename": "commons-collections4-4.0.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\commons-collections4-4.0.jar"}], "version": "4.0"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to remote code execution (RCE). When it is used with external endpoints regardless of endpoints being authenticated or not, the function `HttpInvokerServiceExporter: readRemoteInvocation` allows deserialization of untrusted object if the endpoints are exposed to untrusted clients. It depends on the implementation within a product to mandate an authentication and to protect an application from an authenticated deserialization. The vendor has claimed the behavior to be as intended, but has deprecated the vulnerable Sun's JDK HTTP server classes in version 6.0.0.\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2016-1000027", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2016-1000027", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2016-1000027", "epss_score": 0.02444, "epss_percentile": 0.90093, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to remote code execution (RCE). When it is used with external endpoints regardless of endpoints being authenticated or not, the function `HttpInvokerServiceExporter: readRemoteInvocation` allows deserialization of untrusted object if the endpoints are exposed to untrusted clients. It depends on the implementation within a product to mandate an authentication and to protect an application from an authenticated deserialization. The vendor has claimed the behavior to be as intended, but has deprecated the vulnerable Sun's JDK HTTP server classes in version 6.0.0.\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "ee9b8868-dd77-47d1-8019-7b21861a87f4", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2016-1000027", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2016-1000027", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2016-1000027", "epss_score": 0.02444, "epss_percentile": 0.90093, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4d99ff03-0d6c-4a03-9555-2cfd926a241e", "component_filename": "spring-web-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to remote code execution (RCE). When it is used with external endpoints regardless of endpoints being authenticated or not, the function `HttpInvokerServiceExporter: readRemoteInvocation` allows deserialization of untrusted object if the endpoints are exposed to untrusted clients. It depends on the implementation within a product to mandate an authentication and to protect an application from an authenticated deserialization. The vendor has claimed the behavior to be as intended, but has deprecated the vulnerable Sun's JDK HTTP server classes in version 6.0.0.\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.730Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2016-1000027", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2016-1000027", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2016-1000027", "epss_score": 0.02444, "epss_percentile": 0.90093, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-web-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Apache Commons FileUpload before 1.3.3 DiskFileItem File Manipulation Remote Code Execution", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 284, "name": "Improper Access Control", "href": "https://api.veracode.com/appsec/v1/cwes/284"}, "component_id": "c9daab8d-4347-44b0-ae8f-3d9a6060193f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2016-1000031", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2016-1000031", "severity": "High", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2016-1000031", "epss_score": 0.05866, "epss_percentile": 0.93469, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "98730b7d-0c28-4060-8866-c94dc3631c48", "component_filename": "commons-fileupload-1.3.2.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-fileupload:commons-fileupload"}], "version": "1.3.2"}}, {"scan_type": "SCA", "description": "Apache Commons FileUpload before 1.3.3 DiskFileItem File Manipulation Remote Code Execution", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 284, "name": "Improper Access Control", "href": "https://api.veracode.com/appsec/v1/cwes/284"}, "component_id": "c9daab8d-4347-44b0-ae8f-3d9a6060193f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2016-1000031", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2016-1000031", "severity": "High", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2016-1000031", "epss_score": 0.05866, "epss_percentile": 0.93469, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "98730b7d-0c28-4060-8866-c94dc3631c48", "component_filename": "commons-fileupload-1.3.2.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-fileupload:commons-fileupload"}], "version": "1.3.2"}}, {"scan_type": "SCA", "description": "Apache Commons FileUpload before 1.3.3 DiskFileItem File Manipulation Remote Code Execution", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-06-29T20:00:23.320Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 284, "name": "Improper Access Control", "href": "https://api.veracode.com/appsec/v1/cwes/284"}, "component_id": "c9daab8d-4347-44b0-ae8f-3d9a6060193f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2016-1000031", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2016-1000031", "severity": "High", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2016-1000031", "epss_score": 0.05866, "epss_percentile": 0.93469, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "98730b7d-0c28-4060-8866-c94dc3631c48", "component_filename": "commons-fileupload-1.3.2.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\commons-fileupload-1.3.2.jar"}], "version": "1.3.2"}}, {"scan_type": "SCA", "description": "Plexus-utils before 3.0.16 is vulnerable to command injection because it does not correctly process the contents of double quoted strings.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 78, "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/78"}, "component_id": "eebcd29b-5d6b-4c58-b15b-897448f67f4f", "licenses": [{"license_id": "apache-1.1", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2017-1000487", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2017-1000487", "severity": "High", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2017-1000487", "epss_score": 0.00395, "epss_percentile": 0.73584, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "5fa17a05-12a9-4af5-8454-f4155160fac6", "component_filename": "plexus-utils-1.0.4.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.codehaus.plexus:plexus-utils"}], "version": "1.0.4"}}, {"scan_type": "SCA", "description": "log4j-core is vulnerable to arbitrary code execution. Deserialization of untrusted data in `TcpSocketServer` and `UdpSocketServer` when listening for log data allows an attacker to execute arbitrary code via a malicious deserialization gadget.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2019-17571", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2019-17571", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2019-17571", "epss_score": 0.79382, "epss_percentile": 0.98304, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "log4j-core is vulnerable to arbitrary code execution. Deserialization of untrusted data in `TcpSocketServer` and `UdpSocketServer` when listening for log data allows an attacker to execute arbitrary code via a malicious deserialization gadget.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2019-17571", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2019-17571", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2019-17571", "epss_score": 0.79382, "epss_percentile": 0.98304, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "log4j-core is vulnerable to arbitrary code execution. Deserialization of untrusted data in `TcpSocketServer` and `UdpSocketServer` when listening for log data allows an attacker to execute arbitrary code via a malicious deserialization gadget.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-06-29T20:00:23.408Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2019-17571", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2019-17571", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2019-17571", "epss_score": 0.79382, "epss_percentile": 0.98304, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\log4j-1.2.17.jar"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "SnakeYaml is vulnerable to Remote Code Execution (RCE). The vulnerability is due to deserializing unrestricted types in the `Constructor` method leading to Remote Code execution through classpath injection. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "e4889cf9-7ffc-4de7-b65f-e9a3568b304e", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-1471", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-1471", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-1471", "epss_score": 0.02152, "epss_percentile": 0.89397, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "64ddaa59-01df-4a07-8d64-b9f26bb3c4ee", "component_filename": "snakeyaml-1.26.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.yaml:snakeyaml"}], "version": "1.26"}}, {"scan_type": "SCA", "description": "spring-beans is vulnerable to remote code execution. Using Spring Parameter Binding with non-basic parameter types, such as POJOs, allows an unauthenticated attacker to execute arbitrary code on the target system by writing or uploading arbitrary files (e.g .jsp files) to a location that can be loaded by the application server. \n\nInitial analysis at time of writing shows that exploitation of the vulnerability is only possible with JRE 9 and above, and Apache Tomcat 9 and above, and that the vulnerability requires the usage of Spring parameter binding with non-basic parameter types such as POJOs.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-31T08:05:19.957Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 94, "name": "Improper Control of Generation of Code ('Code Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/94"}, "component_id": "f2aa641c-1508-42f6-8160-79ab8ce34a58", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-22965", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22965", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-22965", "epss_score": 0.97478, "epss_percentile": 0.99969, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4a3c14bc-544b-455d-b5e3-3e65d4cf7db4", "component_filename": "spring-beans-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-beans"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-beans is vulnerable to remote code execution. Using Spring Parameter Binding with non-basic parameter types, such as POJOs, allows an unauthenticated attacker to execute arbitrary code on the target system by writing or uploading arbitrary files (e.g .jsp files) to a location that can be loaded by the application server. \n\nInitial analysis at time of writing shows that exploitation of the vulnerability is only possible with JRE 9 and above, and Apache Tomcat 9 and above, and that the vulnerability requires the usage of Spring parameter binding with non-basic parameter types such as POJOs.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 94, "name": "Improper Control of Generation of Code ('Code Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/94"}, "component_id": "4bc7d82b-07f5-4b02-bd8c-4a2d278645d4", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-22965", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22965", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-22965", "epss_score": 0.97478, "epss_percentile": 0.99969, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "255e0b8a-96ac-465b-af07-f000e82be98c", "component_filename": "spring-beans-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-beans"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "spring-beans is vulnerable to remote code execution. Using Spring Parameter Binding with non-basic parameter types, such as POJOs, allows an unauthenticated attacker to execute arbitrary code on the target system by writing or uploading arbitrary files (e.g .jsp files) to a location that can be loaded by the application server. \n\nInitial analysis at time of writing shows that exploitation of the vulnerability is only possible with JRE 9 and above, and Apache Tomcat 9 and above, and that the vulnerability requires the usage of Spring parameter binding with non-basic parameter types such as POJOs.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.605Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 94, "name": "Improper Control of Generation of Code ('Code Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/94"}, "component_id": "f2aa641c-1508-42f6-8160-79ab8ce34a58", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2022-22965", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22965", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-22965", "epss_score": 0.97478, "epss_percentile": 0.99969, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4a3c14bc-544b-455d-b5e3-3e65d4cf7db4", "component_filename": "spring-beans-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-beans-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Apache Chainsaw in log4j is vulnerable to remote code execution. The vulnerability exists due to a deserialization of untrusted object vulnerability. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2020-9493", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-9493", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2020-9493", "epss_score": 0.01836, "epss_percentile": 0.88391, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "Apache Chainsaw in log4j is vulnerable to remote code execution. The vulnerability exists due to a deserialization of untrusted object vulnerability. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2020-9493", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-9493", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2020-9493", "epss_score": 0.01836, "epss_percentile": 0.88391, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "Apache Chainsaw in log4j is vulnerable to remote code execution. The vulnerability exists due to a deserialization of untrusted object vulnerability. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-06-29T20:00:23.408Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2020-9493", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-9493", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2020-9493", "epss_score": 0.01836, "epss_percentile": 0.88391, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\log4j-1.2.17.jar"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "JDBCAppender in Log4j is vulnerable to SQL injection attacks. An attacker is able to execute arbitrary SQL commands via entering crafted strings into input fields and headers where the values to be inserted are converters from `PatternLayout`", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-23305", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23305", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23305", "epss_score": 0.00436, "epss_percentile": 0.74909, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "JDBCAppender in Log4j is vulnerable to SQL injection attacks. An attacker is able to execute arbitrary SQL commands via entering crafted strings into input fields and headers where the values to be inserted are converters from `PatternLayout`", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-23305", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23305", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23305", "epss_score": 0.00436, "epss_percentile": 0.74909, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "JDBCAppender in Log4j is vulnerable to SQL injection attacks. An attacker is able to execute arbitrary SQL commands via entering crafted strings into input fields and headers where the values to be inserted are converters from `PatternLayout`", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-06-29T20:00:23.408Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 5, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2022-23305", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23305", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23305", "epss_score": 0.00436, "epss_percentile": 0.74909, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\log4j-1.2.17.jar"}], "version": "1.2.17"}}, {"issue_id": 222, "scan_type": "MANUAL", "description": "An exposed Windows SMB (\"Server Message Block\") allows guest logins on port 445. SMB is a protocol for sharing files, printers, serial ports and communications such as named pipes and between computers.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-25T17:45:59.115Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-03-25T17:49:54.194Z"}, "finding_details": {"severity": 4, "note": "CVSS v3 Vector: (AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:H) = 7.1", "input_vector": "SMB Guest Account Login", "capec_id": 4, "module": "manual_analysis", "exploit_difficulty": 2, "cwe": {"id": 255, "name": "Credentials Management Errors", "href": "https://api.veracode.com/appsec/v1/cwes/255"}, "severity_desc": "Both confidentiality and integrity are affected by allowing guest logins into the SMB service.", "exploit_desc": "it is possible to enumerate sensitive information from the host by logging into the service anonymously. This information could include enumeration of shares, users, domains, named pipes, software versions and other networked machines. It could also be used in conjunction with another vulnerability to help an attacker gain a foothold into the internal environment.", "remediation_desc": "Disable guest account from the SMB service.", "location": "10.10.253.13", "finding_category": {"id": -1, "name": "Other", "href": "https://api.veracode.com/appsec/v1/categories/-1"}, "cvss": 7.1, "exploitability": 2, "mpt_link": {"href": "https://api.veracode.com/mpt/v1/findings/null?include_artifacts=false"}}, "build_id": 17489771}, {"issue_id": 45, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to executeQuery() contains tainted data from the variable sqlQuery. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 19, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 169}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-14 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:17.390Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-254 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:37.727Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-74 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:23.857Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 55, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to executeQuery() contains tainted data from the variable sql. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 38, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 255}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-15 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:19.496Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-255 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:38.583Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-75 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:24.419Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 354, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to executeQuery() contains tainted data from the variable sql. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 58, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.controller.UserController.showTotp", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 298}, "build_id": 33657073}, {"issue_id": 355, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to executeQuery() contains tainted data from the variable sql. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 43, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.controller.UserController.processTotp", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 340}, "build_id": 33657073}, {"issue_id": 129, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to executeQuery() contains tainted data from the variable sql. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 57, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.controller.UserController.processRegister", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 416}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-16 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:22.132Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-256 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:39.501Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-76 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:25.143Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 101, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.execute() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to execute() contains tainted data from the variable query. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 64, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.controller.UserController.processRegisterFinish", "exploitability": 0, "attack_vector": "java.sql.Statement.execute", "file_line_number": 485}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-17 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:24.511Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-257 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:40.394Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-77 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:26.069Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 97, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to executeQuery() contains tainted data from the variable sqlMyEvents. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 40, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.controller.UserController.showProfile", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 589}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-18 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:26.997Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-258 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:41.620Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-78 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:27.149Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 51, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.PreparedStatement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. executeQuery() was called on the myInfo object, which contains tainted data. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 53, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.controller.UserController.showProfile", "exploitability": 0, "attack_vector": "java.sql.PreparedStatement.executeQuery", "file_line_number": 601}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-19 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:29.326Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-259 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:41.992Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-79 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:27.828Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 134, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.PreparedStatement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. executeQuery() was called on the blabberQuery object, which contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 37, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.controller.BlabController.showBlabbers", "exploitability": 0, "attack_vector": "java.sql.PreparedStatement.executeQuery", "file_line_number": 490}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-6 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:42:57.911Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-246 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:31.007Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-66 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:17.632Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 46, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to executeQuery() contains tainted data from the variable sqlQuery. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/commands/RemoveAccountCommand.java", "file_name": "RemoveAccountCommand.java", "module": "verademo.war", "relative_location": 40, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.commands.RemoveAccountCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 40}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-11 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:10.184Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-251 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:35.191Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-71 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:21.194Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 66, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.execute() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to execute() contains tainted data from the variable sqlQuery. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/commands/RemoveAccountCommand.java", "file_name": "RemoveAccountCommand.java", "module": "verademo.war", "relative_location": 75, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.commands.RemoveAccountCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.execute", "file_line_number": 47}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-12 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:12.576Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-252 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:36.081Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-72 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:22.264Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 155, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.execute() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to execute() contains tainted data from the variable sqlQuery. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/commands/RemoveAccountCommand.java", "file_name": "RemoveAccountCommand.java", "module": "verademo.war", "relative_location": 92, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.commands.RemoveAccountCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.execute", "file_line_number": 51}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-13 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:14.639Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-253 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:36.812Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-73 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:23.173Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 50, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to executeQuery() contains tainted data from the variable sqlQuery. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/commands/ListenCommand.java", "file_name": "ListenCommand.java", "module": "verademo.war", "relative_location": 44, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.commands.ListenCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 40}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-9 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:05.722Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-249 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:33.811Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-69 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:19.908Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 120, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.execute() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to execute() contains tainted data from the variable sqlQuery. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/commands/ListenCommand.java", "file_name": "ListenCommand.java", "module": "verademo.war", "relative_location": 92, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.commands.ListenCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.execute", "file_line_number": 47}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-10 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:07.929Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-250 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:34.558Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-70 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:20.680Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 132, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.executeQuery() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to executeQuery() contains tainted data from the variable sqlQuery. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/commands/IgnoreCommand.java", "file_name": "IgnoreCommand.java", "module": "verademo.war", "relative_location": 44, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.commands.IgnoreCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 40}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-7 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:00.568Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-247 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:32.151Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-67 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:18.501Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 53, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to java.sql.Statement.execute() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. The first argument to execute() contains tainted data from the variable sqlQuery. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "com/veracode/verademo/commands/IgnoreCommand.java", "file_name": "IgnoreCommand.java", "module": "verademo.war", "relative_location": 92, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "com.veracode.verademo.commands.IgnoreCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.execute", "file_line_number": 47}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-8 has been opened for this flaw.", "action": "COMMENT", "created": "2022-11-29T18:43:03.324Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VERD-248 has been opened for this flaw.", "action": "COMMENT", "created": "2022-08-11T14:12:33.018Z", "user_name": "Aaron Butler"}, {"comment": "[Added by Veracode Integration for JIRA] JIRA Issue CRAP-68 has been opened for this flaw.", "action": "COMMENT", "created": "2022-03-28T20:43:19.140Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 189, "scan_type": "DYNAMIC", "description": "PHNwYW4+SW5qZWN0aW9ucyBoYXBwZW4gd2hlbiB1bnRydXN0ZWQgZGF0YSBpcyBpbnNlcnRlZCBpbnRvIGFuIGludGVycHJldGVkIHN5bnRheCBhbmQgc3Vic2VxdWVudGx5IGV2YWx1YXRlZCBvbiB0aGUgc2VydmVyIHNpZGUuIFRoaXMgc3ludGF4IG1heSBiZSBhIFNRTCBxdWVyeSwgYSBwYXJzZWQgSlNPTiBvciBYTUwgZG9jdW1lbnQsIGFuIGV4ZWN1dGVkIHNjcmlwdCBvciBvdGhlciBzeW50YXggdGhhdCBtYXkgYmUgaW4gdXNlIHdpdGhpbiB0aGUgYXBwbGljYXRpb24uIEFsdGhvdWdoIHRoZSB0YXJnZXQgc3ludGF4IGhhcyBub3QgYmVlbiBpZGVudGlmaWVkLCB0aGUgYXBwbGljYXRpb24gYmVoYXZpb3IgZGVtb25zdHJhdGVzIHRoYXQgdGhlIGlucHV0IEhUVFAgcGFyYW1ldGVyIG1heSBiZSBpbnNlcnRlZCB3aXRob3V0IHByb3BlciBlc2NhcGluZy4gSXQgd2FzIG9ic2VydmVkIGJ5IHNlbmRpbmcgdmFsaWQgYW5kIGludmFsaWQgcGF5bG9hZHMgdGhhdCBzaG91bGQgdGhyb3cgb3Igc2hvdWxkIG5vdCB0aHJvdyBlcnJvcnMuIEJ5IGluc2VydGluZyBhIHByb3BlciBhbmQgaW1wcm9wZXIgY29tbWVudHMgc3VjaCBhcyBgYCwgYCovXy8qYCwgYC8qXyovYCBpbnRvIHRoZSBgc29ydGAgcGFyYW1ldGVyLCB0aGUgc2Nhbm5lciB3YXMgYWJsZSB0byBzcG90IGEgZGlmZmVyZW5jZSBpbiB0aGUgcmVzcG9uc2VzLCB3aGljaCBpcyBhIGdvb2QgaW5kaWNhdG9yIG9mIGEgcG90ZW50aWFsIHZ1bG5lcmFiaWxpdHkuIENvbmZpZGVuY2U6IG1lZGl1bS4gUmVzcG9uc2UgY29kZXM6IGAyMDBgLCBgMzAyYCwgYDIwMGAuIFNpbWlsYXJpdGllczogYGAgdnMgYCovXy8qYDogMC4wOyBgKi9fLypgIHZzIGAvKl8qL2A6IDAuMDsgYGAgdnMgYC8qXyovYDogMS4wLiA8L3NwYW4+PHNwYW4+SXQgaXMgcmVjb21tZW5kZWQgdG8gaWRlbnRpZnkgaG93IHRoZSBjdXJyZW50IHBhcmFtZXRlciBpcyB1c2VkIGluIHRoZSBhcHBsaWNhdGlvbiBzb3VyY2UgY29kZSwgYW5kIG1ha2Ugc3VyZSBpdCBpcyBlc2NhcGVkIGJlZm9yZSBpbnNlcnRpbmcgaW50byBhbnkgc3ludGF4IG9yIHF1ZXJ5LiBZb3UgY2FuIGFkZCB2YWxpZCB2YWx1ZXMgdG8gYW4gYWxsb3dsaXN0IGFuZCBpbnZhbGlkIHZhbHVlcyB0byBhIGJsb2NrbGlzdC4gPC9zcGFuPjxzcGFuPjxhIGhyZWY9Imh0dHA6Ly9jd2UubWl0cmUub3JnL2NnaS1iaW4vanVtcG1lbnUuY2dpP2lkPTc0Ij5DV0U8L2E+PC9zcGFuPg==", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-21T20:38:56.113Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 4, "cwe": {"id": 74, "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/74"}, "path": "/verademo/blabbers?sort=blab_name+ASC%2F*_*%2F", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Code Injection", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 28, "name": "Code Injection", "href": "https://api.veracode.com/appsec/v1/categories/28"}, "vulnerable_parameter": "sort", "attack_vector": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/blabbers?sort=blab_name+ASC%2F*_*%2F"}, "build_id": 35282781}, {"issue_id": 180, "scan_type": "DYNAMIC", "description": "PHNwYW4+QnkgaW5qZWN0aW5nIGludmFsaWQgU1FMIHF1ZXJpZXMgb3IgY29tbWFuZHMgc3VjaCBhcyAnPShzZWxlY3QoMClmcm9tKHNlbGVjdChzbGVlcCgxNSkpKWFzMHg0MSk9JyBpbnRvIHRoZSBibGFiYmVyVXNlcm5hbWUgcGFyYW1ldGVyLCB0aGUgYXBwbGljYXRpb24gd2FzIG9ic2VydmVkIHRvIHJlc3BvbmQgc2xvd2VyIHRvIGN1c3RvbSBhdHRhY2tzIG1lYW50IHRvIGNhdXNlIGV4ZWN1dGlvbiBvZiBTUUwgcXVlcmllcyB0byBiZSBkZWxheWVkIGZvciBhIG1lYXN1cmFibGUgYW1vdW50IG9mIHRpbWUuIFRoaXMgaXMgYSBmb3JtIG9mIHRpbWUgYmFzZWQgU1FMIEluamVjdGlvbiwgd2hlcmUgYW4gYXR0YWNrZXIgaW5qZWN0cyBhIHF1ZXJ5IHRoYXQgdGFrZXMgYSBsb25nIHBlcmlvZCBvZiB0aW1lIHRvIGNvbXBsZXRlIHRvIGluZmVyIHdoZXRoZXIgdGhlIHRhcmdldCBpbnB1dHMgYXJlIHZ1bG5lcmFibGUuIDwvc3Bhbj48c3Bhbj5Bdm9pZCBkeW5hbWljYWxseSBjb25zdHJ1Y3RpbmcgU1FMIHF1ZXJpZXMuIEluc3RlYWQsIHVzZSBwYXJhbWV0ZXJpemVkIHByZXBhcmVkIHN0YXRlbWVudHMgdG8gcHJldmVudCB0aGUgZGF0YWJhc2UgZnJvbSBpbnRlcnByZXRpbmcgdGhlIGNvbnRlbnRzIG9mIGJpbmQgdmFyaWFibGVzIGFzIHBhcnQgb2YgdGhlIHF1ZXJ5LiAgPC9zcGFuPjxzcGFuPjxhIGhyZWY9Imh0dHA6Ly9jd2UubWl0cmUub3JnL2NnaS1iaW4vanVtcG1lbnUuY2dpP2lkPTg5Ij5DV0U8L2E+IDxhIGhyZWY9Imh0dHA6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9TUUxfaW5qZWN0aW9uIj5PV0FTUDwvYT4gPGEgaHJlZj0iaHR0cDovL3dlYmFwcHNlYy5wYndvcmtzLmNvbS9TUUwtSW5qZWN0aW9uIj5XQVNDPC9hPjwvc3Bhbj4=", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-21T20:38:56.113Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "path": "/verademo/blabbers", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "SQL Injection", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "vulnerable_parameter": "blabberUsername", "attack_vector": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/blabbers"}, "build_id": 35282781}, {"scan_type": "SCA", "description": "Apache Chainsaw in log4j is vulnerable to remote code execution. The vulnerability exists due to a deserialization of untrusted object vulnerability allowing an attacker to execute maliciously scripted code via the system. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-23307", "cvss": 9.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23307", "severity": "High", "vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C", "cvss3": {"score": 8.8, "severity": "High", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23307", "epss_score": 0.00846, "epss_percentile": 0.82266, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "Apache Chainsaw in log4j is vulnerable to remote code execution. The vulnerability exists due to a deserialization of untrusted object vulnerability allowing an attacker to execute maliciously scripted code via the system. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-23307", "cvss": 9.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23307", "severity": "High", "vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C", "cvss3": {"score": 8.8, "severity": "High", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23307", "epss_score": 0.00846, "epss_percentile": 0.82266, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "Apache Chainsaw in log4j is vulnerable to remote code execution. The vulnerability exists due to a deserialization of untrusted object vulnerability allowing an attacker to execute maliciously scripted code via the system. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-06-29T20:00:23.408Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2022-23307", "cvss": 9.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23307", "severity": "High", "vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C", "cvss3": {"score": 8.8, "severity": "High", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23307", "epss_score": 0.00846, "epss_percentile": 0.82266, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\log4j-1.2.17.jar"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "github.com/nghttp2/nghttp2 is vulnerable to Denial Of Service (DoS). The vulnerability could be exploited by attackers via sending a large number of HTTP/2 requests to a vulnerable server, then canceling them, causing the server to consume excessive resources and become unavailable to legitimate users. This vulnerability is known as \"Rapid Reset\".", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-10-19T15:34:26.501Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 400, "name": "Uncontrolled Resource Consumption", "href": "https://api.veracode.com/appsec/v1/cwes/400"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-44487", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-44487", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-44487", "epss_score": 0.73185, "epss_percentile": 0.98125, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "org.springframework:spring-web is vulnerable to Open Redirect. The vulnerability is due to insufficient validation checks of the host URL within `UriComponentsBuilder.java`. If an application utilizes the host validation checks, an attacker can perform an open redirect or Server-Side Request Forgery (SSRF) attack.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-26T16:17:57.030Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2024-22243", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-22243", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:P/A:N", "cvss3": {"score": 8.1, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2024-22243", "epss_score": 0.00043, "epss_percentile": 0.09089, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "org.springframework:spring-web is vulnerable to Open Redirect. The vulnerability is due to insufficient validation checks of the host URL within `UriComponentsBuilder.java`. If an application utilizes the host validation checks, an attacker can perform an open redirect or Server-Side Request Forgery (SSRF) attack.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-26T16:17:54.921Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "ee9b8868-dd77-47d1-8019-7b21861a87f4", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2024-22243", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-22243", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:P/A:N", "cvss3": {"score": 8.1, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2024-22243", "epss_score": 0.00043, "epss_percentile": 0.09089, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4d99ff03-0d6c-4a03-9555-2cfd926a241e", "component_filename": "spring-web-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "org.springframework:spring-web is vulnerable to Open Redirect. The vulnerability is due to insufficient validation checks of the host URL within `UriComponentsBuilder.java`. If an application utilizes the host validation checks, an attacker can perform an open redirect or Server-Side Request Forgery (SSRF) attack.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.730Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2024-22243", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-22243", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:P/A:N", "cvss3": {"score": 8.1, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2024-22243", "epss_score": 0.00043, "epss_percentile": 0.09089, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-web-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "org.springframework:spring-web is vulnerable to Open Redirect. The vulnerability is due to insufficient validation checks of the host URL within `UriComponentsBuilder.java`. If an application utilizes the host validation checks, an attacker can perform an open redirect or Server-Side Request Forgery (SSRF) attack. Note that this vulnerability is the same as CVE-2024-22243 but with different input.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-20T16:25:21.225Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2024-22259", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-22259", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:P/A:N", "cvss3": {"score": 8.1, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2024-22259", "epss_score": 0.00043, "epss_percentile": 0.09089, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "org.springframework:spring-web is vulnerable to Open Redirect. The vulnerability is due to insufficient validation checks of the host URL within `UriComponentsBuilder.java`. If an application utilizes the host validation checks, an attacker can perform an open redirect or Server-Side Request Forgery (SSRF) attack. Note that this vulnerability is the same as CVE-2024-22243 but with different input.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-20T16:25:19.294Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "ee9b8868-dd77-47d1-8019-7b21861a87f4", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2024-22259", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-22259", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:P/A:N", "cvss3": {"score": 8.1, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2024-22259", "epss_score": 0.00043, "epss_percentile": 0.09089, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4d99ff03-0d6c-4a03-9555-2cfd926a241e", "component_filename": "spring-web-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "org.springframework:spring-web is vulnerable to Open Redirect. The vulnerability is due to insufficient validation checks of the host URL within `UriComponentsBuilder.java`. If an application utilizes the host validation checks, an attacker can perform an open redirect or Server-Side Request Forgery (SSRF) attack. Note that this vulnerability is the same as CVE-2024-22243 but with different input.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-20T16:25:21.225Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2024-22259", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-22259", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:P/A:N", "cvss3": {"score": 8.1, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2024-22259", "epss_score": 0.00043, "epss_percentile": 0.09089, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-web-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "org.springframework: spring-web is vulnerable Open Redirect. The vulnerability is caused due to improper validation checks on the host of the parsed URL, which could lead to potential SSRF attacks if the URL is utilized post-validation. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-04-18T20:52:16.335Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2024-22262", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-22262", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:P/A:N", "cvss3": {"score": 8.1, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2024-22262", "epss_score": 0.00043, "epss_percentile": 0.09089, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "org.springframework: spring-web is vulnerable Open Redirect. The vulnerability is caused due to improper validation checks on the host of the parsed URL, which could lead to potential SSRF attacks if the URL is utilized post-validation. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-04-18T20:52:14.058Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "ee9b8868-dd77-47d1-8019-7b21861a87f4", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2024-22262", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-22262", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:P/A:N", "cvss3": {"score": 8.1, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2024-22262", "epss_score": 0.00043, "epss_percentile": 0.09089, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4d99ff03-0d6c-4a03-9555-2cfd926a241e", "component_filename": "spring-web-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "org.springframework: spring-web is vulnerable Open Redirect. The vulnerability is caused due to improper validation checks on the host of the parsed URL, which could lead to potential SSRF attacks if the URL is utilized post-validation. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-04-18T20:52:16.335Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2024-22262", "cvss": 7.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-22262", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:C/I:P/A:N", "cvss3": {"score": 8.1, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2024-22262", "epss_score": 0.00043, "epss_percentile": 0.09089, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-web-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a (1) <x:parse> or (2) <x:transform> JSTL XML tag.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:45:23.864Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "8b4f55d4-ea0b-4115-a79f-41e564717d1e", "licenses": [{"license_id": "cddl-1.0", "risk_rating": "3"}, {"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2015-0254", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2015-0254", "severity": "High", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 8.3, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L"}, "exploitability": {"full_cve": "CVE-2015-0254", "epss_score": 0.07046, "epss_percentile": 0.94007, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f672a184-cdc9-4e26-8e4f-3e3906e3079f", "component_filename": "jstl-1.2.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\jstl-1.2.jar"}], "version": "1.2"}}, {"scan_type": "SCA", "description": "Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a (1) <x:parse> or (2) <x:transform> JSTL XML tag.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "8b4f55d4-ea0b-4115-a79f-41e564717d1e", "licenses": [{"license_id": "cddl-1.0", "risk_rating": "3"}, {"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2015-0254", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2015-0254", "severity": "High", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 8.3, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L"}, "exploitability": {"full_cve": "CVE-2015-0254", "epss_score": 0.07046, "epss_percentile": 0.94007, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f672a184-cdc9-4e26-8e4f-3e3906e3079f", "component_filename": "jstl-1.2.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/javax.servlet:jstl"}], "version": "1.2"}}, {"scan_type": "SCA", "description": "Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a (1) <x:parse> or (2) <x:transform> JSTL XML tag.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "8b4f55d4-ea0b-4115-a79f-41e564717d1e", "licenses": [{"license_id": "cddl-1.0", "risk_rating": "3"}, {"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2015-0254", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2015-0254", "severity": "High", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 8.3, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L"}, "exploitability": {"full_cve": "CVE-2015-0254", "epss_score": 0.07046, "epss_percentile": 0.94007, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f672a184-cdc9-4e26-8e4f-3e3906e3079f", "component_filename": "jstl-1.2.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/javax.servlet:jstl"}], "version": "1.2"}}, {"scan_type": "SCA", "description": "spring-boot-autoconfigure is vulnerable to Denial Of Service (DoS). The vulnerability is applicable when the application has Spring MVC auto-configuration enabled and uses the Spring Boot welcome page, which can be either static or templated, and the application is deployed behind a proxy which caches the 404 responses. An attacker can cause the application to crash by submitting a request to the welcome page which the server is unable to properly respond to.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 400, "name": "Uncontrolled Resource Consumption", "href": "https://api.veracode.com/appsec/v1/cwes/400"}, "component_id": "b9352d09-4d50-4f03-9e6d-3a0209047cc3", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-20883", "cvss": 7.1, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-20883", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-20883", "epss_score": 0.00124, "epss_percentile": 0.47214, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "2535e1e7-68c2-458d-ae0e-e0c220b526de", "component_filename": "spring-boot-autoconfigure-2.3.1.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework.boot:spring-boot-autoconfigure"}], "version": "2.3.1.RELEASE"}}, {"scan_type": "SCA", "description": "org.apache.tomcat:tomcat-coyote is vulnerable to Denial Of Service (DoS). Bypassing the restriction on uploaded request parts may result in a Denial of Service if HTTP connector settings are different from the default. The Denial of Service may occur if a request query string exactly matches the `maxParameterCount` parameters.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 193, "name": "Off-by-one Error", "href": "https://api.veracode.com/appsec/v1/cwes/193"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-28709", "cvss": 7.1, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-28709", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-28709", "epss_score": 0.00668, "epss_percentile": 0.7986, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "org.apache.tomcat, tomcat-coyote is vulnerable to Denial of Service (DoS). The vulnerability is due to improper request handling when processing an HTTP/2 request that exceeds any of the configured limits for headers, leading to the associated HTTP/2 stream not being reset until after all of the headers had been processed. This vulnerability allows an attacker to send requests with excessively large headers or too many headers which can result in Denial Of Service (DoS) attacks.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-19T22:22:02.016Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 20, "name": "Improper Input Validation", "href": "https://api.veracode.com/appsec/v1/cwes/20"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2024-24549", "cvss": 7.1, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-24549", "severity": "High", "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:C", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2024-24549", "epss_score": 0.00044, "epss_percentile": 0.10401, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "org.apache.tomcat: tomcat-catalina is vulnerable to Request Smuggling. The vulnerability is due to the `realReadBytes` function in `InputBuffer.java` because there is no check or validation for the size of the HTTP request data, specifically the HTTP trailer headers. This allows an attacker to add excessively large headers and that could be processed without any constraints, leading to potential request smuggling.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-11-29T21:08:02.508Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 444, "name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')", "href": "https://api.veracode.com/appsec/v1/cwes/444"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-46589", "cvss": 6.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-46589", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:N/I:C/A:N", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2023-46589", "epss_score": 0.00484, "epss_percentile": 0.76124, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "5733da72-0759-44ea-bdcc-4a3eb316b75d", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2018-1272", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-1272", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:S/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2018-1272", "epss_score": 0.00189, "epss_percentile": 0.56532, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f03ef4c5-484e-48a0-bffc-d46435c46fce", "component_filename": "spring-core-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-core"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.532Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "5733da72-0759-44ea-bdcc-4a3eb316b75d", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2018-1272", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-1272", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:S/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2018-1272", "epss_score": 0.00189, "epss_percentile": 0.56532, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f03ef4c5-484e-48a0-bffc-d46435c46fce", "component_filename": "spring-core-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-core-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "JMSAppender in log4j is vulnerable to deserialization of untrusted object. When an application is configured to use JMSAppender with the setting TopicBindingName or TopicConnectionFactoryBindingName to something that JNDI can handle - for example \"ldap://host:port/a\", an attacker is able to execute code on the server as in Log4j 2.x CVE-2021-44228. However, this vulnerability is only depending on configuration. Note: This CVE is for Log4j 1.x and its corresponding flaw information for Log4j 2.x is in CVE-2021-44228.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-4104", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-4104", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2021-4104", "epss_score": 0.12726, "epss_percentile": 0.95505, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "JMSAppender in log4j is vulnerable to deserialization of untrusted object. When an application is configured to use JMSAppender with the setting TopicBindingName or TopicConnectionFactoryBindingName to something that JNDI can handle - for example \"ldap://host:port/a\", an attacker is able to execute code on the server as in Log4j 2.x CVE-2021-44228. However, this vulnerability is only depending on configuration. Note: This CVE is for Log4j 1.x and its corresponding flaw information for Log4j 2.x is in CVE-2021-44228.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-4104", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-4104", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2021-4104", "epss_score": 0.12726, "epss_percentile": 0.95505, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "JMSAppender in log4j is vulnerable to deserialization of untrusted object. When an application is configured to use JMSAppender with the setting TopicBindingName or TopicConnectionFactoryBindingName to something that JNDI can handle - for example \"ldap://host:port/a\", an attacker is able to execute code on the server as in Log4j 2.x CVE-2021-44228. However, this vulnerability is only depending on configuration. Note: This CVE is for Log4j 1.x and its corresponding flaw information for Log4j 2.x is in CVE-2021-44228.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-06-29T20:00:23.408Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2021-4104", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-4104", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2021-4104", "epss_score": 0.12726, "epss_percentile": 0.95505, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\log4j-1.2.17.jar"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "JMSSink in log4j is vulnerable to deserialization of untrusted object. The insecure use of JNDI in JMSSink allows an attacker to send malicious object in LDAP store if it is accessible by an attacker or is configured to use an untrusted site, leading to a remote code execution.  Note: this vulnerability only affects the applications specifically configured to use JMSSink, which is not the default. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-23302", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23302", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "cvss3": {"score": 8.8, "severity": "High", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23302", "epss_score": 0.00543, "epss_percentile": 0.77493, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "JMSSink in log4j is vulnerable to deserialization of untrusted object. The insecure use of JNDI in JMSSink allows an attacker to send malicious object in LDAP store if it is accessible by an attacker or is configured to use an untrusted site, leading to a remote code execution.  Note: this vulnerability only affects the applications specifically configured to use JMSSink, which is not the default. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-23302", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23302", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "cvss3": {"score": 8.8, "severity": "High", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23302", "epss_score": 0.00543, "epss_percentile": 0.77493, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "JMSSink in log4j is vulnerable to deserialization of untrusted object. The insecure use of JNDI in JMSSink allows an attacker to send malicious object in LDAP store if it is accessible by an attacker or is configured to use an untrusted site, leading to a remote code execution.  Note: this vulnerability only affects the applications specifically configured to use JMSSink, which is not the default. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-06-29T20:00:23.408Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2022-23302", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23302", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "cvss3": {"score": 8.8, "severity": "High", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23302", "epss_score": 0.00543, "epss_percentile": 0.77493, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\log4j-1.2.17.jar"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "jackson-databind is vulnerable to Denial Of Service (DoS). The vulnerability exists because the `writeExternal` function in `NodeSerialization.java` does not properly handle JDK serialization of the `JsonNode`, which allows an attacker to crash the application(2 GB transient heap usage per read) if uses JDK serialization to serialize a `JsonNode`.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "edd26e9d-0c8f-4e6e-96c3-67603d61499c", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-46877", "cvss": 5.4, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-46877", "severity": "Medium", "vector": "AV:N/AC:H/Au:N/C:N/I:N/A:C", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2021-46877", "epss_score": 0.00105, "epss_percentile": 0.43144, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "dfa1e849-4a3b-4c27-ab47-707df4258b4a", "component_filename": "jackson-databind-2.11.0.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/com.fasterxml.jackson.core:jackson-databind"}], "version": "2.11.0"}}, {"scan_type": "SCA", "description": "keycloak-saml-core is vulnerable to denial of service (DoS) attacks. The vulnerability exists due to the mishandling of a `Logout` request with an `Extensions` in the middle of the request.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 835, "name": "Loop with Unreachable Exit Condition ('Infinite Loop')", "href": "https://api.veracode.com/appsec/v1/cwes/835"}, "component_id": "a71a1300-9a17-45dd-81a6-bd4ec5dd18d9", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2017-2646", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2017-2646", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2017-2646", "epss_score": 0.00085, "epss_percentile": 0.36549, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "aca62cd6-5a00-494a-8f26-745a2aac708e", "component_filename": "keycloak-saml-core-1.8.1.Final.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.keycloak:keycloak-saml-core"}], "version": "1.8.1.Final"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to denial of service (DoS). A malicious user can pass a HTTP request containing a header with overlapping ranges, leading to an error which would crash the service.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "d71d3730-b197-4fac-8aff-f89ed626b5a6", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2018-15756", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-15756", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2018-15756", "epss_score": 0.00449, "epss_percentile": 0.75233, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "edbc8ae1-9d6f-4b7a-892f-6de4bef1092b", "component_filename": "spring-webmvc-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-webmvc"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to denial of service (DoS). A malicious user can pass a HTTP request containing a header with overlapping ranges, leading to an error which would crash the service.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2018-15756", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-15756", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2018-15756", "epss_score": 0.00449, "epss_percentile": 0.75233, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to denial of service (DoS). A malicious user can pass a HTTP request containing a header with overlapping ranges, leading to an error which would crash the service.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.647Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "d71d3730-b197-4fac-8aff-f89ed626b5a6", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2018-15756", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-15756", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2018-15756", "epss_score": 0.00449, "epss_percentile": 0.75233, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "edbc8ae1-9d6f-4b7a-892f-6de4bef1092b", "component_filename": "spring-webmvc-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-webmvc-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to denial of service (DoS). A malicious user can pass a HTTP request containing a header with overlapping ranges, leading to an error which would crash the service.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.730Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2018-15756", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-15756", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2018-15756", "epss_score": 0.00449, "epss_percentile": 0.75233, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-web-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "apache tomcat is vulnerable to denial of service. The HTTP/1.1 processor is not released after an upgrade to HTTP/2, allowing an attacker to cause a denial of service condition due to an `OutOfMemoryException` by sending a large number of upgrade requests.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 476, "name": "NULL Pointer Dereference", "href": "https://api.veracode.com/appsec/v1/cwes/476"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2020-13934", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-13934", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2020-13934", "epss_score": 0.91221, "epss_percentile": 0.98889, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "apache tomcat is vulnerable to denial of service. An infinite loop to occurs when invalid payload lengths are parsed. An attacker is able to cause a denial of service condition in the application via malicious WebSocket frames with invalid payload lengths.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 835, "name": "Loop with Unreachable Exit Condition ('Infinite Loop')", "href": "https://api.veracode.com/appsec/v1/cwes/835"}, "component_id": "31117674-2020-41e0-be67-1385f0a4257d", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2020-13935", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-13935", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"}, "exploitability": {"full_cve": "CVE-2020-13935", "epss_score": 0.148, "epss_percentile": 0.95823, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "91009b0b-fa50-479c-995a-e13648095784", "component_filename": "tomcat-embed-websocket-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-websocket"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "tomcat is vulnerable to denial of service. Re-use of an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream would most likely lead to an error and the closure of the HTTP/2 connection. It is also possible that information could leak between requests.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 200, "name": "Exposure of Sensitive Information to an Unauthorized Actor", "href": "https://api.veracode.com/appsec/v1/cwes/200"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2020-17527", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-17527", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2020-17527", "epss_score": 0.003, "epss_percentile": 0.69681, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "com.fasterxml.jackson.core:jackson-databind is vulnerable to denial of service. A malicious user is able to cause a `StackOverflow` exception using a large depth of nested objects resulting in a denial of service conditions.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 787, "name": "Out-of-bounds Write", "href": "https://api.veracode.com/appsec/v1/cwes/787"}, "component_id": "edd26e9d-0c8f-4e6e-96c3-67603d61499c", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2020-36518", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-36518", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2020-36518", "epss_score": 0.00218, "epss_percentile": 0.60133, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "dfa1e849-4a3b-4c27-ab47-707df4258b4a", "component_filename": "jackson-databind-2.11.0.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/com.fasterxml.jackson.core:jackson-databind"}], "version": "2.11.0"}}, {"scan_type": "SCA", "description": " tomcat-coyote is vulnerable to information leakage. When responding to new h2c connection requests, a request mix-up occurs with h2c as the request headers and a limited amount of request body is duplicated from one request to another, resulting in the request being seen by another user.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 200, "name": "Exposure of Sensitive Information to an Unauthorized Actor", "href": "https://api.veracode.com/appsec/v1/cwes/200"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-25122", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-25122", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2021-25122", "epss_score": 0.00217, "epss_percentile": 0.60059, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "Apache Santuario is vulnerable to bypass of secure validation. Lack of secure handling of `secureValidation` property allows an attacker to abuse an XPath Transform and to extract any local .xml files in a RetrievalMethod element during the creation of a KeyInfo from a KeyInfoReference element.\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 200, "name": "Exposure of Sensitive Information to an Unauthorized Actor", "href": "https://api.veracode.com/appsec/v1/cwes/200"}, "component_id": "36fa0a91-39cf-4663-96e1-a413324a37df", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-40690", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-40690", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2021-40690", "epss_score": 0.00108, "epss_percentile": 0.4393, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "3799966b-3dd2-4e4a-8d23-33b1e150edf1", "component_filename": "xmlsec-1.5.1.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.santuario:xmlsec"}], "version": "1.5.1"}}, {"scan_type": "SCA", "description": "com.fasterxml.jackson.core:jackson-databind is vulnerable to denial of service. The vulnerability exists in `_deserializeWrappedValue` function in `StdDeserializer.java`, which allows an attacker to cause denial of service conditions via a maliciously crafted input, due to the resource exhaustion which occurs when processing a deeply nested array .", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "edd26e9d-0c8f-4e6e-96c3-67603d61499c", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-42003", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-42003", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-42003", "epss_score": 0.00252, "epss_percentile": 0.65365, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "dfa1e849-4a3b-4c27-ab47-707df4258b4a", "component_filename": "jackson-databind-2.11.0.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/com.fasterxml.jackson.core:jackson-databind"}], "version": "2.11.0"}}, {"scan_type": "SCA", "description": "jackson-databind is vulnerable to denial of service. The vulnerability exists in `_deserializeFromArray` function in `BeanDeserializer.java` due to resource exhaustion when processing a deeply nested array which allows an attacker to cause an application crash via a malicious input.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "edd26e9d-0c8f-4e6e-96c3-67603d61499c", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-42004", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-42004", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-42004", "epss_score": 0.00264, "epss_percentile": 0.66331, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "dfa1e849-4a3b-4c27-ab47-707df4258b4a", "component_filename": "jackson-databind-2.11.0.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/com.fasterxml.jackson.core:jackson-databind"}], "version": "2.11.0"}}, {"scan_type": "SCA", "description": "Apache Commons FileUpload is vulnerable to Denial Of Service (DoS). The vulnerability exists because the default configuration doesn't limit the number of request parts to be processed which allows an attacker to submit an upload with unlimited file parts, resulting in Denial of Service.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-02-24T18:38:34.874Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "c9daab8d-4347-44b0-ae8f-3d9a6060193f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2023-24998", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-24998", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-24998", "epss_score": 0.03359, "epss_percentile": 0.91446, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "98730b7d-0c28-4060-8866-c94dc3631c48", "component_filename": "commons-fileupload-1.3.2.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-fileupload:commons-fileupload"}], "version": "1.3.2"}}, {"scan_type": "SCA", "description": "Apache Commons FileUpload is vulnerable to Denial Of Service (DoS). The vulnerability exists because the default configuration doesn't limit the number of request parts to be processed which allows an attacker to submit an upload with unlimited file parts, resulting in Denial of Service.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "c9daab8d-4347-44b0-ae8f-3d9a6060193f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2023-24998", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-24998", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-24998", "epss_score": 0.03359, "epss_percentile": 0.91446, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "98730b7d-0c28-4060-8866-c94dc3631c48", "component_filename": "commons-fileupload-1.3.2.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-fileupload:commons-fileupload"}], "version": "1.3.2"}}, {"scan_type": "SCA", "description": "Apache Commons FileUpload is vulnerable to Denial Of Service (DoS). The vulnerability exists because the default configuration doesn't limit the number of request parts to be processed which allows an attacker to submit an upload with unlimited file parts, resulting in Denial of Service.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-02-24T18:38:34.874Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "c9daab8d-4347-44b0-ae8f-3d9a6060193f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2023-24998", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-24998", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-24998", "epss_score": 0.03359, "epss_percentile": 0.91446, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "98730b7d-0c28-4060-8866-c94dc3631c48", "component_filename": "commons-fileupload-1.3.2.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\commons-fileupload-1.3.2.jar"}], "version": "1.3.2"}}, {"scan_type": "SCA", "description": "log4j:log4j is vulnerable to Denial of Service (DoS) attacks. The vulnerability is due to the Chainsaw or SocketAppender components processing a logging entry with either a deeply nested hashmap or hashtable, which can lead to memory exhaustion when the object is deserialized. An attacker can submit a crafted logging entry and cause Denial of Service if the JRE is below 1.7.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-03-13T17:24:19.532Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-26464", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-26464", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-26464", "epss_score": 0.00206, "epss_percentile": 0.58867, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "log4j:log4j is vulnerable to Denial of Service (DoS) attacks. The vulnerability is due to the Chainsaw or SocketAppender components processing a logging entry with either a deeply nested hashmap or hashtable, which can lead to memory exhaustion when the object is deserialized. An attacker can submit a crafted logging entry and cause Denial of Service if the JRE is below 1.7.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-26464", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-26464", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-26464", "epss_score": 0.00206, "epss_percentile": 0.58867, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/log4j:log4j"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "log4j:log4j is vulnerable to Denial of Service (DoS) attacks. The vulnerability is due to the Chainsaw or SocketAppender components processing a logging entry with either a deeply nested hashmap or hashtable, which can lead to memory exhaustion when the object is deserialized. An attacker can submit a crafted logging entry and cause Denial of Service if the JRE is below 1.7.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-03-13T17:24:19.532Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "8d9a63d8-808b-4233-9e54-279d0f51826f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2023-26464", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-26464", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-26464", "epss_score": 0.00206, "epss_percentile": 0.58867, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f5742b49-ceaa-40cd-a193-2d7a93271b0b", "component_filename": "log4j-1.2.17.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\log4j-1.2.17.jar"}], "version": "1.2.17"}}, {"scan_type": "SCA", "description": "ch.qos.logback:logback-classic is vulnerable to Denial Of Service (DoS). The vulnerability is due to the `readObject()` method in the `LoggingEventVO` class which fails to check the length of an argument array during deserialization. An attacker could send crafted data, resulting in Denial of Service (DoS). Note that this vulnerability is only exploitable when the logback-receiver component is enabled and also reachable by the attacker.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-06-14T17:31:02.774Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "47004b3b-df69-4a60-a235-ac4a0e62d206", "licenses": [{"license_id": "epl-1.0", "risk_rating": "3"}, {"license_id": "lgpl-2.1", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-6481", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-6481", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-6481", "epss_score": 0.00046, "epss_percentile": 0.17079, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4bf6461f-7eb2-4423-a3f1-7a7780de5a4d", "component_filename": "logback-classic-1.2.3.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/ch.qos.logback:logback-classic"}], "version": "1.2.3"}}, {"scan_type": "SCA", "description": "ch.qos.logback:logback-classic is vulnerable to Denial Of Service (DoS). The vulnerability is due to the `readObject()` method in the `LoggingEventVO` class which fails to check the length of an argument array during deserialization. An attacker could send crafted data, resulting in Denial of Service (DoS). Note that this vulnerability is only exploitable when the logback-receiver component is enabled and also reachable by the attacker.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-06-14T17:30:37.673Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "58dab3c5-b691-4006-9be3-91edbf87d27f", "licenses": [{"license_id": "epl-1.0", "risk_rating": "3"}, {"license_id": "lgpl-2.1", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-6481", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-6481", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-6481", "epss_score": 0.00046, "epss_percentile": 0.17079, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "1a254046-9ba0-4e4f-b829-b0a352b2c71a", "component_filename": "logback-core-1.2.3.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/ch.qos.logback:logback-core"}], "version": "1.2.3"}}, {"scan_type": "SCA", "description": "org.apache.tomcat: tomcat-websocket is vulnerable to Denial of Service (DoS). The vulnerability is due to improper cleanup of WebSocket connections during a session timeout. If a client fails to send a close message within the timeout period, the websocket connection will continue to hold resources, which can result in Denial of Service.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-15T17:06:31.509Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 459, "name": "Incomplete Cleanup", "href": "https://api.veracode.com/appsec/v1/cwes/459"}, "component_id": "31117674-2020-41e0-be67-1385f0a4257d", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2024-23672", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-23672", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2024-23672", "epss_score": 0.00044, "epss_percentile": 0.10401, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "91009b0b-fa50-479c-995a-e13648095784", "component_filename": "tomcat-embed-websocket-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-websocket"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "ch.qos.logback:logback-classic is vulnerable to Denial Of Service (DoS). The vulnerability is due a missing check on the length of an argument array during the deserialization process. This could lead to Denial of Service attacks by sending crafted data.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-11-30T21:20:42.179Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "47004b3b-df69-4a60-a235-ac4a0e62d206", "licenses": [{"license_id": "epl-1.0", "risk_rating": "3"}, {"license_id": "lgpl-2.1", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-6378", "cvss": 4.9, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-6378", "severity": "Medium", "vector": "AV:L/AC:L/Au:N/C:N/I:N/A:C", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-6378", "epss_score": 0.00046, "epss_percentile": 0.17079, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4bf6461f-7eb2-4423-a3f1-7a7780de5a4d", "component_filename": "logback-classic-1.2.3.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/ch.qos.logback:logback-classic"}], "version": "1.2.3"}}, {"scan_type": "SCA", "description": "ch.qos.logback:logback-classic is vulnerable to Denial Of Service (DoS). The vulnerability is due a missing check on the length of an argument array during the deserialization process. This could lead to Denial of Service attacks by sending crafted data.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-11-30T21:20:34.466Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "58dab3c5-b691-4006-9be3-91edbf87d27f", "licenses": [{"license_id": "epl-1.0", "risk_rating": "3"}, {"license_id": "lgpl-2.1", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-6378", "cvss": 4.9, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-6378", "severity": "Medium", "vector": "AV:L/AC:L/Au:N/C:N/I:N/A:C", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-6378", "epss_score": 0.00046, "epss_percentile": 0.17079, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "1a254046-9ba0-4e4f-b829-b0a352b2c71a", "component_filename": "logback-core-1.2.3.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/ch.qos.logback:logback-core"}], "version": "1.2.3"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to privilege escalation. Creating or recreating the temporary storage directory creates multiple instances collision which allows a locally authenticated malicious user to read or modify files being uploaded or overwrite arbitrary files with multipart request data.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 668, "name": "Exposure of Resource to Wrong Sphere", "href": "https://api.veracode.com/appsec/v1/cwes/668"}, "component_id": "ee9b8868-dd77-47d1-8019-7b21861a87f4", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-22118", "cvss": 4.6, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-22118", "severity": "Medium", "vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 7.8, "severity": "High", "vector": "AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2021-22118", "epss_score": 0.00046, "epss_percentile": 0.17228, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4d99ff03-0d6c-4a03-9555-2cfd926a241e", "component_filename": "spring-web-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "tomcat9 is vulnerable to remote code execution (RCE). The vulnerability exists through the incomplete fix for CVE-2020-9484, with a configuration edge case that was highly unlikely to be used.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-25329", "cvss": 4.4, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-25329", "severity": "Medium", "vector": "AV:L/AC:M/Au:N/C:P/I:P/A:P", "cvss3": {"score": 7.0, "severity": "High", "vector": "AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2021-25329", "epss_score": 0.00055, "epss_percentile": 0.23132, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "spring-webmvc is vulnerable to cross-domain requests. The vulnerability exists as JSONP is enabled through the `jsonp` and `callback` JSONP parameters in MappingJackson2JsonView by default.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 829, "name": "Inclusion of Functionality from Untrusted Control Sphere", "href": "https://api.veracode.com/appsec/v1/cwes/829"}, "component_id": "d71d3730-b197-4fac-8aff-f89ed626b5a6", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2018-11040", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-11040", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2018-11040", "epss_score": 0.00264, "epss_percentile": 0.66333, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "edbc8ae1-9d6f-4b7a-892f-6de4bef1092b", "component_filename": "spring-webmvc-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-webmvc"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-webmvc is vulnerable to cross-domain requests. The vulnerability exists as JSONP is enabled through the `jsonp` and `callback` JSONP parameters in MappingJackson2JsonView by default.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.647Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 829, "name": "Inclusion of Functionality from Untrusted Control Sphere", "href": "https://api.veracode.com/appsec/v1/cwes/829"}, "component_id": "d71d3730-b197-4fac-8aff-f89ed626b5a6", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2018-11040", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-11040", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2018-11040", "epss_score": 0.00264, "epss_percentile": 0.66333, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "edbc8ae1-9d6f-4b7a-892f-6de4bef1092b", "component_filename": "spring-webmvc-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-webmvc-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "snakeyaml is vulnerable to denial of service. The vulnerability exists because the `Composer` function of `Composer.java` does not properly restrict the nested depth limitation for collections, allowing an attacker to crash the application.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 776, "name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')", "href": "https://api.veracode.com/appsec/v1/cwes/776"}, "component_id": "e4889cf9-7ffc-4de7-b65f-e9a3568b304e", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-25857", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-25857", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-25857", "epss_score": 0.00182, "epss_percentile": 0.5568, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "64ddaa59-01df-4a07-8d64-b9f26bb3c4ee", "component_filename": "snakeyaml-1.26.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.yaml:snakeyaml"}], "version": "1.26"}}, {"scan_type": "SCA", "description": "tomcat-catalina is vulnerable to time of check to time of use. The vulnerability exists in `file` function of `FileStore.java` which allows an attacker to perform unauthenticated actions causing a race condition.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 4, "cwe": {"id": 367, "name": "Time-of-check Time-of-use (TOCTOU) Race Condition", "href": "https://api.veracode.com/appsec/v1/cwes/367"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-23181", "cvss": 3.7, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-23181", "severity": "Low", "vector": "AV:L/AC:H/Au:N/C:P/I:P/A:P", "cvss3": {"score": 7.0, "severity": "High", "vector": "AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-23181", "epss_score": 0.00043, "epss_percentile": 0.09847, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"issue_id": 219, "scan_type": "MANUAL", "description": "A secret API key that allows access to a third party credit query system is exposed in the organization's GitHub repository.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-25T17:45:59.115Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-03-25T17:49:54.194Z"}, "finding_details": {"severity": 3, "note": "CVSS v3 Vector: (AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L) = 5.6", "input_vector": "Exposed Secret API Key", "capec_id": 9, "module": "manual_analysis", "exploit_difficulty": 1, "cwe": {"id": 200, "name": "Exposure of Sensitive Information to an Unauthorized Actor", "href": "https://api.veracode.com/appsec/v1/cwes/200"}, "severity_desc": "Confidentially of the API token is completely compromised. Integrity of the company's account is partially compromised.", "exploit_desc": "An attacker could use the API Secret token to make calls on behalf of the company to the third party credit reporting site. This could affect both the account and reputation of the organization.", "remediation_desc": "Have the third party API issuer regenerate a new secret API token. Remove the publicly accessible key from Github.", "location": "https://www.github.com/verahackt/servicetest/sitedata.json", "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "cvss": 5.6, "exploitability": 2, "mpt_link": {"href": "https://api.veracode.com/mpt/v1/findings/87eee38e-dda3-472a-8d7a-656d78af05ed?include_artifacts=false"}}, "build_id": 17489771}, {"issue_id": 220, "scan_type": "MANUAL", "description": "It is possible to gather sensitive information about the remote host by sending public SNMP requests. The SNMP service is set to 'public' and exposes a large amount of information about the SNMP server as well as the network it monitors.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-25T17:45:59.115Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-03-25T17:49:54.194Z"}, "finding_details": {"severity": 3, "note": "CVSS v3 Vector: (AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N) = 4.8", "input_vector": "Public SNMP Community Strings", "capec_id": 9, "module": "manual_analysis", "exploit_difficulty": 2, "cwe": {"id": 285, "name": "Improper Authorization", "href": "https://api.veracode.com/appsec/v1/cwes/285"}, "severity_desc": "The server exposes a large amount of internal information about the system and network in response to anonymous SNMP requests, which affects the confidentiality of the system.", "exploit_desc": "The Simple Network Management Protocol (SNMP) is a commonly used network service. Its primary function is to provide network administrators with information about network connected devices. SNMP can be used to retrieve and modify system settings on a wide variety of devices, from network servers to routers and printers. An attacker can view sensitive private protocols such as ifconfig and netops via a public SNMP community string query.", "remediation_desc": "Block SNMP services from the Internet or remove the 'public' configuration to disallow anonymous queries.", "location": "Host: 10.10.253.11 Port: 161", "finding_category": {"id": 29, "name": "Authorization Issues", "href": "https://api.veracode.com/appsec/v1/categories/29"}, "cvss": 4.8, "exploitability": 2, "mpt_link": {"href": "https://api.veracode.com/mpt/v1/findings/9ee0163f-8f49-4cda-b587-a8f2188810e9?include_artifacts=false"}}, "build_id": 17489771}, {"issue_id": 221, "scan_type": "MANUAL", "description": "The web server's web.config file is accessible via HTTP requests.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-25T17:45:59.115Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-03-25T17:49:54.194Z"}, "finding_details": {"severity": 3, "note": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N = 5.3", "input_vector": "Web Server Configuration", "capec_id": 9, "module": "manual_analysis", "exploit_difficulty": 1, "cwe": {"id": 200, "name": "Exposure of Sensitive Information to an Unauthorized Actor", "href": "https://api.veracode.com/appsec/v1/cwes/200"}, "severity_desc": "Confidentiality of the server configuration is partially compromised.", "exploit_desc": "Most directory enumeration tools will have a wordlist that includes \"web.config\", meaning that discovery of the file is trivial.", "remediation_desc": "Configure the web server so that the web.config file is not accessible via the web server itself. Instead, a 404 page should be presented to the user.", "location": "10.10.253.84", "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "cvss": 5.3, "exploitability": 2, "mpt_link": {"href": "https://api.veracode.com/mpt/v1/findings/null?include_artifacts=false"}}, "build_id": 17489771}, {"issue_id": 15, "scan_type": "STATIC", "description": "<span>The serialized-object data stream used in the call to java.io.ObjectInput.readObject() appears to have been constructed with untrusted data. Attacker manipulation of this stream has the ability to cause the creation of objects of arbitrary Serializable types.  Paired with a weakness in another class's constructor, this could result in a denial of service, code execution, or data corruption vulnerability. readObject() was called on the in object, which contains tainted data. The tainted data originated from an earlier call to javax.servlet.http.HttpServletRequest.getCookies.</span> <span>Avoid passing untrusted data; if the data is untrusted, consider switching to a safer serialization scheme such as JSON.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/502.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "file_path": "com/veracode/verademo/utils/UserFactory.java", "file_name": "UserFactory.java", "module": "verademo.war", "relative_location": 74, "finding_category": {"id": 22, "name": "Encapsulation", "href": "https://api.veracode.com/appsec/v1/categories/22"}, "procedure": "com.veracode.verademo.utils.UserFactory.createFromRequest", "exploitability": 0, "attack_vector": "java.io.ObjectInput.readObject", "file_line_number": 44}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-103 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:05:20.152Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 99, "scan_type": "STATIC", "description": "<span>This function uses the MD5() function, which uses a hash algorithm that is considered weak. In recent years, researchers have demonstrated ways to breach many uses of previously-thought-safe hash functions such as MD5. </span> <span>Consider using a stronger algorithm in order to prevent attackers from being able to manipulate hash results. If this algorithm is being used to hash passwords, then consider using a strong computationally-hard algorithm such as PBKDF2 or bcrypt instead of a plain hashing algorithm.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/327.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 327, "name": "Use of a Broken or Risky Cryptographic Algorithm", "href": "https://api.veracode.com/appsec/v1/cwes/327"}, "file_path": "com/veracode/verademo/utils/User.java", "file_name": "User.java", "module": "verademo.war", "relative_location": 19, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.utils.User.md5", "exploitability": 1, "attack_vector": "java.security.MessageDigest.getInstance", "file_line_number": 107}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-101 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:05:16.007Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 131, "scan_type": "STATIC", "description": "<span>This variable assignment uses a hard-coded password that may compromise system security in a way that cannot be easily remedied.  The use of a hard-coded password significantly increases the possibility that the account being protected will be compromised.  Moreover, the password cannot be changed without patching the software.  If a hard-coded password is compromised in a commercial product, all deployed instances may be vulnerable to attack.  In some cases, this finding may indicate a reference to a password (e.g. the name of a key in a properties file) rather than an actual password. JDBC_PASSWORD initializer</span> <span>Store passwords out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files. An HSM may be appropriate for particularly sensitive credentials.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/259.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 259, "name": "Use of Hard-coded Password", "href": "https://api.veracode.com/appsec/v1/cwes/259"}, "file_path": "com/veracode/verademo/utils/Constants.java", "file_name": "Constants.java", "module": "verademo.war", "relative_location": -1, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "UNKNOWN", "exploitability": 1, "attack_vector": "JDBC_PASSWORD initializer", "file_line_number": 1}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-63 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:47.977Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 78, "scan_type": "STATIC", "description": "<span>This variable assignment uses a hard-coded password that may compromise system security in a way that cannot be easily remedied.  The use of a hard-coded password significantly increases the possibility that the account being protected will be compromised.  Moreover, the password cannot be changed without patching the software.  If a hard-coded password is compromised in a commercial product, all deployed instances may be vulnerable to attack.  In some cases, this finding may indicate a reference to a password (e.g. the name of a key in a properties file) rather than an actual password. JDBC_PASSWORD</span> <span>Store passwords out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files. An HSM may be appropriate for particularly sensitive credentials.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/259.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 259, "name": "Use of Hard-coded Password", "href": "https://api.veracode.com/appsec/v1/cwes/259"}, "file_path": "com/veracode/verademo/utils/Constants.java", "file_name": "Constants.java", "module": "verademo.war", "relative_location": 12, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.utils.Constants.!ctor", "exploitability": 1, "attack_vector": "JDBC_PASSWORD", "file_line_number": 18}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-64 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:49.937Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 17, "scan_type": "STATIC", "description": "<span>This call to showLogin() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 27, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "com.veracode.verademo.controller.UserController.showLogin", "exploitability": 1, "attack_vector": "showLogin", "file_line_number": 90}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-275 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:09.001Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 111, "scan_type": "STATIC", "description": "<span>This call to showLogin() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 63, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "com.veracode.verademo.controller.UserController.showLogin", "exploitability": 1, "attack_vector": "showLogin", "file_line_number": 102}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-276 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:11.709Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 59, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 88, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.showLogin", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 119}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-50 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:18.148Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 359, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 2, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 142}, "build_id": 33657073}, {"issue_id": 360, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 18, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 168}, "build_id": 33657073}, {"issue_id": 92, "scan_type": "STATIC", "description": "<span>This call to javax.servlet.http.HttpServletResponse.addCookie() contains an HTTP response splitting flaw.  Writing untrusted input into an HTTP header allows an attacker to manipulate the HTTP response rendered by the browser, to inject additional headers or an entire response body into the response stream. Injecting headers can be used to trick various security mechanisms in browsers into allowing XSS style attacks. Injecting entire response bodies can not only cause XSS attacks to succeed but may even poison the cache of any intermediary proxies between the clients and the application server. The first argument to addCookie() contains tainted data from the variables (new Cookie(...)). The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Escape, encode, or remove carriage return and line feed characters from untrusted data before inclusion in HTTP response headers.  Whenever possible, use a security library such as ESAPI that provides safe versions of addHeader(), etc. that will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/113.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/HTTP_Response_Splitting\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 113, "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')", "href": "https://api.veracode.com/appsec/v1/cwes/113"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 22, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 0, "attack_vector": "javax.servlet.http.HttpServletResponse.addCookie", "file_line_number": 176}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-31 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:34.725Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 361, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 33, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 187}, "build_id": 33657073}, {"issue_id": 362, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 39, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 192}, "build_id": 33657073}, {"issue_id": 135, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 234}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-51 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:20.645Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 23, "scan_type": "STATIC", "description": "<span>This call to processLogin() contains a path manipulation flaw.  The argument to the function is a filename constructed using untrusted input.  If an attacker is allowed to specify all or part of the filename, it may be possible to gain unauthorized access to files on the server, including those outside the webroot, that would be normally be inaccessible to end users.  The level of exposure depends on the effectiveness of input validation routines, if any. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/73.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 73, "name": "External Control of File Name or Path", "href": "https://api.veracode.com/appsec/v1/cwes/73"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 1, "name": "Directory Traversal", "href": "https://api.veracode.com/appsec/v1/categories/1"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 0, "attack_vector": "processLogin", "file_line_number": 235}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-270 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:51:54.974Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 363, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 8, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 241}, "build_id": 33657073}, {"issue_id": 74, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sql. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 31, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 253}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-53 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:25.209Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 44, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable formatString. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 58, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 259}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-54 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:27.405Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 36, "scan_type": "STATIC", "description": "<span>This call to showPasswordHint() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 85, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 0, "attack_vector": "showPasswordHint", "file_line_number": 260}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-99 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:05:11.375Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 60, "scan_type": "STATIC", "description": "<span>This call to showPasswordHint() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 93, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 0, "attack_vector": "showPasswordHint", "file_line_number": 265}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-100 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:05:13.433Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 364, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 21, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.showTotp", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 286}, "build_id": 33657073}, {"issue_id": 373, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sql. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 47, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.showTotp", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 296}, "build_id": 33657073}, {"issue_id": 374, "scan_type": "STATIC", "description": "<span>This variable assignment uses a hard-coded password that may compromise system security in a way that cannot be easily remedied.  The use of a hard-coded password significantly increases the possibility that the account being protected will be compromised.  Moreover, the password cannot be changed without patching the software.  If a hard-coded password is compromised in a commercial product, all deployed instances may be vulnerable to attack.  In some cases, this finding may indicate a reference to a password (e.g. the name of a key in a properties file) rather than an actual password. totpSecret</span> <span>Store passwords out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files. An HSM may be appropriate for particularly sensitive credentials.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/259.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 259, "name": "Use of Hard-coded Password", "href": "https://api.veracode.com/appsec/v1/cwes/259"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 85, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.UserController.showTotp", "exploitability": 1, "attack_vector": "totpSecret", "file_line_number": 304}, "build_id": 33657073}, {"issue_id": 375, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 17, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processTotp", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 327}, "build_id": 33657073}, {"issue_id": 376, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sql. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 36, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processTotp", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 338}, "build_id": 33657073}, {"issue_id": 84, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable query. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 66, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processRegisterFinish", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 486}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-55 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:29.776Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 93, "scan_type": "STATIC", "description": "<span>This call to javax.mail.Message.setSubject() contains a CRLF injection flaw.  Writing untrusted input to an interface or external application that treats the CRLF (carriage return line feed) sequence as a delimiter to separate lines or records can result in that data being misinterpreted. The first argument to setSubject() contains tainted data. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Sanitize CRLF sequences from untrusted input.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/93.html\">CWE</a> <a href=\"https://owasp.org/www-community/vulnerabilities/CRLF_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 93, "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/93"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 68, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.emailUser", "exploitability": 1, "attack_vector": "javax.mail.Message.setSubject", "file_line_number": 529}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-30 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:32.074Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 79, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sqlMyEvents. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 37, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.showProfile", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 587}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-56 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:31.990Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 142, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sql. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 50, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.showProfile", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 599}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-57 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:34.623Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 2, "scan_type": "STATIC", "description": "<span>This call to javax.servlet.http.HttpServletResponse.addCookie() contains an HTTP response splitting flaw.  Writing untrusted input into an HTTP header allows an attacker to manipulate the HTTP response rendered by the browser, to inject additional headers or an entire response body into the response stream. Injecting headers can be used to trick various security mechanisms in browsers into allowing XSS style attacks. Injecting entire response bodies can not only cause XSS attacks to succeed but may even poison the cache of any intermediary proxies between the clients and the application server. The first argument to addCookie() contains tainted data from the variable cookie. The tainted data originated from earlier calls to javax.servlet.http.HttpServletRequest.getCookies, and AnnotationVirtualController.vc_annotation_entry.</span> <span>Escape, encode, or remove carriage return and line feed characters from untrusted data before inclusion in HTTP response headers.  Whenever possible, use a security library such as ESAPI that provides safe versions of addHeader(), etc. that will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/113.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/HTTP_Response_Splitting\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 113, "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')", "href": "https://api.veracode.com/appsec/v1/cwes/113"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 63, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processProfile", "exploitability": 1, "attack_vector": "javax.servlet.http.HttpServletResponse.addCookie", "file_line_number": 718}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-32 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:37.055Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 6, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 87, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.processProfile", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 745}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-58 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:37.041Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 42, "scan_type": "STATIC", "description": "<span>This call to java.io.File.!operator_javanewinit() contains a path manipulation flaw.  The argument to the function is a filename constructed using untrusted input.  If an attacker is allowed to specify all or part of the filename, it may be possible to gain unauthorized access to files on the server, including those outside the webroot, that would be normally be inaccessible to end users.  The level of exposure depends on the effectiveness of input validation routines, if any. The first argument to !operator_javanewinit() contains tainted data from the variable path. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/73.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 73, "name": "External Control of File Name or Path", "href": "https://api.veracode.com/appsec/v1/cwes/73"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 89, "finding_category": {"id": 1, "name": "Directory Traversal", "href": "https://api.veracode.com/appsec/v1/categories/1"}, "procedure": "com.veracode.verademo.controller.UserController.processProfile", "exploitability": 0, "attack_vector": "java.io.File.!operator_javanewinit", "file_line_number": 747}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-272 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:00.376Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 13, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 26, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.downloadImage", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 779}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-59 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:39.127Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 11, "scan_type": "STATIC", "description": "<span>This call to java.io.File.!operator_javanewinit() contains a path manipulation flaw.  The argument to the function is a filename constructed using untrusted input.  If an attacker is allowed to specify all or part of the filename, it may be possible to gain unauthorized access to files on the server, including those outside the webroot, that would be normally be inaccessible to end users.  The level of exposure depends on the effectiveness of input validation routines, if any. The first argument to !operator_javanewinit() contains tainted data from the variable path. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/73.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 73, "name": "External Control of File Name or Path", "href": "https://api.veracode.com/appsec/v1/cwes/73"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 30, "finding_category": {"id": 1, "name": "Directory Traversal", "href": "https://api.veracode.com/appsec/v1/categories/1"}, "procedure": "com.veracode.verademo.controller.UserController.downloadImage", "exploitability": 0, "attack_vector": "java.io.File.!operator_javanewinit", "file_line_number": 784}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-273 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:03.239Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 7, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 43, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.downloadImage", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 793}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-60 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:41.245Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 100, "scan_type": "STATIC", "description": "<span>This call to javax.servlet.ServletResponse.setContentType() contains an HTTP response splitting flaw.  Writing untrusted input into an HTTP header allows an attacker to manipulate the HTTP response rendered by the browser, to inject additional headers or an entire response body into the response stream. Injecting headers can be used to trick various security mechanisms in browsers into allowing XSS style attacks. Injecting entire response bodies can not only cause XSS attacks to succeed but may even poison the cache of any intermediary proxies between the clients and the application server. </span> <span>Escape, encode, or remove carriage return and line feed characters from untrusted data before inclusion in HTTP response headers.  Whenever possible, use a security library such as ESAPI that provides safe versions of addHeader(), etc. that will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/113.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/HTTP_Response_Splitting\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 113, "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')", "href": "https://api.veracode.com/appsec/v1/cwes/113"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 44, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.downloadImage", "exploitability": 0, "attack_vector": "javax.servlet.ServletResponse.setContentType", "file_line_number": 796}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-33 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:39.367Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 114, "scan_type": "STATIC", "description": "<span>This call to javax.servlet.http.HttpServletResponse.setHeader() contains an HTTP response splitting flaw.  Writing untrusted input into an HTTP header allows an attacker to manipulate the HTTP response rendered by the browser, to inject additional headers or an entire response body into the response stream. Injecting headers can be used to trick various security mechanisms in browsers into allowing XSS style attacks. Injecting entire response bodies can not only cause XSS attacks to succeed but may even poison the cache of any intermediary proxies between the clients and the application server. </span> <span>Escape, encode, or remove carriage return and line feed characters from untrusted data before inclusion in HTTP response headers.  Whenever possible, use a security library such as ESAPI that provides safe versions of addHeader(), etc. that will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/113.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/HTTP_Response_Splitting\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 113, "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')", "href": "https://api.veracode.com/appsec/v1/cwes/113"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 53, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.downloadImage", "exploitability": 0, "attack_vector": "javax.servlet.http.HttpServletResponse.setHeader", "file_line_number": 798}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-34 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:41.473Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 62, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 98, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.usernameExists", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 879}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-61 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:43.424Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 16, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 41, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.UserController.updateUsername", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 935}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-62 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:45.824Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 47, "scan_type": "STATIC", "description": "<span>This call to java.io.File.!operator_javanewinit() contains a path manipulation flaw.  The argument to the function is a filename constructed using untrusted input.  If an attacker is allowed to specify all or part of the filename, it may be possible to gain unauthorized access to files on the server, including those outside the webroot, that would be normally be inaccessible to end users.  The level of exposure depends on the effectiveness of input validation routines, if any. The first argument to !operator_javanewinit() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/73.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 73, "name": "External Control of File Name or Path", "href": "https://api.veracode.com/appsec/v1/cwes/73"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 54, "finding_category": {"id": 1, "name": "Directory Traversal", "href": "https://api.veracode.com/appsec/v1/categories/1"}, "procedure": "com.veracode.verademo.controller.UserController.updateUsername", "exploitability": 0, "attack_vector": "java.io.File.!operator_javanewinit", "file_line_number": 939}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-274 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:06.454Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 89, "scan_type": "STATIC", "description": "<span>This function uses the MD5() function, which uses a hash algorithm that is considered weak. In recent years, researchers have demonstrated ways to breach many uses of previously-thought-safe hash functions such as MD5. </span> <span>Consider using a stronger algorithm in order to prevent attackers from being able to manipulate hash results. If this algorithm is being used to hash passwords, then consider using a strong computationally-hard algorithm such as PBKDF2 or bcrypt instead of a plain hashing algorithm.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/327.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 327, "name": "Use of a Broken or Risky Cryptographic Algorithm", "href": "https://api.veracode.com/appsec/v1/cwes/327"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 21, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.UserController.md5", "exploitability": 1, "attack_vector": "java.security.MessageDigest.getInstance", "file_line_number": 1029}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-102 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:05:17.994Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 353, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 379, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 366, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 381, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 388, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 365, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 391, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 347, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 346, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 352, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 378, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 383, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 385, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 377, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 356, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 343, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 387, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 342, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 382, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 348, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 386, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 390, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 349, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 345, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 389, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 380, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 357, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 384, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 344, "scan_type": "STATIC", "description": "<span>The application contains hard-coded information that may contain credentials to an external service.  The use of hard-coded credentials significantly increases the possibility that the account being protected will be compromised. create</span> <span>Store credentials out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/798.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 798, "name": "Use of Hard-coded Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/798"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "com.veracode.verademo.controller.ResetController.<clinit>", "exploitability": 1, "attack_vector": "create", "file_line_number": 38}, "build_id": 33657073}, {"issue_id": 96, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.debug() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to debug() contains tainted data. The tainted data originated from earlier calls to java.sql.Statement.executeQuery, and AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 10, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.debug", "file_line_number": 107}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-46 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:09.047Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 39, "scan_type": "STATIC", "description": "<span>Standard random number generators do not provide a sufficient amount of entropy when used for security purposes. Attackers can brute force the output of pseudorandom number generators such as rand().</span> <span>If this random number is used where security is a concern, such as generating a session key or session identifier, use a trusted cryptographic random number generator instead.  These can be found on the Windows platform in the CryptoAPI or in an open source library such as OpenSSL.  In Java, use the SecureRandom object to ensure sufficient entropy.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/331.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 331, "name": "Insufficient Entropy", "href": "https://api.veracode.com/appsec/v1/cwes/331"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 27, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": -1, "attack_vector": "java.util.Random.nextBoolean", "file_line_number": 127}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-263 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:51:35.110Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 117, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.debug() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to debug() contains tainted data. The tainted data originated from earlier calls to java.sql.Statement.executeQuery, and AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 32, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.debug", "file_line_number": 131}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-47 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:11.259Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 67, "scan_type": "STATIC", "description": "<span>Standard random number generators do not provide a sufficient amount of entropy when used for security purposes. Attackers can brute force the output of pseudorandom number generators such as rand().</span> <span>If this random number is used where security is a concern, such as generating a session key or session identifier, use a trusted cryptographic random number generator instead.  These can be found on the Windows platform in the CryptoAPI or in an open source library such as OpenSSL.  In Java, use the SecureRandom object to ensure sufficient entropy.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/331.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 331, "name": "Insufficient Entropy", "href": "https://api.veracode.com/appsec/v1/cwes/331"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 41, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": -1, "attack_vector": "java.util.Random.nextInt", "file_line_number": 152}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-264 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:51:37.868Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 28, "scan_type": "STATIC", "description": "<span>Standard random number generators do not provide a sufficient amount of entropy when used for security purposes. Attackers can brute force the output of pseudorandom number generators such as rand().</span> <span>If this random number is used where security is a concern, such as generating a session key or session identifier, use a trusted cryptographic random number generator instead.  These can be found on the Windows platform in the CryptoAPI or in an open source library such as OpenSSL.  In Java, use the SecureRandom object to ensure sufficient entropy.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/331.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 331, "name": "Insufficient Entropy", "href": "https://api.veracode.com/appsec/v1/cwes/331"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 42, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": -1, "attack_vector": "java.util.Random.nextInt", "file_line_number": 155}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-265 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:51:40.965Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 91, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.debug() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to debug() contains tainted data. The tainted data originated from earlier calls to java.sql.Statement.executeQuery, and AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 45, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.debug", "file_line_number": 158}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-48 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:13.621Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 145, "scan_type": "STATIC", "description": "<span>Standard random number generators do not provide a sufficient amount of entropy when used for security purposes. Attackers can brute force the output of pseudorandom number generators such as rand().</span> <span>If this random number is used where security is a concern, such as generating a session key or session identifier, use a trusted cryptographic random number generator instead.  These can be found on the Windows platform in the CryptoAPI or in an open source library such as OpenSSL.  In Java, use the SecureRandom object to ensure sufficient entropy.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/331.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 331, "name": "Insufficient Entropy", "href": "https://api.veracode.com/appsec/v1/cwes/331"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 54, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": -1, "attack_vector": "java.util.Random.nextInt", "file_line_number": 178}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-266 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:51:43.683Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 24, "scan_type": "STATIC", "description": "<span>Standard random number generators do not provide a sufficient amount of entropy when used for security purposes. Attackers can brute force the output of pseudorandom number generators such as rand().</span> <span>If this random number is used where security is a concern, such as generating a session key or session identifier, use a trusted cryptographic random number generator instead.  These can be found on the Windows platform in the CryptoAPI or in an open source library such as OpenSSL.  In Java, use the SecureRandom object to ensure sufficient entropy.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/331.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 331, "name": "Insufficient Entropy", "href": "https://api.veracode.com/appsec/v1/cwes/331"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 56, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": -1, "attack_vector": "java.util.Random.nextInt", "file_line_number": 182}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-267 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:51:46.418Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 58, "scan_type": "STATIC", "description": "<span>Standard random number generators do not provide a sufficient amount of entropy when used for security purposes. Attackers can brute force the output of pseudorandom number generators such as rand().</span> <span>If this random number is used where security is a concern, such as generating a session key or session identifier, use a trusted cryptographic random number generator instead.  These can be found on the Windows platform in the CryptoAPI or in an open source library such as OpenSSL.  In Java, use the SecureRandom object to ensure sufficient entropy.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/331.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 331, "name": "Insufficient Entropy", "href": "https://api.veracode.com/appsec/v1/cwes/331"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 58, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": -1, "attack_vector": "java.util.Random.nextInt", "file_line_number": 186}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-268 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:51:49.306Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 152, "scan_type": "STATIC", "description": "<span>Standard random number generators do not provide a sufficient amount of entropy when used for security purposes. Attackers can brute force the output of pseudorandom number generators such as rand().</span> <span>If this random number is used where security is a concern, such as generating a session key or session identifier, use a trusted cryptographic random number generator instead.  These can be found on the Windows platform in the CryptoAPI or in an open source library such as OpenSSL.  In Java, use the SecureRandom object to ensure sufficient entropy.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/331.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 331, "name": "Insufficient Entropy", "href": "https://api.veracode.com/appsec/v1/cwes/331"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 59, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": -1, "attack_vector": "java.util.Random.nextInt", "file_line_number": 190}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-269 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:51:52.058Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 106, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.debug() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to debug() contains tainted data. The tainted data originated from earlier calls to java.sql.Statement.executeQuery, and AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 62, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.debug", "file_line_number": 192}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-49 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:15.890Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 63, "scan_type": "STATIC", "description": "<span>This call to getMoreFeed() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. The tainted data originated from an earlier call to java.sql.PreparedStatement.executeQuery.</span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 99, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "procedure": "com.veracode.verademo.controller.BlabController.getMoreFeed", "exploitability": 0, "attack_vector": "getMoreFeed", "file_line_number": 204}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-74 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:04:11.906Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 151, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable blabbersSql. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 28, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.BlabController.showBlabbers", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 486}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-36 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:46.060Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 70, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 24, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.BlabController.processBlabbers", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 558}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-37 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:48.719Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 20, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 31, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.controller.BlabController.processBlabbers", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 559}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-38 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:51.025Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 130, "scan_type": "STATIC", "description": "<span>This call to java.lang.Class.forName() uses reflection in an unsafe manner.  An attacker can specify the class name to be instantiated, which may create unexpected control flow paths through the application.  Depending on how reflection is being used, the attack vector may allow the attacker to bypass security checks or otherwise cause the application to behave in an unexpected manner.  Even if the object does not implement the specified interface and a ClassCastException is thrown, the constructor of the untrusted class name will have already executed. The first argument to forName() contains tainted data. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Validate the class name against a combination of white and blocklists to ensure that only expected behavior is produced.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/470.html\">CWE</a> <a href=\"https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 470, "name": "Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')", "href": "https://api.veracode.com/appsec/v1/cwes/470"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 46, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "com.veracode.verademo.controller.BlabController.processBlabbers", "exploitability": 1, "attack_vector": "java.lang.Class.forName", "file_line_number": 571}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-277 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:14.466Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 141, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sqlQuery. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/commands/RemoveAccountCommand.java", "file_name": "RemoveAccountCommand.java", "module": "verademo.war", "relative_location": 35, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.commands.RemoveAccountCommand.execute", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 39}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-43 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:02.544Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 71, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sqlQuery. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/commands/RemoveAccountCommand.java", "file_name": "RemoveAccountCommand.java", "module": "verademo.war", "relative_location": 72, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.commands.RemoveAccountCommand.execute", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 46}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-44 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:04.666Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 88, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sqlQuery. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/commands/RemoveAccountCommand.java", "file_name": "RemoveAccountCommand.java", "module": "verademo.war", "relative_location": 90, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.commands.RemoveAccountCommand.execute", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 50}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-45 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:06.845Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 12, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sqlQuery. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/commands/ListenCommand.java", "file_name": "ListenCommand.java", "module": "verademo.war", "relative_location": 39, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.commands.ListenCommand.execute", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 39}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-41 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:57.759Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 122, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sqlQuery. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/commands/ListenCommand.java", "file_name": "ListenCommand.java", "module": "verademo.war", "relative_location": 89, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.commands.ListenCommand.execute", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 46}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-42 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:03:00.261Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 19, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sqlQuery. The tainted data originated from an earlier call to AnnotationVirtualController.vc_annotation_entry.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/commands/IgnoreCommand.java", "file_name": "IgnoreCommand.java", "module": "verademo.war", "relative_location": 39, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.commands.IgnoreCommand.execute", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 39}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-39 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:53.246Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 121, "scan_type": "STATIC", "description": "<span>This call to org.apache.log4j.Category.info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to info() contains tainted data from the variable sqlQuery. The tainted data originated from earlier calls to AnnotationVirtualController.vc_annotation_entry, and java.sql.Statement.executeQuery.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "com/veracode/verademo/commands/IgnoreCommand.java", "file_name": "IgnoreCommand.java", "module": "verademo.war", "relative_location": 89, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "com.veracode.verademo.commands.IgnoreCommand.execute", "exploitability": 1, "attack_vector": "org.apache.log4j.Category.info", "file_line_number": 46}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-40 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:02:55.554Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 336, "scan_type": "DYNAMIC", "description": "PHNwYW4+SXQgaGFzIGJlZW4gb2JzZXJ2ZWQgdGhhdCBjcmVkZW50aWFscyBhcmUgYmVpbmcgc2VudCBvdmVyIGNsZWFyIHRleHQgY2hhbm5lbHMgd2hlbiBsb2dnaW5nIGluIHRvIGh0dHA6Ly92ZXJhZGVtby5hYWJ1dGxlci52dWxuLnNhLnZlcmFjb2RlLmlvL3ZlcmFkZW1vL3RvdHAuIDwvc3Bhbj48c3Bhbj5FbnN1cmUgdGhhdCBjcmVkZW50aWFscyBhcmUgdHJhbnNtaXR0ZWQgb3ZlciBlbmNyeXB0ZWQgY2hhbm5lbHMgc3VjaCBhcyBIVFRQUy4gPC9zcGFuPjxzcGFuPjxhIGhyZWY9Imh0dHA6Ly9jd2UubWl0cmUub3JnL2NnaS1iaW4vanVtcG1lbnUuY2dpP2lkPTUyMiI+Q1dFPC9hPjwvc3Bhbj4=", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-01-18T15:57:50.577Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 3, "cwe": {"id": 522, "name": "Insufficiently Protected Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/522"}, "path": "/verademo/totp", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Credentials Management", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "vulnerable_parameter": "BODY", "attack_vector": "Insufficiently Protected Credentials", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/totp"}, "build_id": 35282781}, {"issue_id": 200, "scan_type": "DYNAMIC", "description": "PHNwYW4+VGhlIHByb2R1Y3QgZG9lcyBub3QgdXNlIGEgcHJvdGVjdGlvbiBtZWNoYW5pc20gdGhhdCBwcm92aWRlcyBzdWZmaWNpZW50IGRlZmVuc2UgYWdhaW5zdCBkaXJlY3RlZCBhdHRhY2tzIGFnYWluc3QgdGhlIHByb2R1Y3QuIFNwZWNpZmljYWxseSwgdGhlIHNpdGUgZG9lcyBub3QgdGFrZSBhcHByb3ByaWF0ZSBtZWFzdXJlcyB0byBwcm90ZWN0IGFnYWluc3QgVUkgcmVkcmVzc2luZyBhdHRhY2tzIChDbGlja2phY2tpbmcpLiBJdCBpcyBwb3NzaWJsZSB0byBvdmVybGF5IHRoZSB0YXJnZXQgcGFnZSBpbnNpZGUgYW4gSUZSQU1FIGZyb20gYW4gYXR0YWNrZXIncyBjb250cm9sbGVkIHdlYiBzaXRlLiBCeSBkb2luZyBzbywgdGhleSBjYW4gYXR0ZW1wdCB0byB0cmljayBhIHVzZXIgaW50byBleGVjdXRpbmcgYW4gdW53YXJyYW50ZWQgYWN0aW9uIHdpdGhvdXQgdGhlIHVzZXIncyBrbm93bGVkZ2Ugb3IgY29uc2VudC4gTW9yZSBpbmZvcm1hdGlvbiBvbiBDbGlja2phY2tpbmcgY2FuIGJlIGZvdW5kIG9uIE9XQVNQJ3Mgd2Vic2l0ZTogaHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9DbGlja2phY2tpbmcuIDwvc3Bhbj48c3Bhbj5UbyBwcm90ZWN0IGFnYWluc3QgQ2xpY2tqYWNraW5nLCBpdCBpcyByZWNvbW1lbmRlZCB0aGF0IGFueSBwYWdlIHRoYXQgY29udGFpbnMgZm9ybXMgd2hpY2ggcmVxdWlyZSBhIHVzZXIgdG8gZW50ZXIgc2Vuc2l0aXZlIGluZm9ybWF0aW9uIHVzZSB0aGUgWC1GcmFtZS1PcHRpb25zIGhlYWRlciBzZXQgdG8gZWl0aGVyIERFTlkgb3IgU0FNRU9SSUdJTi4gTW9yZSBpbmZvcm1hdGlvbiBvbiBzZWN1cml0eSBoZWFkZXJzIGNhbiBiZSBmb3VuZCBvbiBWZXJhY29kZSdzIHdlYnNpdGU6IGh0dHBzOi8vd3d3LnZlcmFjb2RlLmNvbS9ibG9nLzIwMTQvMDMvZ3VpZGVsaW5lcy1mb3Itc2V0dGluZy1zZWN1cml0eS1oZWFkZXJzLyN4Zm8uIDwvc3Bhbj48c3Bhbj48YSBocmVmPSJodHRwOi8vY3dlLm1pdHJlLm9yZy9jZ2ktYmluL2p1bXBtZW51LmNnaT9pZD02OTMiPkNXRTwvYT4gPGEgaHJlZj0iaHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9DbGlja2phY2tpbmciPk9XQVNQPC9hPjwvc3Bhbj4=", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-21T20:38:56.113Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 3, "cwe": {"id": 693, "name": "Protection Mechanism Failure", "href": "https://api.veracode.com/appsec/v1/cwes/693"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Encapsulation", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 22, "name": "Encapsulation", "href": "https://api.veracode.com/appsec/v1/categories/22"}, "vulnerable_parameter": "/verademo/feed", "attack_vector": "Protection Mechanism Failure", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 35282781}, {"issue_id": 306, "scan_type": "DYNAMIC", "description": "PHNwYW4+SXQgaXMgcG9zc2libGUgdG8gZXhlY3V0ZSBKYXZhc2NyaXB0IGNvZGUgYnkgaW5qZWN0aW5nIHZjb2RlIj48c2NyaXB0PnZjMGQzKDE4MDA0NzQ4MTMpPC9zY3JpcHQ+IGludG8gdGhlIGhvc3QgcGFyYW1ldGVyIG9uIGh0dHA6Ly92ZXJhZGVtby5hYWJ1dGxlci52dWxuLnNhLnZlcmFjb2RlLmlvL3ZlcmFkZW1vL3Rvb2xzIGJ5IGJyZWFraW5nIG91dCBvZiBhbiBIVE1MIGVsZW1lbnQncyBhdHRyaWJ1dGUgb24gaHR0cDovL3ZlcmFkZW1vLmFhYnV0bGVyLnZ1bG4uc2EudmVyYWNvZGUuaW8vdmVyYWRlbW8vdG9vbHMuIEFmdGVyIGJyZWFraW5nIG91dCBvZiB0aGUgYXR0cmlidXRlLCBpdCBpcyBwb3NzaWJsZSB0byBjcmVhdGUgYWRkaXRpb25hbCBldmVudHMgdGhhdCB3aGVuIHRoZSBldmVudCBpcyB0cmlnZ2VyZWQsIHN1Y2ggYXMgbW92aW5nIHRoZSBtb3VzZSBvdmVyIHRoZSBlbGVtZW50LCB3aWxsIGNhdXNlIHRoZSBpbmplY3RlZCBjb2RlIHRvIGV4ZWN1dGUuIFhTUyB2dWxuZXJhYmlsaXRpZXMgYXJlIGNvbW1vbmx5IGV4cGxvaXRlZCB0byBzdGVhbCBvciBtYW5pcHVsYXRlIGNvb2tpZXMsIG1vZGlmeSBwcmVzZW50YXRpb24gb2YgY29udGVudCwgYW5kIGNvbXByb21pc2UgY29uZmlkZW50aWFsIGluZm9ybWF0aW9uLCB3aXRoIG5ldyBhdHRhY2sgdmVjdG9ycyBiZWluZyBkaXNjb3ZlcmVkIG9uIGEgcmVndWxhciBiYXNpcy4gPC9zcGFuPjxzcGFuPlVzZSBjb250ZXh0dWFsIGVzY2FwaW5nIG9uIGFsbCB1bnRydXN0ZWQgZGF0YSBiZWZvcmUgdXNpbmcgaXQgdG8gY29uc3RydWN0IGFueSBwb3J0aW9uIG9mIGFuIEhUVFAgcmVzcG9uc2UuICBUaGUgZXNjYXBpbmcgbWV0aG9kIHNob3VsZCBiZSBjaG9zZW4gYmFzZWQgb24gdGhlIHNwZWNpZmljIHVzZSBjYXNlIG9mIHRoZSB1bnRydXN0ZWQgZGF0YSwgb3RoZXJ3aXNlIGl0IG1heSBub3QgcHJvdGVjdCBmdWxseSBhZ2FpbnN0IHRoZSBhdHRhY2suIEZvciBleGFtcGxlLCBpZiB0aGUgZGF0YSBpcyBiZWluZyB3cml0dGVuIHRvIHRoZSBib2R5IG9mIGFuIEhUTUwgcGFnZSwgdXNlIEhUTUwgZW50aXR5IGVzY2FwaW5nOyBpZiB0aGUgZGF0YSBpcyBiZWluZyB3cml0dGVuIHRvIGFuIGF0dHJpYnV0ZSwgdXNlIGF0dHJpYnV0ZSBlc2NhcGluZzsgZXRjLiAgQm90aCB0aGUgT1dBU1AgSmF2YSBFbmNvZGVyIGxpYnJhcnkgYW5kIHRoZSBNaWNyb3NvZnQgQW50aVhTUyBsaWJyYXJ5IHByb3ZpZGUgY29udGV4dHVhbCBlc2NhcGluZyBtZXRob2RzLiBGb3IgbW9yZSBkZXRhaWxzIG9uIGNvbnRleHR1YWwgZXNjYXBpbmcsIHNlZSBodHRwczovL2NoZWF0c2hlZXRzZXJpZXMub3dhc3Aub3JnL2NoZWF0c2hlZXRzL0Nyb3NzX1NpdGVfU2NyaXB0aW5nX1ByZXZlbnRpb25fQ2hlYXRfU2hlZXQuaHRtbC4gV2hlbiBkaXNwbGF5aW5nIHVzZXIgaW5wdXQgaW4gdGhlIGNvbnRleHQgb2YgYW4gSFRNTCBlbGVtZW50J3MgYXR0cmlidXRlcywgYmUgc3VyZSB0byBlbmNvZGUgYW5kIGVzY2FwZSBxdW90ZSBjaGFyYWN0ZXJzLiBJZiB0aGUgaG9zdCBvdXRwdXQgaXMgdXNlZCBkaXJlY3RseSBpbiBhbiBIVE1MIGVsZW1lbnQncyBET00gZXZlbnQgYXR0cmlidXRlLCB5b3UgbXVzdCBiZSBzdXJlIHRvIGVzY2FwZSBhbnkgcXVvdGUgY2hhcmFjdGVycyBldmVuIGlmIHlvdSBlbmNvZGUgdGhlbSB0byB0aGVpciBIVE1MIGVudGl0eSB2YWx1ZS4gPC9zcGFuPjxzcGFuPjxhIGhyZWY9Imh0dHA6Ly9jd2UubWl0cmUub3JnL2NnaS1iaW4vanVtcG1lbnUuY2dpP2lkPTgzIj5DV0U8L2E+IDxhIGhyZWY9Imh0dHA6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9Dcm9zc19TaXRlX1NjcmlwdGluZyI+T1dBU1A8L2E+PC9zcGFuPg==", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-10-04T02:08:19.375Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 3, "cwe": {"id": 83, "name": "Improper Neutralization of Script in Attributes in a Web Page", "href": "https://api.veracode.com/appsec/v1/cwes/83"}, "path": "/verademo/tools", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Cross-Site Scripting (XSS)", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "vulnerable_parameter": "host", "attack_vector": "Improper Neutralization of Script in Attributes in a Web Page", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/tools"}, "build_id": 35282781}, {"issue_id": 337, "scan_type": "DYNAMIC", "description": "PHNwYW4+SXQgaGFzIGJlZW4gb2JzZXJ2ZWQgdGhhdCBjcmVkZW50aWFscyBhcmUgYmVpbmcgc2VudCBvdmVyIGNsZWFyIHRleHQgY2hhbm5lbHMgd2hlbiBsb2dnaW5nIGluIHRvIGh0dHA6Ly92ZXJhZGVtby5hYWJ1dGxlci52dWxuLnNhLnZlcmFjb2RlLmlvL3ZlcmFkZW1vL3RvdHAuIDwvc3Bhbj48c3Bhbj5FbnN1cmUgdGhhdCBjcmVkZW50aWFscyBhcmUgdHJhbnNtaXR0ZWQgb3ZlciBlbmNyeXB0ZWQgY2hhbm5lbHMgc3VjaCBhcyBIVFRQUy4gPC9zcGFuPjxzcGFuPjxhIGhyZWY9Imh0dHA6Ly9jd2UubWl0cmUub3JnL2NnaS1iaW4vanVtcG1lbnUuY2dpP2lkPTUyMiI+Q1dFPC9hPjwvc3Bhbj4=", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-01-18T15:57:50.577Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 3, "cwe": {"id": 522, "name": "Insufficiently Protected Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/522"}, "path": "/verademo/totp", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Credentials Management", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "vulnerable_parameter": "BODY", "attack_vector": "Insufficiently Protected Credentials", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/totp"}, "build_id": 35282781}, {"issue_id": 186, "scan_type": "DYNAMIC", "description": "PHNwYW4+SXQgaGFzIGJlZW4gb2JzZXJ2ZWQgdGhhdCBjcmVkZW50aWFscyBhcmUgYmVpbmcgc2VudCBvdmVyIGNsZWFyIHRleHQgY2hhbm5lbHMgd2hlbiBsb2dnaW5nIGluIHRvIGh0dHA6Ly92ZXJhZGVtby5hYWJ1dGxlci52dWxuLnNhLnZlcmFjb2RlLmlvL3ZlcmFkZW1vL2ZlZWQuIDwvc3Bhbj48c3Bhbj5FbnN1cmUgdGhhdCBjcmVkZW50aWFscyBhcmUgdHJhbnNtaXR0ZWQgb3ZlciBlbmNyeXB0ZWQgY2hhbm5lbHMgc3VjaCBhcyBIVFRQUy4gPC9zcGFuPjxzcGFuPjxhIGhyZWY9Imh0dHA6Ly9jd2UubWl0cmUub3JnL2NnaS1iaW4vanVtcG1lbnUuY2dpP2lkPTUyMiI+Q1dFPC9hPjwvc3Bhbj4=", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-21T20:38:56.113Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 3, "cwe": {"id": 522, "name": "Insufficiently Protected Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/522"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Credentials Management", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "vulnerable_parameter": "BODY", "attack_vector": "Insufficiently Protected Credentials", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 35282781}, {"issue_id": 190, "scan_type": "DYNAMIC", "description": "PHNwYW4+SXQgaXMgcG9zc2libGUgdG8gZXhlY3V0ZSBKYXZhc2NyaXB0IGNvZGUgYnkgZW50ZXJpbmcgYSBwYXlsb2FkIHN1Y2ggYXMgMSI8c2NyaXB0PnZjMGQzKDM5MzgyMDM4NDYpPC9zY3JpcHQ+IiBpbnRvIHRoZSBmb2xsb3dpbmcgaW5wdXQgZmllbGQgPElOUFVUIG5hbWU9J2JsYWInIHBsYWNlaG9sZGVyPSdCbGFiIHNvbWV0aGluZyBub3cuLi4nIHR5cGU9J3RleHQnIGNsYXNzPSdmb3JtLWNvbnRyb2wnPjwvSU5QVVQ+IGxvY2F0ZWQgYXQgaHR0cDovL3ZlcmFkZW1vLmFhYnV0bGVyLnZ1bG4uc2EudmVyYWNvZGUuaW8vdmVyYWRlbW8vZmVlZC4gVGhpcyBhdHRhY2sgd2FzIGNhcnJpZWQgb3V0IHZpYSB0ZXh0IGVudHJ5IGluIGEgd2ViIGJyb3dzZXIuIFRoaXMgdHlwZSBvZiB2dWxuZXJhYmlsaXR5IGNhbiBiZSBleHBsb2l0ZWQgYnkgYSBtYWxpY2lvdXMgdGhpcmQgcGFydHkgY29udmluY2luZyBhIHVzZXIgdG8gY3V0IGFuZCBwYXN0ZSB1bnRydXN0ZWQgZGF0YSBpbnRvIHRoZWlyIGJyb3dzZXIgb3IgdmlhIGNvbXByb21pc2VkIGNsaWVudC1zaWRlIHRvb2xzLCBzdWNoIGFzIGJyb3dzZXIgZXh0ZW5zaW9ucy4gVGhlIGFwcGxpY2F0aW9uIHBvcHVsYXRlcyB0aGUgSFRUUCByZXNwb25zZSB3aXRoIHVzZXItc3VwcGxpZWQgaW5wdXQsIGFsbG93aW5nIGFuIGF0dGFja2VyIHRvIGVtYmVkIG1hbGljaW91cyBjb250ZW50LCBzdWNoIGFzIEphdmFzY3JpcHQgY29kZSwgd2hpY2ggd2lsbCBiZSBleGVjdXRlZCBpbiB0aGUgY29udGV4dCBvZiB0aGUgdmljdGltJ3MgYnJvd3Nlci4gWFNTIHZ1bG5lcmFiaWxpdGllcyBhcmUgY29tbW9ubHkgZXhwbG9pdGVkIHRvIHN0ZWFsIG9yIG1hbmlwdWxhdGUgY29va2llcywgbW9kaWZ5IHByZXNlbnRhdGlvbiBvZiBjb250ZW50LCBhbmQgY29tcHJvbWlzZSBjb25maWRlbnRpYWwgaW5mb3JtYXRpb24sIHdpdGggbmV3IGF0dGFjayB2ZWN0b3JzIGJlaW5nIGRpc2NvdmVyZWQgb24gYSByZWd1bGFyIGJhc2lzLiA8L3NwYW4+PHNwYW4+VXNlIGNvbnRleHR1YWwgZXNjYXBpbmcgb24gYWxsIHVudHJ1c3RlZCBkYXRhIGJlZm9yZSB1c2luZyBpdCB0byBjb25zdHJ1Y3QgYW55IHBvcnRpb24gb2YgYW4gSFRUUCByZXNwb25zZS4gIFRoZSBlc2NhcGluZyBtZXRob2Qgc2hvdWxkIGJlIGNob3NlbiBiYXNlZCBvbiB0aGUgc3BlY2lmaWMgdXNlIGNhc2Ugb2YgdGhlIHVudHJ1c3RlZCBkYXRhLCBvdGhlcndpc2UgaXQgbWF5IG5vdCBwcm90ZWN0IGZ1bGx5IGFnYWluc3QgdGhlIGF0dGFjay4gRm9yIGV4YW1wbGUsIGlmIHRoZSBkYXRhIGlzIGJlaW5nIHdyaXR0ZW4gdG8gdGhlIGJvZHkgb2YgYW4gSFRNTCBwYWdlLCB1c2UgSFRNTCBlbnRpdHkgZXNjYXBpbmc7IGlmIHRoZSBkYXRhIGlzIGJlaW5nIHdyaXR0ZW4gdG8gYW4gYXR0cmlidXRlLCB1c2UgYXR0cmlidXRlIGVzY2FwaW5nOyBldGMuICBCb3RoIHRoZSBPV0FTUCBKYXZhIEVuY29kZXIgbGlicmFyeSBhbmQgdGhlIE1pY3Jvc29mdCBBbnRpWFNTIGxpYnJhcnkgcHJvdmlkZSBjb250ZXh0dWFsIGVzY2FwaW5nIG1ldGhvZHMuIEZvciBtb3JlIGRldGFpbHMgb24gY29udGV4dHVhbCBlc2NhcGluZywgc2VlIGh0dHBzOi8vY2hlYXRzaGVldHNlcmllcy5vd2FzcC5vcmcvY2hlYXRzaGVldHMvQ3Jvc3NfU2l0ZV9TY3JpcHRpbmdfUHJldmVudGlvbl9DaGVhdF9TaGVldC5odG1sLiA8L3NwYW4+PHNwYW4+PGEgaHJlZj0iaHR0cDovL2N3ZS5taXRyZS5vcmcvY2dpLWJpbi9qdW1wbWVudS5jZ2k/aWQ9ODAiPkNXRTwvYT4gPGEgaHJlZj0iaHR0cDovL3d3dy5vd2FzcC5vcmcvaW5kZXgucGhwL1hTUyI+T1dBU1A8L2E+IDxhIGhyZWY9Imh0dHA6Ly93ZWJhcHBzZWMucGJ3b3Jrcy5jb20vQ3Jvc3MtU2l0ZS1TY3JpcHRpbmciPldBU0M8L2E+PC9zcGFuPg==", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-21T20:38:56.113Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Cross-Site Scripting (XSS)", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "vulnerable_parameter": "<INPUT name='blab' placeholder='Blab something now...' type='text' class='form-control'></INPUT>", "attack_vector": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 35282781}, {"issue_id": 305, "scan_type": "DYNAMIC", "description": "PHNwYW4+SXQgaGFzIGJlZW4gb2JzZXJ2ZWQgdGhhdCBjcmVkZW50aWFscyBhcmUgYmVpbmcgc2VudCBvdmVyIGNsZWFyIHRleHQgY2hhbm5lbHMgd2hlbiBsb2dnaW5nIGluIHRvIGh0dHA6Ly92ZXJhZGVtby5hYWJ1dGxlci52dWxuLnNhLnZlcmFjb2RlLmlvL3ZlcmFkZW1vL2xvZ2luLiA8L3NwYW4+PHNwYW4+RW5zdXJlIHRoYXQgY3JlZGVudGlhbHMgYXJlIHRyYW5zbWl0dGVkIG92ZXIgZW5jcnlwdGVkIGNoYW5uZWxzIHN1Y2ggYXMgSFRUUFMuIDwvc3Bhbj48c3Bhbj48YSBocmVmPSJodHRwOi8vY3dlLm1pdHJlLm9yZy9jZ2ktYmluL2p1bXBtZW51LmNnaT9pZD01MjIiPkNXRTwvYT48L3NwYW4+", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-05-05T15:03:55.668Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 3, "cwe": {"id": 522, "name": "Insufficiently Protected Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/522"}, "path": "/verademo/login", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Credentials Management", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "vulnerable_parameter": "BODY", "attack_vector": "Insufficiently Protected Credentials", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/login"}, "build_id": 35282781}, {"issue_id": 204, "scan_type": "DYNAMIC", "description": "PHNwYW4+SXQgaXMgcG9zc2libGUgdG8gaW5qZWN0IGFyYml0cmFyeSBIVE1MIHRhZ3Mgc3VjaCBhcyAxPHNjcmlwdD52YzBkMygxODE5MjEwMTkzKTwvc2NyaXB0PiBpbnRvIHRoZSBibGFiIHBhcmFtZXRlciBvbiBodHRwOi8vdmVyYWRlbW8uYWFidXRsZXIudnVsbi5zYS52ZXJhY29kZS5pby92ZXJhZGVtby9mZWVkIHdoaWNoIHJlc3VsdHMgaW4gSmF2YXNjcmlwdCBjb2RlIGJlaW5nIGV4ZWN1dGVkIG9uIGh0dHA6Ly92ZXJhZGVtby5hYWJ1dGxlci52dWxuLnNhLnZlcmFjb2RlLmlvL3ZlcmFkZW1vL2ZlZWQuIFRoaXMgZm9ybSBvZiBDcm9zcy1TaXRlIFNjcmlwdGluZyBpcyBjb25zaWRlcmVkIHBlcnNpc3RlbnQgWFNTIGR1ZSB0byB0aGUgZmFjdCB0aGF0IG9uY2UgdGhlIGluamVjdGVkIGRhdGEgaXMgc2VudCB0byB0aGUgc2VydmVyLCBpdCBpcyBzdG9yZWQgYW5kIHBlcnNpc3RzIGFjcm9zcyByZXF1ZXN0cy4gVGhpcyBjYW4gaGF2ZSB2YXJ5aW5nIGNvbnNlcXVlbmNlcyBkZXBlbmRpbmcgb24gd2hlcmUgYW5kIHRvIHdob20gdGhlIGluc2VydGVkIGRhdGEgaXMgZGlzcGxheWVkLiBYU1MgdnVsbmVyYWJpbGl0aWVzIGFyZSBjb21tb25seSBleHBsb2l0ZWQgdG8gc3RlYWwgb3IgbWFuaXB1bGF0ZSBjb29raWVzLCBtb2RpZnkgcHJlc2VudGF0aW9uIG9mIGNvbnRlbnQsIGFuZCBjb21wcm9taXNlIGNvbmZpZGVudGlhbCBpbmZvcm1hdGlvbiwgd2l0aCBuZXcgYXR0YWNrIHZlY3RvcnMgYmVpbmcgZGlzY292ZXJlZCBvbiBhIHJlZ3VsYXIgYmFzaXMuIDwvc3Bhbj48c3Bhbj5Vc2UgY29udGV4dHVhbCBlc2NhcGluZyBvbiBhbGwgdW50cnVzdGVkIGRhdGEgYmVmb3JlIHVzaW5nIGl0IHRvIGNvbnN0cnVjdCBhbnkgcG9ydGlvbiBvZiBhbiBIVFRQIHJlc3BvbnNlLiAgVGhlIGVzY2FwaW5nIG1ldGhvZCBzaG91bGQgYmUgY2hvc2VuIGJhc2VkIG9uIHRoZSBzcGVjaWZpYyB1c2UgY2FzZSBvZiB0aGUgdW50cnVzdGVkIGRhdGEsIG90aGVyd2lzZSBpdCBtYXkgbm90IHByb3RlY3QgZnVsbHkgYWdhaW5zdCB0aGUgYXR0YWNrLiBGb3IgZXhhbXBsZSwgaWYgdGhlIGRhdGEgaXMgYmVpbmcgd3JpdHRlbiB0byB0aGUgYm9keSBvZiBhbiBIVE1MIHBhZ2UsIHVzZSBIVE1MIGVudGl0eSBlc2NhcGluZzsgaWYgdGhlIGRhdGEgaXMgYmVpbmcgd3JpdHRlbiB0byBhbiBhdHRyaWJ1dGUsIHVzZSBhdHRyaWJ1dGUgZXNjYXBpbmc7IGV0Yy4gIEJvdGggdGhlIE9XQVNQIEphdmEgRW5jb2RlciBsaWJyYXJ5IGFuZCB0aGUgTWljcm9zb2Z0IEFudGlYU1MgbGlicmFyeSBwcm92aWRlIGNvbnRleHR1YWwgZXNjYXBpbmcgbWV0aG9kcy4gRm9yIG1vcmUgZGV0YWlscyBvbiBjb250ZXh0dWFsIGVzY2FwaW5nLCBzZWUgaHR0cHM6Ly9jaGVhdHNoZWV0c2VyaWVzLm93YXNwLm9yZy9jaGVhdHNoZWV0cy9Dcm9zc19TaXRlX1NjcmlwdGluZ19QcmV2ZW50aW9uX0NoZWF0X1NoZWV0Lmh0bWwuIDwvc3Bhbj48c3Bhbj48YSBocmVmPSJodHRwOi8vY3dlLm1pdHJlLm9yZy9jZ2ktYmluL2p1bXBtZW51LmNnaT9pZD04MCI+Q1dFPC9hPiA8YSBocmVmPSJodHRwOi8vd3d3Lm93YXNwLm9yZy9pbmRleC5waHAvWFNTIj5PV0FTUDwvYT4gPGEgaHJlZj0iaHR0cDovL3dlYmFwcHNlYy5wYndvcmtzLmNvbS9Dcm9zcy1TaXRlLVNjcmlwdGluZyI+V0FTQzwvYT48L3NwYW4+", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-21T20:38:56.113Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Cross-Site Scripting (XSS)", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "vulnerable_parameter": "blab", "attack_vector": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 35282781}, {"issue_id": 307, "scan_type": "DYNAMIC", "description": "PHNwYW4+VGhlIHRhcmdldCB3ZWIgcGFnZSBkb2VzIG5vdCBzcGVjaWZ5IENvbnRlbnQtU2VjdXJpdHktUG9saWN5LiBXaGlsZSBsYWNrIG9mIENvbnRlbnQtU2VjdXJpdHktUG9saWN5IG9uIHRoZSB3ZWJzaXRlIGRvZXMgbm90IHJlcHJlc2VudHMgYSBzZWN1cml0eSByaXNrIGJ5IGl0c2VsZiwgYSBzdHJpY3QgQ29udGVudC1TZWN1cml0eS1Qb2xpY3kgbWF5IHNlcnZlIGFzIGFuIGFkZGl0aW9uYWwgcHJvdGVjdGlvbiBsYXllciBmcm9tIENyb3NzLVNpdGUtU2NyaXB0aW5nIGF0dGFja3MuIENvbnRlbnQtU2VjdXJpdHktUG9saWN5IGhlbHBzIHRvIGVuc3VyZSB0aGF0IGFsbCByZXNvdXJjZXMgKHN1Y2ggYXMgc2NyaXB0cywgaW1hZ2VzIG9yIHZpZGVvIGZpbGVzKSBvbiB0aGUgd2Vic2l0ZSBhcmUgbG9hZGVkIGZyb20gdHJ1c3RlZCBzb3VyY2VzLiBDb250ZW50LVNlY3VyaXR5LVBvbGljeSBtYXkgYWxzbyBoZWxwIHRvIHByb3RlY3QgZnJvbSBVSSByZWRyZXNzaW5nIGF0dGFja3MsIHN1Y2ggYXMgIkNsaWNramFja2luZyIuIDwvc3Bhbj48c3Bhbj5Db25zaWRlciBpbXBsZW1lbnRpbmcgc3RyaWN0IENvbnRlbnQtU2VjdXJpdHktUG9saWN5IGJ5IHNldHRpbmcgdGhlIGNvcnJlc3BvbmRpbmcgSFRUUCBoZWFkZXIgZm9yIGVhY2ggcGFnZSByZXNwb25zZSBmcm9tIHRoZSB3ZWJzaXRlLiBJdCBpcyByZWNvbW1lbmRlZCB0byBtb3ZlIGFsbCBzY3JpcHRzIHRvIHRydXN0ZWQgbG9jYXRpb25zIGFuZCBzcGVjaWZ5ICJzY3JpcHQtc3JjIiBvciAiZGVmYXVsdC1zcmMiIGRpcmVjdGl2ZXMuIElmIGlubGluZSBqYXZhc2NyaXB0IGlzIHJlcXVpcmVkIG9uIHRoZSB3ZWJzaXRlLCBpbmxpbmUgc2NyaXB0cyBtYXkgYmUgYWNjb21wYW5pZWQgd2l0aCBhIGNyeXB0b2dyYXBoaWMgbm9uY2UgKG51bWJlciB1c2VkIG9uY2UpIG9yIGEgaGFzaCwgdG8gZW5zdXJlIG9ubHkgdHJ1c3RlZCBzY3JpcHRzIGFyZSBleGVjdXRlZC4gPC9zcGFuPjxzcGFuPjxhIGhyZWY9Imh0dHA6Ly9jd2UubWl0cmUub3JnL2NnaS1iaW4vanVtcG1lbnUuY2dpP2lkPTgyOSI+Q1dFPC9hPjwvc3Bhbj4=", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-10-04T02:08:19.375Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 3, "cwe": {"id": 829, "name": "Inclusion of Functionality from Untrusted Control Sphere", "href": "https://api.veracode.com/appsec/v1/cwes/829"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Insecure Dependencies", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 32, "name": "Insecure Dependencies", "href": "https://api.veracode.com/appsec/v1/categories/32"}, "vulnerable_parameter": "Content-Security-Policy", "attack_vector": "Inclusion of Functionality from Untrusted Control Sphere", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 35282781}, {"scan_type": "SCA", "description": "logback is vulnerable to remote code execution. The vulnerability exists due to a lack of sanitization of write access allowing an attacker to craft a malicious configuration.\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "47004b3b-df69-4a60-a235-ac4a0e62d206", "licenses": [{"license_id": "epl-1.0", "risk_rating": "3"}, {"license_id": "lgpl-2.1", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-42550", "cvss": 8.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-42550", "severity": "High", "vector": "AV:N/AC:M/Au:S/C:C/I:C/A:C", "cvss3": {"score": 6.6, "severity": "Medium", "vector": "AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2021-42550", "epss_score": 0.01555, "epss_percentile": 0.87288, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4bf6461f-7eb2-4423-a3f1-7a7780de5a4d", "component_filename": "logback-classic-1.2.3.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/ch.qos.logback:logback-classic"}], "version": "1.2.3"}}, {"scan_type": "SCA", "description": "logback is vulnerable to remote code execution. The vulnerability exists due to a lack of sanitization of write access allowing an attacker to craft a malicious configuration.\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 502, "name": "Deserialization of Untrusted Data", "href": "https://api.veracode.com/appsec/v1/cwes/502"}, "component_id": "58dab3c5-b691-4006-9be3-91edbf87d27f", "licenses": [{"license_id": "epl-1.0", "risk_rating": "3"}, {"license_id": "lgpl-2.1", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-42550", "cvss": 8.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-42550", "severity": "High", "vector": "AV:N/AC:M/Au:S/C:C/I:C/A:C", "cvss3": {"score": 6.6, "severity": "Medium", "vector": "AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2021-42550", "epss_score": 0.01555, "epss_percentile": 0.87288, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "1a254046-9ba0-4e4f-b829-b0a352b2c71a", "component_filename": "logback-core-1.2.3.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/ch.qos.logback:logback-core"}], "version": "1.2.3"}}, {"scan_type": "SCA", "description": "Spring Framework is vulnerable to Denial of Service (DoS). The vulnerability is due to a lack of max repeated words and max number of character logic in the Spring Expression Language parser located in the `getValueInternal` function of `OpMultiply` and the `getValueInternal` function in `OperatorMatches`, which can trigger an infinite loop and consume excessive CPU memory, possibly leading to a system crash.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-03-29T18:34:12.017Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "ebeefc0e-dfcc-4373-a42b-1d511fdc1d2f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-20861", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-20861", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:C", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-20861", "epss_score": 0.00133, "epss_percentile": 0.4869, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "0451b975-56ac-4232-9807-6f8fd5325102", "component_filename": "spring-expression-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-expression"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Framework is vulnerable to Denial of Service (DoS). The vulnerability is due to a lack of max repeated words and max number of character logic in the Spring Expression Language parser located in the `getValueInternal` function of `OpMultiply` and the `getValueInternal` function in `OperatorMatches`, which can trigger an infinite loop and consume excessive CPU memory, possibly leading to a system crash.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "f617d7be-e92d-42f9-8cfd-2ce03ad8a7e2", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-20861", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-20861", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:C", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-20861", "epss_score": 0.00133, "epss_percentile": 0.4869, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "fc02f732-d943-4a77-91c9-9f95f075572b", "component_filename": "spring-expression-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-expression"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Framework is vulnerable to Denial of Service (DoS). The vulnerability is due to a lack of max repeated words and max number of character logic in the Spring Expression Language parser located in the `getValueInternal` function of `OpMultiply` and the `getValueInternal` function in `OperatorMatches`, which can trigger an infinite loop and consume excessive CPU memory, possibly leading to a system crash.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.574Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "ebeefc0e-dfcc-4373-a42b-1d511fdc1d2f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2023-20861", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-20861", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:C", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-20861", "epss_score": 0.00133, "epss_percentile": 0.4869, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "0451b975-56ac-4232-9807-6f8fd5325102", "component_filename": "spring-expression-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-expression-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Expression Language is vulnerable to Denial Of Service (DoS). The vulnerability exists in the `doParseExpression` function of `InternalSpelExpressionParser.java` because the SpEL expression length is not restricted which allows an attacker to cause an application crash.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-04-18T15:48:31.741Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 917, "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/917"}, "component_id": "ebeefc0e-dfcc-4373-a42b-1d511fdc1d2f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-20863", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-20863", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:C", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-20863", "epss_score": 0.00306, "epss_percentile": 0.69978, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "0451b975-56ac-4232-9807-6f8fd5325102", "component_filename": "spring-expression-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-expression"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Expression Language is vulnerable to Denial Of Service (DoS). The vulnerability exists in the `doParseExpression` function of `InternalSpelExpressionParser.java` because the SpEL expression length is not restricted which allows an attacker to cause an application crash.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 917, "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/917"}, "component_id": "f617d7be-e92d-42f9-8cfd-2ce03ad8a7e2", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2023-20863", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-20863", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:C", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-20863", "epss_score": 0.00306, "epss_percentile": 0.69978, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "fc02f732-d943-4a77-91c9-9f95f075572b", "component_filename": "spring-expression-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-expression"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Expression Language is vulnerable to Denial Of Service (DoS). The vulnerability exists in the `doParseExpression` function of `InternalSpelExpressionParser.java` because the SpEL expression length is not restricted which allows an attacker to cause an application crash.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.574Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 917, "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/917"}, "component_id": "ebeefc0e-dfcc-4373-a42b-1d511fdc1d2f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2023-20863", "cvss": 6.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2023-20863", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:C", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2023-20863", "epss_score": 0.00306, "epss_percentile": 0.69978, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "0451b975-56ac-4232-9807-6f8fd5325102", "component_filename": "spring-expression-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-expression-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Keycloak saml-core is vulnerable to malicious SAML assertion insertion. This vulnerability is due to the fact that the assertions are not verified as signed before being accepted.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "a71a1300-9a17-45dd-81a6-bd4ec5dd18d9", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "SRCCLR-SID-2367", "cvss": 6.4, "href": "https://sca.analysiscenter.veracode.com/vulnerability-database/search#query=SRCCLR-SID-2367", "severity": "Medium", "vector": "", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "exploitability": {"epss_status": "no match found", "exploit_service_status": "available"}}, "product_id": "aca62cd6-5a00-494a-8f26-745a2aac708e", "component_filename": "keycloak-saml-core-1.8.1.Final.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.keycloak:keycloak-saml-core"}], "version": "1.8.1.Final"}}, {"scan_type": "SCA", "description": "mysql-connector is vulnerable to privilege escalation. An attacker can exploit the vulnerability and takeover the MySQL Connectors.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-09-15T09:56:15.783Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "28614053-0ad6-4c0f-817e-6b4c89777501", "licenses": [{"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2022-21363", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-21363", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "cvss3": {"score": 6.6, "severity": "Medium", "vector": "AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-21363", "epss_score": 0.00097, "epss_percentile": 0.40967, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "a75be37d-43dc-4106-aa8c-3033a545ba83", "component_filename": "mysql-connector-java-5.1.48.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/mysql:mysql-connector-java"}], "version": "5.1.48"}}, {"scan_type": "SCA", "description": "mysql-connector is vulnerable to privilege escalation. An attacker can exploit the vulnerability and takeover the MySQL Connectors.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "28614053-0ad6-4c0f-817e-6b4c89777501", "licenses": [{"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2022-21363", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-21363", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "cvss3": {"score": 6.6, "severity": "Medium", "vector": "AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-21363", "epss_score": 0.00097, "epss_percentile": 0.40967, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "a75be37d-43dc-4106-aa8c-3033a545ba83", "component_filename": "mysql-connector-java-5.1.48.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/mysql:mysql-connector-java"}], "version": "5.1.48"}}, {"scan_type": "SCA", "description": "mysql-connector is vulnerable to privilege escalation. An attacker can exploit the vulnerability and takeover the MySQL Connectors.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:45:23.700Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "28614053-0ad6-4c0f-817e-6b4c89777501", "licenses": [{"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2022-21363", "cvss": 6.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-21363", "severity": "Medium", "vector": "AV:N/AC:M/Au:S/C:P/I:P/A:P", "cvss3": {"score": 6.6, "severity": "Medium", "vector": "AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2022-21363", "epss_score": 0.00097, "epss_percentile": 0.40967, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "a75be37d-43dc-4106-aa8c-3033a545ba83", "component_filename": "mysql-connector-java-5.1.48.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\mysql-connector-java-5.1.48.jar"}], "version": "5.1.48"}}, {"scan_type": "SCA", "description": "Apache Commons HttpClient 3.x, as used in Amazon Flexible Payments Service (FPS) merchant Java SDK and other products, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 295, "name": "Improper Certificate Validation", "href": "https://api.veracode.com/appsec/v1/cwes/295"}, "component_id": "1793362a-098a-47f2-95e8-0565117aa7fd", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2012-5783", "cvss": 5.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2012-5783", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:N/\u200bC:P/\u200bI:P/\u200bA:N", "cvss3": {"score": 4.8, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2012-5783", "epss_score": 0.00238, "epss_percentile": 0.62122, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "1d97ed10-545d-4c63-908c-dd23708b3bc4", "component_filename": "commons-httpclient-3.1.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-httpclient:commons-httpclient"}], "version": "3.1"}}, {"scan_type": "SCA", "description": "commons-io is vulnerable to directory traversal. Invoking the method `FileNameUtils.normalize` with a malicious input string would potentially allow access to files within the parent directory.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:45:23.244Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 22, "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')", "href": "https://api.veracode.com/appsec/v1/cwes/22"}, "component_id": "c7ce22bf-c9d5-4465-9fb7-5aedd8261079", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2021-29425", "cvss": 5.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-29425", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "cvss3": {"score": 4.8, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2021-29425", "epss_score": 0.00171, "epss_percentile": 0.54292, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "5ffc7010-3446-4083-848e-6e03567b3825", "component_filename": "commons-io-2.4.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\commons-io-2.4.jar"}], "version": "2.4"}}, {"scan_type": "SCA", "description": "commons-io is vulnerable to directory traversal. Invoking the method `FileNameUtils.normalize` with a malicious input string would potentially allow access to files within the parent directory.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 22, "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')", "href": "https://api.veracode.com/appsec/v1/cwes/22"}, "component_id": "c7ce22bf-c9d5-4465-9fb7-5aedd8261079", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2021-29425", "cvss": 5.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-29425", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "cvss3": {"score": 4.8, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2021-29425", "epss_score": 0.00171, "epss_percentile": 0.54292, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "5ffc7010-3446-4083-848e-6e03567b3825", "component_filename": "commons-io-2.4.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-io:commons-io"}], "version": "2.4"}}, {"scan_type": "SCA", "description": "commons-io is vulnerable to directory traversal. Invoking the method `FileNameUtils.normalize` with a malicious input string would potentially allow access to files within the parent directory.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 22, "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')", "href": "https://api.veracode.com/appsec/v1/cwes/22"}, "component_id": "c7ce22bf-c9d5-4465-9fb7-5aedd8261079", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2021-29425", "cvss": 5.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-29425", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "cvss3": {"score": 4.8, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2021-29425", "epss_score": 0.00171, "epss_percentile": 0.54292, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "5ffc7010-3446-4083-848e-6e03567b3825", "component_filename": "commons-io-2.4.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-io:commons-io"}], "version": "2.4"}}, {"scan_type": "SCA", "description": "tomcat-catalina is vulnerable to access restriction bypass. Lack of proper sanitization of user provided parameter or configuration data provided by an administrator accept authentication using variations of their user name and/or to bypass some of the protection provided by the LockOut Realm.\n\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 116, "name": "Improper Encoding or Escaping of Output", "href": "https://api.veracode.com/appsec/v1/cwes/116"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-30640", "cvss": 5.8, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-30640", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2021-30640", "epss_score": 0.00202, "epss_percentile": 0.58523, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "jcommander is vulnerable to man-in-the-middle attacks. The usage of an insecure HTTP channel during build allows an attacker to intercept and modify network traffic and introduce malicious code into the third-party component.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-03-08T19:31:58.781Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "caf5ba04-3125-4d8b-aee4-0fd9172abc59", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "SRCCLR-SID-22555", "cvss": 5.8, "href": "https://sca.analysiscenter.veracode.com/vulnerability-database/search#query=SRCCLR-SID-22555", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "cvss3": {"score": 4.2, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N"}, "exploitability": {"epss_status": "no match found", "exploit_service_status": "available"}}, "product_id": "95964009-b8e5-4829-ba8d-9b6ae4820961", "component_filename": "jcommander-1.72.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\jcommander-1.72.jar"}], "version": "1.72"}}, {"scan_type": "SCA", "description": "commons-io is vulnerable to remote code execution (RCE) attacks. These attacks are possible because the library doesn't restrict the classes which can be accepted when deserializing a binary.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:45:23.244Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "c7ce22bf-c9d5-4465-9fb7-5aedd8261079", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "SRCCLR-SID-5295", "cvss": 5.1, "href": "https://sca.analysiscenter.veracode.com/vulnerability-database/search#query=SRCCLR-SID-5295", "severity": "Medium", "vector": "", "cvss3": {"score": 5.6, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"}, "exploitability": {"epss_status": "no match found", "exploit_service_status": "available"}}, "product_id": "5ffc7010-3446-4083-848e-6e03567b3825", "component_filename": "commons-io-2.4.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\commons-io-2.4.jar"}], "version": "2.4"}}, {"scan_type": "SCA", "description": "commons-io is vulnerable to remote code execution (RCE) attacks. These attacks are possible because the library doesn't restrict the classes which can be accepted when deserializing a binary.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "c7ce22bf-c9d5-4465-9fb7-5aedd8261079", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "SRCCLR-SID-5295", "cvss": 5.1, "href": "https://sca.analysiscenter.veracode.com/vulnerability-database/search#query=SRCCLR-SID-5295", "severity": "Medium", "vector": "", "cvss3": {"score": 5.6, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"}, "exploitability": {"epss_status": "no match found", "exploit_service_status": "available"}}, "product_id": "5ffc7010-3446-4083-848e-6e03567b3825", "component_filename": "commons-io-2.4.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-io:commons-io"}], "version": "2.4"}}, {"scan_type": "SCA", "description": "commons-io is vulnerable to remote code execution (RCE) attacks. These attacks are possible because the library doesn't restrict the classes which can be accepted when deserializing a binary.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "c7ce22bf-c9d5-4465-9fb7-5aedd8261079", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "SRCCLR-SID-5295", "cvss": 5.1, "href": "https://sca.analysiscenter.veracode.com/vulnerability-database/search#query=SRCCLR-SID-5295", "severity": "Medium", "vector": "", "cvss3": {"score": 5.6, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L"}, "exploitability": {"epss_status": "no match found", "exploit_service_status": "available"}}, "product_id": "5ffc7010-3446-4083-848e-6e03567b3825", "component_filename": "commons-io-2.4.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-io:commons-io"}], "version": "2.4"}}, {"scan_type": "SCA", "description": "Integer overflow in the crypt_raw method in the key-stretching implementation in jBCrypt before 0.4 makes it easier for remote attackers to determine cleartext values of password hashes via a brute-force attack against hashes associated with the maximum exponent.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 190, "name": "Integer Overflow or Wraparound", "href": "https://api.veracode.com/appsec/v1/cwes/190"}, "component_id": "a05bbd80-250f-4a54-b4fe-cc8d11957d25", "licenses": [{"license_id": "bsd-3-clause", "risk_rating": "2"}, {"license_id": "isc", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2015-0886", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2015-0886", "severity": "Medium", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:N/\u200bA:N", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2015-0886", "epss_score": 0.00492, "epss_percentile": 0.76307, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "812c0acc-d1b7-4182-8e6e-6bb0d2bc44ef", "component_filename": "jbcrypt-0.3m.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.mindrot:jbcrypt"}], "version": "0.3m"}}, {"scan_type": "SCA", "description": "Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 20, "name": "Improper Input Validation", "href": "https://api.veracode.com/appsec/v1/cwes/20"}, "component_id": "d71d3730-b197-4fac-8aff-f89ed626b5a6", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2018-1199", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-1199", "severity": "Medium", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:N/\u200bA:N", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2018-1199", "epss_score": 0.00178, "epss_percentile": 0.55231, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "edbc8ae1-9d6f-4b7a-892f-6de4bef1092b", "component_filename": "spring-webmvc-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-webmvc"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.647Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 20, "name": "Improper Input Validation", "href": "https://api.veracode.com/appsec/v1/cwes/20"}, "component_id": "d71d3730-b197-4fac-8aff-f89ed626b5a6", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2018-1199", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-1199", "severity": "Medium", "vector": "AV:N/\u200bAC:L/\u200bAu:N/\u200bC:P/\u200bI:N/\u200bA:N", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2018-1199", "epss_score": 0.00178, "epss_percentile": 0.55231, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "edbc8ae1-9d6f-4b7a-892f-6de4bef1092b", "component_filename": "spring-webmvc-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-webmvc-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "eap7 has insecure token. The vulnerability exists due to a bug in the ELParserTokenManager which enables invalid EL expressions to be evaluated as if they were valid.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 917, "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/917"}, "component_id": "5f415b4a-faa3-4ce8-97c7-78df73712658", "licenses": [{"license_id": "epl-2.0", "risk_rating": "3"}, {"license_id": "gpl-2.0-with-classpath-exception", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-28170", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-28170", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2021-28170", "epss_score": 0.00089, "epss_percentile": 0.38269, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "25dd1be0-44da-4fc8-ac63-b56fc9692991", "component_filename": "jakarta.el-3.0.3.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.glassfish:jakarta.el"}], "version": "3.0.3"}}, {"scan_type": "SCA", "description": "tomcat-coyote is vulnerable request smuggling.  Incorrect way of parsing of the HTTP transfer-encoding request header causes request smuggling when it is used with a reverse proxy and if the client declared it would only accept an HTTP/1.0 response.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 444, "name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')", "href": "https://api.veracode.com/appsec/v1/cwes/444"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-33037", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-33037", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2021-33037", "epss_score": 0.12315, "epss_percentile": 0.95449, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "spring-context is vulnerable to binding rules bypass. The vulnerability exists due to a lack of sanitization of HTTP request parameters allowing an attacker to bypass the `disallowedFields` and bind maliciously crafted HTTP request parameters. \n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.844Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 178, "name": "Improper Handling of Case Sensitivity", "href": "https://api.veracode.com/appsec/v1/cwes/178"}, "component_id": "f1ca2cc8-00ec-48df-b66b-dadc77d53f40", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2022-22968", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22968", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2022-22968", "epss_score": 0.00065, "epss_percentile": 0.28976, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c90fa5f1-58cd-48d4-b299-b628c44f9ce3", "component_filename": "spring-context-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-context-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-context is vulnerable to binding rules bypass. The vulnerability exists due to a lack of sanitization of HTTP request parameters allowing an attacker to bypass the `disallowedFields` and bind maliciously crafted HTTP request parameters. \n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-04-14T15:28:56.152Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 178, "name": "Improper Handling of Case Sensitivity", "href": "https://api.veracode.com/appsec/v1/cwes/178"}, "component_id": "f1ca2cc8-00ec-48df-b66b-dadc77d53f40", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2022-22968", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22968", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2022-22968", "epss_score": 0.00065, "epss_percentile": 0.28976, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c90fa5f1-58cd-48d4-b299-b628c44f9ce3", "component_filename": "spring-context-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-context"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-context is vulnerable to binding rules bypass. The vulnerability exists due to a lack of sanitization of HTTP request parameters allowing an attacker to bypass the `disallowedFields` and bind maliciously crafted HTTP request parameters. \n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 178, "name": "Improper Handling of Case Sensitivity", "href": "https://api.veracode.com/appsec/v1/cwes/178"}, "component_id": "fe7a7b24-afac-44ca-b650-54ef440328d7", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-22968", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22968", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2022-22968", "epss_score": 0.00065, "epss_percentile": 0.28976, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "215c4714-fdb7-4eed-a640-4a394cc77013", "component_filename": "spring-context-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-context"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "snakeyaml is vulnerable to denial of service. The vulnerability exists in the `resolve.java` due to a lack of input validation, allowing an attacker to crash the system via malicious yaml file.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 787, "name": "Out-of-bounds Write", "href": "https://api.veracode.com/appsec/v1/cwes/787"}, "component_id": "e4889cf9-7ffc-4de7-b65f-e9a3568b304e", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-38751", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-38751", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-38751", "epss_score": 0.00123, "epss_percentile": 0.47054, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "64ddaa59-01df-4a07-8d64-b9f26bb3c4ee", "component_filename": "snakeyaml-1.26.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.yaml:snakeyaml"}], "version": "1.26"}}, {"scan_type": "SCA", "description": "org.yaml:snakeyaml is vulnerable to denial of service (DoS) attacks. The parser is running on user supplied input, which allows an attacker to parse untrusted YAML files causing an application crash through stack-based buffer overflows.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 787, "name": "Out-of-bounds Write", "href": "https://api.veracode.com/appsec/v1/cwes/787"}, "component_id": "e4889cf9-7ffc-4de7-b65f-e9a3568b304e", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-38752", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-38752", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-38752", "epss_score": 0.00345, "epss_percentile": 0.71773, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "64ddaa59-01df-4a07-8d64-b9f26bb3c4ee", "component_filename": "snakeyaml-1.26.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.yaml:snakeyaml"}], "version": "1.26"}}, {"scan_type": "SCA", "description": "org.apache.tomcat: tomcat-coyote is vulnerable to Sensitive Information Disclosure. The vulnerability is due to improper handling of `IOExceptions` in the `fill` function within `Http11InputBuffer.java` during socket read operations, particularly when the client abruptly closed the connection. This could potentially lead to the generation of error messages that contain sensitive information.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-01-22T22:19:54.253Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2024-21733", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-21733", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2024-21733", "epss_score": 0.00692, "epss_percentile": 0.80272, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "Multiple cross-site scripting (XSS) vulnerabilities in Apache Sling API before 2.2.2 and Apache Sling Servlets Post before 2.1.2 allow remote attackers to inject arbitrary web script or HTML via the URI, related to (1) org/apache/sling/api/servlets/HtmlResponse and (2) org/apache/sling/servlets/post/HtmlResponse.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 79, "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", "href": "https://api.veracode.com/appsec/v1/cwes/79"}, "component_id": "97f0fb05-af1a-4a15-bb80-89dc2ac6f707", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2015-2944", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2015-2944", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:N/\u200bC:N/\u200bI:P/\u200bA:N", "cvss3": {"score": 4.7, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2015-2944", "epss_score": 0.00325, "epss_percentile": 0.70942, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "23dd53aa-e0aa-40b2-b070-dad2d0d8afc9", "component_filename": "org.apache.sling.api-2.0.2-incubator.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.sling:org.apache.sling.api"}], "version": "2.0.2-incubator"}}, {"scan_type": "SCA", "description": "plexus-archiver before 3.6.0 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in an archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 22, "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')", "href": "https://api.veracode.com/appsec/v1/cwes/22"}, "component_id": "d3ff7550-8371-4531-97c7-c20d70b6e537", "licenses": [], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2018-1002200", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-1002200", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:N/\u200bC:N/\u200bI:P/\u200bA:N", "cvss3": {"score": 5.5, "severity": "Medium", "vector": "AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2018-1002200", "epss_score": 0.00127, "epss_percentile": 0.47725, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "d9c7f68d-23af-431a-ab8f-edc2932bf7cc", "component_filename": "plexus-archiver-1.0-alpha-3.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.codehaus.plexus:plexus-archiver"}], "version": "1.0-alpha-3"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to cross-site tracing (XST) attacks. The vulnerability exists as `HiddenHttpMethodFilter` allows web applications to change existing HTTP request method to any HTTP method, causing applications with existing cross-site scripting (XSS) vulnerability to be vulnerable to XST.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2018-11039", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-11039", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "cvss3": {"score": 5.9, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2018-11039", "epss_score": 0.00264, "epss_percentile": 0.66321, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to cross-site tracing (XST) attacks. The vulnerability exists as `HiddenHttpMethodFilter` allows web applications to change existing HTTP request method to any HTTP method, causing applications with existing cross-site scripting (XSS) vulnerability to be vulnerable to XST.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.730Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2018-11039", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-11039", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "cvss3": {"score": 5.9, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2018-11039", "epss_score": 0.00264, "epss_percentile": 0.66321, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-web-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 22, "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')", "href": "https://api.veracode.com/appsec/v1/cwes/22"}, "component_id": "d71d3730-b197-4fac-8aff-f89ed626b5a6", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2018-1271", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-1271", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:N/\u200bC:P/\u200bI:N/\u200bA:N", "cvss3": {"score": 5.9, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2018-1271", "epss_score": 0.00371, "epss_percentile": 0.72795, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "edbc8ae1-9d6f-4b7a-892f-6de4bef1092b", "component_filename": "spring-webmvc-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-webmvc"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.647Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 22, "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')", "href": "https://api.veracode.com/appsec/v1/cwes/22"}, "component_id": "d71d3730-b197-4fac-8aff-f89ed626b5a6", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2018-1271", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-1271", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:N/\u200bC:P/\u200bI:N/\u200bA:N", "cvss3": {"score": 5.9, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2018-1271", "epss_score": 0.00371, "epss_percentile": 0.72795, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "edbc8ae1-9d6f-4b7a-892f-6de4bef1092b", "component_filename": "spring-webmvc-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-webmvc-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "apache tomcat is vulnerable to information disclosure. Security constraints can be bypassed to obtain and view JSP source code in certain configurations, when serving resources from a network location using the NTFS file system. The vulnerability is caused by the insufficient validation for the `:` character in the file path.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 706, "name": "Use of Incorrectly-Resolved Name or Reference", "href": "https://api.veracode.com/appsec/v1/cwes/706"}, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-24122", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-24122", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N", "cvss3": {"score": 5.9, "severity": "Medium", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2021-24122", "epss_score": 0.00232, "epss_percentile": 0.61557, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "snakeyaml is vulnerable to denial of service. The vulnerability exists in the `Composer` function of `Composer.java` as it does not properly restrict the nested depth limitation for collections which allows an attacker to crash the application through the stack overflow by providing malicious yaml files.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 787, "name": "Out-of-bounds Write", "href": "https://api.veracode.com/appsec/v1/cwes/787"}, "component_id": "e4889cf9-7ffc-4de7-b65f-e9a3568b304e", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-38749", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-38749", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-38749", "epss_score": 0.00123, "epss_percentile": 0.47054, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "64ddaa59-01df-4a07-8d64-b9f26bb3c4ee", "component_filename": "snakeyaml-1.26.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.yaml:snakeyaml"}], "version": "1.26"}}, {"scan_type": "SCA", "description": "snakeyaml is vulnerable to denial of service. The vulnerability exists in the `Composer` function of `Composer.java` as it does not properly restrict the nested depth limitation for collections, allowing an attacker to crash the application through the stack overflow by providing malicious yaml files.\n\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 787, "name": "Out-of-bounds Write", "href": "https://api.veracode.com/appsec/v1/cwes/787"}, "component_id": "e4889cf9-7ffc-4de7-b65f-e9a3568b304e", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-38750", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-38750", "severity": "Medium", "vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "cvss3": {"score": 5.5, "severity": "Medium", "vector": "AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-38750", "epss_score": 0.00076, "epss_percentile": 0.32755, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "64ddaa59-01df-4a07-8d64-b9f26bb3c4ee", "component_filename": "snakeyaml-1.26.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.yaml:snakeyaml"}], "version": "1.26"}}, {"scan_type": "SCA", "description": "keycloak-saml-core is vulnerable to sensitive information disclosure. The attack exists because SAML messages are being parsed by replacing the string to obtain the attribute values with the system property in `StaxParserUtil` class. Therefore, attacker can just parse the chosen system property name through the SAML request ID field and can get the response with system property value in `InResponseTo` filed .", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 200, "name": "Exposure of Sensitive Information to an Unauthorized Actor", "href": "https://api.veracode.com/appsec/v1/cwes/200"}, "component_id": "a71a1300-9a17-45dd-81a6-bd4ec5dd18d9", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2017-2582", "cvss": 4.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2017-2582", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:P/I:N/A:N", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2017-2582", "epss_score": 0.00181, "epss_percentile": 0.55624, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "aca62cd6-5a00-494a-8f26-745a2aac708e", "component_filename": "keycloak-saml-core-1.8.1.Final.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.keycloak:keycloak-saml-core"}], "version": "1.8.1.Final"}}, {"scan_type": "SCA", "description": "tomcat-coyote is vulnerable to authorization bypass. The vulnerability exists as requests could contain HTTP headers of a previous request rather than the intended headers, if a HTTP/2 client has exceeded the agreed maximum number of concurrent streams for a connection.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "c08a27c6-e9a8-4a4d-8696-221ff9d1c6be", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2020-13943", "cvss": 4.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-13943", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:P/I:N/A:N", "cvss3": {"score": 4.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2020-13943", "epss_score": 0.00102, "epss_percentile": 0.42087, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c3390f2a-a432-418f-90ee-f36969246a64", "component_filename": "tomcat-embed-core-9.0.36.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.tomcat.embed:tomcat-embed-core"}], "version": "9.0.36"}}, {"scan_type": "SCA", "description": "Spring Framework is vulnerable to privilege escalation. The vulnerability exists due to lack of secure validations of user input which allows a malicious user to inject additional log files. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "5733da72-0759-44ea-bdcc-4a3eb316b75d", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2021-22096", "cvss": 4.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-22096", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "cvss3": {"score": 4.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2021-22096", "epss_score": 0.00079, "epss_percentile": 0.34318, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f03ef4c5-484e-48a0-bffc-d46435c46fce", "component_filename": "spring-core-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-core"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Framework is vulnerable to privilege escalation. The vulnerability exists due to lack of secure validations of user input which allows a malicious user to inject additional log files. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "38678b7f-6718-4b4f-adb6-390ca146c1dc", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2021-22096", "cvss": 4.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-22096", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "cvss3": {"score": 4.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2021-22096", "epss_score": 0.00079, "epss_percentile": 0.34318, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "c9b787f2-efbe-4d8f-b3b7-de8cb6e88a39", "component_filename": "spring-core-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-core"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Framework is vulnerable to privilege escalation. The vulnerability exists due to lack of secure validations of user input which allows a malicious user to inject additional log files. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-03-08T19:31:58.532Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "5733da72-0759-44ea-bdcc-4a3eb316b75d", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2021-22096", "cvss": 4.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2021-22096", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "cvss3": {"score": 4.3, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2021-22096", "epss_score": 0.00079, "epss_percentile": 0.34318, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f03ef4c5-484e-48a0-bffc-d46435c46fce", "component_filename": "spring-core-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-core-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Expression is vulnerable to denial of service. The vulnerability exists due to the creation of large array in a SpEL and sending meaningless error messages to the user which allows an attacker to send crafted SpEL expressions that leads to an out ouf bound error causing an application crash. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-04-07T16:09:53.955Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "ebeefc0e-dfcc-4373-a42b-1d511fdc1d2f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-22950", "cvss": 4.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22950", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-22950", "epss_score": 0.00081, "epss_percentile": 0.35134, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "0451b975-56ac-4232-9807-6f8fd5325102", "component_filename": "spring-expression-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-expression"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Expression is vulnerable to denial of service. The vulnerability exists due to the creation of large array in a SpEL and sending meaningless error messages to the user which allows an attacker to send crafted SpEL expressions that leads to an out ouf bound error causing an application crash. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "f617d7be-e92d-42f9-8cfd-2ce03ad8a7e2", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-22950", "cvss": 4.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22950", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-22950", "epss_score": 0.00081, "epss_percentile": 0.35134, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "fc02f732-d943-4a77-91c9-9f95f075572b", "component_filename": "spring-expression-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-expression"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "Spring Expression is vulnerable to denial of service. The vulnerability exists due to the creation of large array in a SpEL and sending meaningless error messages to the user which allows an attacker to send crafted SpEL expressions that leads to an out ouf bound error causing an application crash. ", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.574Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "ebeefc0e-dfcc-4373-a42b-1d511fdc1d2f", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2022-22950", "cvss": 4.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22950", "severity": "Medium", "vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-22950", "epss_score": 0.00081, "epss_percentile": 0.35134, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "0451b975-56ac-4232-9807-6f8fd5325102", "component_filename": "spring-expression-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-expression-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to Reflected File Download (RFD) attack. An incomplete fix of CVE-2015-5211 allows an attacker to bypass the protection against RFD attack via the `jsessionid` path parameter.\n\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2020-5421", "cvss": 3.6, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-5421", "severity": "Low", "vector": "AV:N/AC:H/Au:S/C:P/I:P/A:N", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2020-5421", "epss_score": 0.153, "epss_percentile": 0.95892, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to Reflected File Download (RFD) attack. An incomplete fix of CVE-2015-5211 allows an attacker to bypass the protection against RFD attack via the `jsessionid` path parameter.\n\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "ee9b8868-dd77-47d1-8019-7b21861a87f4", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2020-5421", "cvss": 3.6, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-5421", "severity": "Low", "vector": "AV:N/AC:H/Au:S/C:P/I:P/A:N", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2020-5421", "epss_score": 0.153, "epss_percentile": 0.95892, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4d99ff03-0d6c-4a03-9555-2cfd926a241e", "component_filename": "spring-web-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-web"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "spring-web is vulnerable to Reflected File Download (RFD) attack. An incomplete fix of CVE-2015-5211 allows an attacker to bypass the protection against RFD attack via the `jsessionid` path parameter.\n\n", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.730Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "component_id": "a93299f2-42c0-48ba-9476-d4ca0246d6ce", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2020-5421", "cvss": 3.6, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-5421", "severity": "Low", "vector": "AV:N/AC:H/Au:S/C:P/I:P/A:N", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N"}, "exploitability": {"full_cve": "CVE-2020-5421", "epss_score": 0.153, "epss_percentile": 0.95892, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "24f8e461-cdac-4b53-a5f8-eb757303a963", "component_filename": "spring-web-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-web-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "Vulnerability in the MySQL Connectors component of Oracle MySQL (subcomponent: Connector/J). Supported versions that are affected are 8.0.15 and prior. Difficult to exploit vulnerability allows high privileged attacker with logon to the infrastructure where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.0 Base Score 6.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H).", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 20, "name": "Improper Input Validation", "href": "https://api.veracode.com/appsec/v1/cwes/20"}, "component_id": "28614053-0ad6-4c0f-817e-6b4c89777501", "licenses": [{"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2019-2692", "cvss": 3.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2019-2692", "severity": "Low", "vector": "AV:L/\u200bAC:H/\u200bAu:S/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 6.3, "severity": "Medium", "vector": "AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2019-2692", "epss_score": 0.00064, "epss_percentile": 0.28085, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "a75be37d-43dc-4106-aa8c-3033a545ba83", "component_filename": "mysql-connector-java-5.1.48.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/mysql:mysql-connector-java"}], "version": "5.1.48"}}, {"scan_type": "SCA", "description": "Vulnerability in the MySQL Connectors component of Oracle MySQL (subcomponent: Connector/J). Supported versions that are affected are 8.0.15 and prior. Difficult to exploit vulnerability allows high privileged attacker with logon to the infrastructure where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.0 Base Score 6.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H).", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 20, "name": "Improper Input Validation", "href": "https://api.veracode.com/appsec/v1/cwes/20"}, "component_id": "28614053-0ad6-4c0f-817e-6b4c89777501", "licenses": [{"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2019-2692", "cvss": 3.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2019-2692", "severity": "Low", "vector": "AV:L/\u200bAC:H/\u200bAu:S/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 6.3, "severity": "Medium", "vector": "AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2019-2692", "epss_score": 0.00064, "epss_percentile": 0.28085, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "a75be37d-43dc-4106-aa8c-3033a545ba83", "component_filename": "mysql-connector-java-5.1.48.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/mysql:mysql-connector-java"}], "version": "5.1.48"}}, {"scan_type": "SCA", "description": "Vulnerability in the MySQL Connectors component of Oracle MySQL (subcomponent: Connector/J). Supported versions that are affected are 8.0.15 and prior. Difficult to exploit vulnerability allows high privileged attacker with logon to the infrastructure where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.0 Base Score 6.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H).", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:45:23.700Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 20, "name": "Improper Input Validation", "href": "https://api.veracode.com/appsec/v1/cwes/20"}, "component_id": "28614053-0ad6-4c0f-817e-6b4c89777501", "licenses": [{"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2019-2692", "cvss": 3.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2019-2692", "severity": "Low", "vector": "AV:L/\u200bAC:H/\u200bAu:S/\u200bC:P/\u200bI:P/\u200bA:P", "cvss3": {"score": 6.3, "severity": "Medium", "vector": "AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2019-2692", "epss_score": 0.00064, "epss_percentile": 0.28085, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "a75be37d-43dc-4106-aa8c-3033a545ba83", "component_filename": "mysql-connector-java-5.1.48.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\mysql-connector-java-5.1.48.jar"}], "version": "5.1.48"}}, {"scan_type": "SCA", "description": "spring-beans is vulnerable to denial of service. An attacker can crash the application through a model object when it sets a multipart file or javax.servlet.Part of a field", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-05-13T05:59:53.317Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "f2aa641c-1508-42f6-8160-79ab8ce34a58", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-22970", "cvss": 3.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22970", "severity": "Low", "vector": "AV:N/AC:M/Au:S/C:N/I:N/A:P", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-22970", "epss_score": 0.00449, "epss_percentile": 0.75226, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4a3c14bc-544b-455d-b5e3-3e65d4cf7db4", "component_filename": "spring-beans-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-beans"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "spring-beans is vulnerable to denial of service. An attacker can crash the application through a model object when it sets a multipart file or javax.servlet.Part of a field", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "4bc7d82b-07f5-4b02-bd8c-4a2d278645d4", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-22970", "cvss": 3.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22970", "severity": "Low", "vector": "AV:N/AC:M/Au:S/C:N/I:N/A:P", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-22970", "epss_score": 0.00449, "epss_percentile": 0.75226, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "255e0b8a-96ac-465b-af07-f000e82be98c", "component_filename": "spring-beans-5.2.7.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.springframework:spring-beans"}], "version": "5.2.7.RELEASE"}}, {"scan_type": "SCA", "description": "spring-beans is vulnerable to denial of service. An attacker can crash the application through a model object when it sets a multipart file or javax.servlet.Part of a field", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2024-03-08T19:31:58.605Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 770, "name": "Allocation of Resources Without Limits or Throttling", "href": "https://api.veracode.com/appsec/v1/cwes/770"}, "component_id": "f2aa641c-1508-42f6-8160-79ab8ce34a58", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2022-22970", "cvss": 3.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-22970", "severity": "Low", "vector": "AV:N/AC:M/Au:S/C:N/I:N/A:P", "cvss3": {"score": 5.3, "severity": "Medium", "vector": "AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-22970", "epss_score": 0.00449, "epss_percentile": 0.75226, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "4a3c14bc-544b-455d-b5e3-3e65d4cf7db4", "component_filename": "spring-beans-4.3.10.RELEASE.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\spring-beans-4.3.10.RELEASE.jar"}], "version": "4.3.10.RELEASE"}}, {"scan_type": "SCA", "description": "org.yaml:snakeyaml is vulnerable to Denial of Service. The vulnerability is only due when SnakeYaml parses untrusted yaml, resulting in a denial of service through memory exhaustion.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 787, "name": "Out-of-bounds Write", "href": "https://api.veracode.com/appsec/v1/cwes/787"}, "component_id": "e4889cf9-7ffc-4de7-b65f-e9a3568b304e", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2022-41854", "cvss": 2.6, "href": "http://nvd.nist.gov/vuln/detail/CVE-2022-41854", "severity": "Low", "vector": "AV:N/AC:H/Au:N/C:N/I:N/A:P", "cvss3": {"score": 6.5, "severity": "Medium", "vector": "AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2022-41854", "epss_score": 0.0059, "epss_percentile": 0.78379, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "64ddaa59-01df-4a07-8d64-b9f26bb3c4ee", "component_filename": "snakeyaml-1.26.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.yaml:snakeyaml"}], "version": "1.26"}}, {"scan_type": "SCA", "description": "junit is vulnerable to information disclosure. The vulnerability exists through the behaviour of `TemporaryFolder` on UNIX-like systems, where the system's temporary directory is shared between all users on that system by default.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 3, "cwe": {"id": 732, "name": "Incorrect Permission Assignment for Critical Resource", "href": "https://api.veracode.com/appsec/v1/cwes/732"}, "component_id": "4ebeadf3-e305-4520-8e20-f7b2b15141c4", "licenses": [{"license_id": "epl-1.0", "risk_rating": "3"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2020-15250", "cvss": 1.9, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-15250", "severity": "Low", "vector": "AV:L/AC:M/Au:N/C:P/I:N/A:N", "cvss3": {"score": 5.5, "severity": "Medium", "vector": "AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N"}, "exploitability": {"full_cve": "CVE-2020-15250", "epss_score": 0.00066, "epss_percentile": 0.29372, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "f60afc17-560b-4caf-817f-5233bfd5ccc7", "component_filename": "junit-4.13.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/junit:junit"}], "version": "4.13"}}, {"issue_id": 216, "scan_type": "MANUAL", "description": "An admin login page was found which indicates that the admin interface is publicly accessible and could be targeted by attackers.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-25T17:45:59.115Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-03-25T17:49:54.194Z"}, "finding_details": {"severity": 2, "note": "CVSS:3.0/AV:N/AC:L/PR:H/UI:N/S:U/C:L/I:L/A:N = 3.8", "input_vector": "Access Control", "capec_id": 4, "module": "manual_analysis", "exploit_difficulty": 1, "cwe": {"id": 419, "name": "Unprotected Primary Channel", "href": "https://api.veracode.com/appsec/v1/cwes/419"}, "severity_desc": "Confidentiality and integrity are partially compromised as the admin interface could expose advanced functionality if an admin account is compromised.", "exploit_desc": "The admin interface is accessible from the /admin directory, easily discoverable by a directory enumeration tool. Attackers would likely target this login with brute-force attacks given that success would grant them access to an admin account.", "remediation_desc": "Consider restricting the admin interface to internal addresses or create a whitelist of IPs that may access it over the Internet.", "location": "https://10.10.253.22/admin/", "finding_category": {"id": -1, "name": "Other", "href": "https://api.veracode.com/appsec/v1/categories/-1"}, "cvss": 3.8, "exploitability": 2, "mpt_link": {"href": "https://api.veracode.com/mpt/v1/findings/2591a7d8-8fb6-48bf-941f-44d64c21bb1e?include_artifacts=false"}}, "build_id": 17489771}, {"issue_id": 5, "scan_type": "STATIC", "description": "<span>This call to javax.servlet.http.HttpServletResponse.addCookie() adds a cookie to the HTTP response that does not have the Secure attribute set.  Failing to set this attribute allows the browser to send the cookie unencrypted over an HTTP session. </span> <span>Set the Secure attribute for all cookies used by HTTPS sessions.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/614.html\">CWE</a> <a href=\"https://owasp.org/www-community/controls/SecureCookieAttribute\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 614, "name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute", "href": "https://api.veracode.com/appsec/v1/cwes/614"}, "file_path": "com/veracode/verademo/utils/UserFactory.java", "file_name": "UserFactory.java", "module": "verademo.war", "relative_location": 90, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.utils.UserFactory.updateInResponse", "exploitability": 0, "attack_vector": "javax.servlet.http.HttpServletResponse.addCookie", "file_line_number": 96}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-114 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:05:44.943Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 32, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 10, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 160}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-290 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:51.220Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 41, "scan_type": "STATIC", "description": "<span>This call to javax.servlet.http.HttpServletResponse.addCookie() adds a cookie to the HTTP response that does not have the Secure attribute set.  Failing to set this attribute allows the browser to send the cookie unencrypted over an HTTP session. </span> <span>Set the Secure attribute for all cookies used by HTTPS sessions.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/614.html\">CWE</a> <a href=\"https://owasp.org/www-community/controls/SecureCookieAttribute\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 614, "name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute", "href": "https://api.veracode.com/appsec/v1/cwes/614"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 22, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 0, "attack_vector": "javax.servlet.http.HttpServletResponse.addCookie", "file_line_number": 176}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-112 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:05:40.100Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 140, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 20, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 250}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-291 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:53.705Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 350, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 30, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.showTotp", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 293}, "build_id": 33657073}, {"issue_id": 351, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 24, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.processTotp", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 335}, "build_id": 33657073}, {"issue_id": 126, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 28, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.processRegister", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 412}, "build_id": 33657073}, {"issue_id": 68, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 16, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.processRegisterFinish", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 466}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-293 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:58.979Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 94, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 12, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.showProfile", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 564}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-294 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:53:01.721Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 18, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 11, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.processProfile", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 664}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-295 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:53:04.348Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 48, "scan_type": "STATIC", "description": "<span>This call to javax.servlet.http.HttpServletResponse.addCookie() adds a cookie to the HTTP response that does not have the Secure attribute set.  Failing to set this attribute allows the browser to send the cookie unencrypted over an HTTP session. </span> <span>Set the Secure attribute for all cookies used by HTTPS sessions.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/614.html\">CWE</a> <a href=\"https://owasp.org/www-community/controls/SecureCookieAttribute\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 614, "name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute", "href": "https://api.veracode.com/appsec/v1/cwes/614"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 63, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "com.veracode.verademo.controller.UserController.processProfile", "exploitability": 0, "attack_vector": "javax.servlet.http.HttpServletResponse.addCookie", "file_line_number": 718}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-113 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:05:42.531Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 113, "scan_type": "STATIC", "description": "<span> The application calls the javax.servlet.ServletResponse.setContentType() function, which will result in data being transferred out of the application (via the network or another medium).  This data contains sensitive information.  </span> <span>Ensure that the transfer of the sensitive data is intended and that it does not violate application security policy.  This flaw is categorized as low severity because it only impacts confidentiality, not integrity or availability.  However, in the context of a mobile application, the significance of an information leak may be much greater, especially if misaligned with user expectations or data privacy policies.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE</a> <a href=\"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/\">OWASP Security Misconfiguration</a> <a href=\"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\">OWASP Cryptographic Failures</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 201, "name": "Insertion of Sensitive Information Into Sent Data", "href": "https://api.veracode.com/appsec/v1/cwes/201"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 44, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "com.veracode.verademo.controller.UserController.downloadImage", "exploitability": -1, "attack_vector": "javax.servlet.ServletResponse.setContentType", "file_line_number": 796}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-313 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:06.555Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 137, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 10, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.usernameExists", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 849}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-296 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:53:07.703Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 9, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 6, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.UserController.updateUsername", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 905}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-297 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:53:10.298Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 98, "scan_type": "STATIC", "description": "<span> The application calls the javax.mail.Transport.send() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. The first argument to send() contains data from an error message (possibly containing untrusted data) from the variable message. The data from an error message (possibly containing untrusted data) originated from earlier calls to java.lang.NullPointerException.getMessage, java.lang.Throwable.getMessage, and java.lang.Throwable.printStackTrace.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 92, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "com.veracode.verademo.controller.UserController.emailExceptionsToAdmin", "exploitability": 0, "attack_vector": "javax.mail.Transport.send", "file_line_number": 1019}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-122 has been opened for this flaw.", "action": "COMMENT", "created": "2022-12-06T03:06:02.691Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 38, "scan_type": "STATIC", "description": "<span> The application calls the javax.mail.Transport.send() function, which will result in data being transferred out of the application (via the network or another medium).  This data contains sensitive information.  The first argument to send() contains potentially sensitive data from the variable message. The potentially sensitive data originated from an earlier call to java.lang.System.getProperties.</span> <span>Ensure that the transfer of the sensitive data is intended and that it does not violate application security policy.  This flaw is categorized as low severity because it only impacts confidentiality, not integrity or availability.  However, in the context of a mobile application, the significance of an information leak may be much greater, especially if misaligned with user expectations or data privacy policies.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE</a> <a href=\"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/\">OWASP Security Misconfiguration</a> <a href=\"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\">OWASP Cryptographic Failures</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 201, "name": "Insertion of Sensitive Information Into Sent Data", "href": "https://api.veracode.com/appsec/v1/cwes/201"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 92, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "com.veracode.verademo.controller.UserController.emailExceptionsToAdmin", "exploitability": -1, "attack_vector": "javax.mail.Transport.send", "file_line_number": 1019}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-314 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:09.522Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 103, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 5, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.ResetController.processReset", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 99}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-288 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:45.793Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 34, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/ResetController.java", "file_name": "ResetController.java", "module": "verademo.war", "relative_location": 17, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.ResetController.recreateDatabaseSchema", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 259}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-289 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:48.604Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 83, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 11, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.BlabController.showFeed", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 69}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-281 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:25.755Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 146, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 25, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.BlabController.getMoreFeed", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 182}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-282 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:28.389Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 64, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 23, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.BlabController.processFeed", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 232}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-283 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:31.052Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 43, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 17, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.BlabController.showBlab", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 307}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-284 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:34.395Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 123, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 22, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.BlabController.processBlab", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 400}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-285 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:37.615Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 149, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 26, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.BlabController.showBlabbers", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 483}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-286 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:40.385Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 128, "scan_type": "STATIC", "description": "<span>This call to getConnection() fails to use the J2EE container's resource management facilities as required by the J2EE standard.</span> <span>Request the connection from the container rather than attempting to access it directly.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/245.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 2, "cwe": {"id": 245, "name": "J2EE Bad Practices: Direct Management of Connections", "href": "https://api.veracode.com/appsec/v1/cwes/245"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 38, "finding_category": {"id": 7, "name": "API Abuse", "href": "https://api.veracode.com/appsec/v1/categories/7"}, "procedure": "com.veracode.verademo.controller.BlabController.processBlabbers", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 568}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-287 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:52:43.142Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"scan_type": "SCA", "description": "http/conn/ssl/AbstractVerifier.java in Apache Commons HttpClient before 4.2.3 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  NOTE: this issue exists because of an incomplete fix for CVE-2012-5783.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 2, "cwe": {"id": 20, "name": "Improper Input Validation", "href": "https://api.veracode.com/appsec/v1/cwes/20"}, "component_id": "1793362a-098a-47f2-95e8-0565117aa7fd", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2012-6153", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2012-6153", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:N/\u200bC:N/\u200bI:P/\u200bA:N", "cvss3": {"score": 3.7, "severity": "Low", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2012-6153", "epss_score": 0.00149, "epss_percentile": 0.51275, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "1d97ed10-545d-4c63-908c-dd23708b3bc4", "component_filename": "commons-httpclient-3.1.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-httpclient:commons-httpclient"}], "version": "3.1"}}, {"scan_type": "SCA", "description": "jcp/xml/dsig/internal/dom/DOMCanonicalizationMethod.java in Apache Santuario XML Security for Java 1.4.x before 1.4.8 and 1.5.x before 1.5.5 allows context-dependent attackers to spoof an XML Signature by using the CanonicalizationMethod parameter to specify an arbitrary weak \"canonicalization algorithm to apply to the SignedInfo part of the Signature.\"", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 2, "cwe": {"id": 310, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/cwes/310"}, "component_id": "36fa0a91-39cf-4663-96e1-a413324a37df", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2013-2172", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2013-2172", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:N/\u200bC:N/\u200bI:P/\u200bA:N", "cvss3": {"score": 3.7, "severity": "Low", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N"}, "exploitability": {"full_cve": "CVE-2013-2172", "epss_score": 0.00485, "epss_percentile": 0.76148, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "3799966b-3dd2-4e4a-8d23-33b1e150edf1", "component_filename": "xmlsec-1.5.1.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.santuario:xmlsec"}], "version": "1.5.1"}}, {"scan_type": "SCA", "description": "Apache Santuario XML Security for Java before 1.5.6, when applying Transforms, allows remote attackers to cause a denial of service (memory consumption) via crafted Document Type Definitions (DTDs), related to signatures.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 2, "cwe": {"id": 399, "name": "Resource Management Errors", "href": "https://api.veracode.com/appsec/v1/cwes/399"}, "component_id": "36fa0a91-39cf-4663-96e1-a413324a37df", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2013-4517", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2013-4517", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:N/\u200bC:N/\u200bI:N/\u200bA:P", "cvss3": {"score": 3.7, "severity": "Low", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L"}, "exploitability": {"full_cve": "CVE-2013-4517", "epss_score": 0.10429, "epss_percentile": 0.95039, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "3799966b-3dd2-4e4a-8d23-33b1e150edf1", "component_filename": "xmlsec-1.5.1.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/org.apache.santuario:xmlsec"}], "version": "1.5.1"}}, {"scan_type": "SCA", "description": "http/conn/ssl/SSLConnectionSocketFactory.java in Apache HttpComponents HttpClient before 4.3.6 ignores the http.socket.timeout configuration setting during an SSL handshake, which allows remote attackers to cause a denial of service (HTTPS call hang) via unspecified vectors.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 2, "cwe": {"id": 399, "name": "Resource Management Errors", "href": "https://api.veracode.com/appsec/v1/cwes/399"}, "component_id": "1793362a-098a-47f2-95e8-0565117aa7fd", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "TRANSITIVE"}, "cve": {"name": "CVE-2015-5262", "cvss": 4.3, "href": "http://nvd.nist.gov/vuln/detail/CVE-2015-5262", "severity": "Medium", "vector": "AV:N/\u200bAC:M/\u200bAu:N/\u200bC:N/\u200bI:N/\u200bA:P", "cvss3": {"score": 3.7, "severity": "Low", "vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L"}, "exploitability": {"full_cve": "CVE-2015-5262", "epss_score": 0.03292, "epss_percentile": 0.91362, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "1d97ed10-545d-4c63-908c-dd23708b3bc4", "component_filename": "commons-httpclient-3.1.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/commons-httpclient:commons-httpclient"}], "version": "3.1"}}, {"scan_type": "SCA", "description": "mysql-connector-java is vulnerable to denial of service. When working with a load balancing setup, if the connection property `loadBalanceStrategy` was set to `bestResponseTime` and connections to all the hosts in the original setup failed, a denial of service condition will occur in Connector/J, even if newly-added hosts are available.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-23T20:21:43.482Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 2, "component_id": "28614053-0ad6-4c0f-817e-6b4c89777501", "licenses": [{"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2020-2933", "cvss": 3.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-2933", "severity": "Low", "vector": "AV:N/AC:M/Au:S/C:N/I:N/A:P", "cvss3": {"score": 2.2, "severity": "Low", "vector": "AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:L"}, "exploitability": {"full_cve": "CVE-2020-2933", "epss_score": 0.00169, "epss_percentile": 0.54021, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "a75be37d-43dc-4106-aa8c-3033a545ba83", "component_filename": "mysql-connector-java-5.1.48.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/mysql:mysql-connector-java"}], "version": "5.1.48"}}, {"scan_type": "SCA", "description": "mysql-connector-java is vulnerable to denial of service. When working with a load balancing setup, if the connection property `loadBalanceStrategy` was set to `bestResponseTime` and connections to all the hosts in the original setup failed, a denial of service condition will occur in Connector/J, even if newly-added hosts are available.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:54:24.869Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 2, "component_id": "28614053-0ad6-4c0f-817e-6b4c89777501", "licenses": [{"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "AGENT", "sca_dep_mode": "DIRECT"}, "cve": {"name": "CVE-2020-2933", "cvss": 3.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-2933", "severity": "Low", "vector": "AV:N/AC:M/Au:S/C:N/I:N/A:P", "cvss3": {"score": 2.2, "severity": "Low", "vector": "AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:L"}, "exploitability": {"full_cve": "CVE-2020-2933", "epss_score": 0.00169, "epss_percentile": 0.54021, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "a75be37d-43dc-4106-aa8c-3033a545ba83", "component_filename": "mysql-connector-java-5.1.48.jar", "language": "JAVA", "component_path": [{"path": "pom.xml/mysql:mysql-connector-java"}], "version": "5.1.48"}}, {"scan_type": "SCA", "description": "mysql-connector-java is vulnerable to denial of service. When working with a load balancing setup, if the connection property `loadBalanceStrategy` was set to `bestResponseTime` and connections to all the hosts in the original setup failed, a denial of service condition will occur in Connector/J, even if newly-added hosts are available.", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2023-06-06T17:45:23.700Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:32:05.579Z"}, "finding_details": {"severity": 2, "component_id": "28614053-0ad6-4c0f-817e-6b4c89777501", "licenses": [{"license_id": "gpl-2.0", "risk_rating": "4"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2020-2933", "cvss": 3.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2020-2933", "severity": "Low", "vector": "AV:N/AC:M/Au:S/C:N/I:N/A:P", "cvss3": {"score": 2.2, "severity": "Low", "vector": "AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:L"}, "exploitability": {"full_cve": "CVE-2020-2933", "epss_score": 0.00169, "epss_percentile": 0.54021, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "a75be37d-43dc-4106-aa8c-3033a545ba83", "component_filename": "mysql-connector-java-5.1.48.jar", "language": "JAVA", "component_path": [{"path": "verademo.war#zip:\\verademo\\C:\\Git\\verademo\\verademo\\WEB-INF\\lib\\mysql-connector-java-5.1.48.jar"}], "version": "5.1.48"}}, {"issue_id": 80, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable result, which was previously allocated by a call to java.sql.Statement.executeQuery().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 19, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.processLogin", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 169}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-324 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:37.720Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 110, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable connect, which was previously allocated by a call to java.sql.DriverManager.getConnection().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 20, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 250}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-325 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:40.927Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 85, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable statement, which was previously allocated by a call to java.sql.Connection.createStatement().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 34, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 0, "attack_vector": "java.sql.Connection.createStatement", "file_line_number": 254}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-326 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:43.444Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 35, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable result, which was previously allocated by a call to java.sql.Statement.executeQuery().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 38, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.showPasswordHint", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 255}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-327 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:46.157Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 367, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable connect, which was previously allocated by a call to java.sql.DriverManager.getConnection().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 30, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.showTotp", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 293}, "build_id": 33657073}, {"issue_id": 368, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable statement, which was previously allocated by a call to java.sql.Connection.createStatement().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 53, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.showTotp", "exploitability": 0, "attack_vector": "java.sql.Connection.createStatement", "file_line_number": 297}, "build_id": 33657073}, {"issue_id": 369, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable result, which was previously allocated by a call to java.sql.Statement.executeQuery().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 58, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.showTotp", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 298}, "build_id": 33657073}, {"issue_id": 370, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable connect, which was previously allocated by a call to java.sql.DriverManager.getConnection().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 24, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.processTotp", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 335}, "build_id": 33657073}, {"issue_id": 371, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable statement, which was previously allocated by a call to java.sql.Connection.createStatement().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 39, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.processTotp", "exploitability": 0, "attack_vector": "java.sql.Connection.createStatement", "file_line_number": 339}, "build_id": 33657073}, {"issue_id": 372, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable result, which was previously allocated by a call to java.sql.Statement.executeQuery().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2024-02-28T20:53:00.780Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 43, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.processTotp", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 340}, "build_id": 33657073}, {"issue_id": 116, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable connect, which was previously allocated by a call to java.sql.DriverManager.getConnection().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 28, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.processRegister", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 412}, "build_id": 33657073}, {"issue_id": 154, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable statement, which was previously allocated by a call to java.sql.Connection.createStatement().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 50, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.processRegister", "exploitability": 0, "attack_vector": "java.sql.Connection.createStatement", "file_line_number": 415}, "build_id": 33657073}, {"issue_id": 77, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable result, which was previously allocated by a call to java.sql.Statement.executeQuery().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 57, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.processRegister", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 416}, "build_id": 33657073}, {"issue_id": 124, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable sqlStatement, which was previously allocated by a call to java.sql.Connection.createStatement().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 38, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.showProfile", "exploitability": 0, "attack_vector": "java.sql.Connection.createStatement", "file_line_number": 588}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-331 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:57.273Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 127, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable userHistoryResult, which was previously allocated by a call to java.sql.Statement.executeQuery().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/UserController.java", "file_name": "UserController.java", "module": "verademo.war", "relative_location": 40, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.UserController.showProfile", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 589}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-332 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:59.939Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 37, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable br, which was previously allocated by a call to java.io.BufferedReader.!operator_javanewinit().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/ToolsController.java", "file_name": "ToolsController.java", "module": "verademo.war", "relative_location": 62, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.ToolsController.ping", "exploitability": 0, "attack_vector": "java.io.BufferedReader.!operator_javanewinit", "file_line_number": 64}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-322 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:31.410Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 61, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable br, which was previously allocated by a call to java.io.BufferedReader.!operator_javanewinit().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/ToolsController.java", "file_name": "ToolsController.java", "module": "verademo.war", "relative_location": 71, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.ToolsController.fortune", "exploitability": 0, "attack_vector": "java.io.BufferedReader.!operator_javanewinit", "file_line_number": 96}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-323 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:34.641Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 22, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable connect, which was previously allocated by a call to java.sql.DriverManager.getConnection().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/controller/BlabController.java", "file_name": "BlabController.java", "module": "verademo.war", "relative_location": 25, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.controller.BlabController.getMoreFeed", "exploitability": 0, "attack_vector": "java.sql.DriverManager.getConnection", "file_line_number": 182}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-315 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:12.311Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 1, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable sqlStatement, which was previously allocated by a call to java.sql.Connection.createStatement().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/commands/RemoveAccountCommand.java", "file_name": "RemoveAccountCommand.java", "module": "verademo.war", "relative_location": 33, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.commands.RemoveAccountCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Connection.createStatement", "file_line_number": 38}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-320 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:26.114Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 86, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable result, which was previously allocated by a call to java.sql.Statement.executeQuery().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/commands/RemoveAccountCommand.java", "file_name": "RemoveAccountCommand.java", "module": "verademo.war", "relative_location": 40, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.commands.RemoveAccountCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 40}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-321 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:28.696Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 25, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable sqlStatement, which was previously allocated by a call to java.sql.Connection.createStatement().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/commands/ListenCommand.java", "file_name": "ListenCommand.java", "module": "verademo.war", "relative_location": 36, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.commands.ListenCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Connection.createStatement", "file_line_number": 38}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-318 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:20.596Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 138, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable result, which was previously allocated by a call to java.sql.Statement.executeQuery().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/commands/ListenCommand.java", "file_name": "ListenCommand.java", "module": "verademo.war", "relative_location": 44, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.commands.ListenCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 40}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-319 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:23.535Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 26, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable sqlStatement, which was previously allocated by a call to java.sql.Connection.createStatement().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/commands/IgnoreCommand.java", "file_name": "IgnoreCommand.java", "module": "verademo.war", "relative_location": 36, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.commands.IgnoreCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Connection.createStatement", "file_line_number": 38}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-316 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:14.974Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 54, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable result, which was previously allocated by a call to java.sql.Statement.executeQuery().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": false, "finding_status": {"first_found_date": "2022-03-03T14:19:03.888Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-03-08T19:37:14.479Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "file_path": "com/veracode/verademo/commands/IgnoreCommand.java", "file_name": "IgnoreCommand.java", "module": "verademo.war", "relative_location": 44, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "com.veracode.verademo.commands.IgnoreCommand.execute", "exploitability": 0, "attack_vector": "java.sql.Statement.executeQuery", "file_line_number": 40}, "annotations": [{"comment": "[Added by Veracode Integration for JIRA] JIRA Issue VER-317 has been opened for this flaw.", "action": "COMMENT", "created": "2023-06-29T14:54:17.912Z", "user_name": "Aaron Butler"}], "build_id": 33657073}, {"issue_id": 210, "scan_type": "DYNAMIC", "description": "PHNwYW4+VGhlIHNpdGUgdmVyYWRlbW8uYWFidXRsZXIudnVsbi5zYS52ZXJhY29kZS5pbzo4MCBkb2VzIG5vdCBwcm9wZXJseSB1dGlsaXplIHRoZSBYLUNvbnRlbnQtVHlwZS1PcHRpb25zIGhlYWRlci4gVGhpcyBoZWFkZXIgY2FuIGJlIHNldCB0byBwcm90ZWN0IGFnYWluc3QgTUlNRSB0eXBlIGNvbmZ1c2lvbiBhdHRhY2tzIGluIEludGVybmV0IEV4cGxvcmVyIHZlcnNpb25zIDkgYW5kIGhpZ2hlciwgQ2hyb21lIGFuZCBTYWZhcmkuIENvbnRlbnQgc25pZmZpbmcgaXMgYSBtZXRob2QgYnJvd3NlcnMgdXNlIHRvIGF0dGVtcHQgdG8gZGV0ZXJtaW5lIHRoZSByZWFsIGNvbnRlbnQgdHlwZSBvZiBhIHJlc3BvbnNlIGJ5IGxvb2tpbmcgYXQgdGhlIGNvbnRlbnQgaXRzZWxmLCBpbnN0ZWFkIG9mIHRoZSByZXNwb25zZSBoZWFkZXIncyBjb250ZW50LXR5cGUgdmFsdWUuIEJ5IHJldHVybmluZyBYLUNvbnRlbnQtVHlwZS1PcHRpb25zOiBub3NuaWZmLCBjZXJ0YWluIGVsZW1lbnRzIHdpbGwgb25seSBsb2FkIGV4dGVybmFsIHJlc291cmNlcyBpZiB0aGVpciBjb250ZW50LXR5cGUgbWF0Y2hlcyB3aGF0IGlzIGV4cGVjdGVkLiBJdCBzaG91bGQgYmUgbm90ZWQgdGhpcyBjaGVjayB3YXMgb25seSBleGVjdXRlZCBhZ2FpbnN0IHRoZSBmaXJzdCBmZXcgcGFnZXMgb2YgdGhpcyBzaXRlLiA8L3NwYW4+PHNwYW4+U2V0IHRoZSBYLUNvbnRlbnQtVHlwZS1PcHRpb25zIGhlYWRlciB0byBhIHZhbHVlIG9mICJub3NuaWZmIiAod2l0aG91dCBxdW90ZXMpLiBJdCBpcyByZWNvbW1lbmRlZCB0aGlzIGhlYWRlciBiZSBzZXQgc2lkZSB3aWRlIGJ5IGNvbmZpZ3VyaW5nIHlvdXIgd2ViIG9yIGFwcGxpY2F0aW9uIHNlcnZlciB0byByZXR1cm4gdGhpcyB2YWx1ZSBmb3IgYWxsIHJlc291cmNlcy4gTW9yZSBpbmZvcm1hdGlvbiBvbiBjb25maWd1cmluZyB0aGlzIGhlYWRlciBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cudmVyYWNvZGUuY29tL2Jsb2cvMjAxNC8wMy9ndWlkZWxpbmVzLWZvci1zZXR0aW5nLXNlY3VyaXR5LWhlYWRlcnMjeGN0byA8L3NwYW4+PHNwYW4+PGEgaHJlZj0iaHR0cDovL2N3ZS5taXRyZS5vcmcvY2dpLWJpbi9qdW1wbWVudS5jZ2k/aWQ9MTYiPkNXRTwvYT48L3NwYW4+", "count": 1, "context_type": "APPLICATION", "context_guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-21T20:38:56.113Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-23T15:21:36.528Z"}, "finding_details": {"severity": 0, "cwe": {"id": 16, "name": "Configuration", "href": "https://api.veracode.com/appsec/v1/cwes/16"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Server Configuration", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 27, "name": "Server Configuration", "href": "https://api.veracode.com/appsec/v1/categories/27"}, "vulnerable_parameter": "x-content-type-options header", "attack_vector": "Configuration", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 35282781}], "asset_info": {"guid": "0dae4e5d-2744-4191-9e52-22eaec684310", "type": "APPLICATION", "name": "Verademo", "attributes": {"app_url": "HomeAppProfile:90250:1367805", "team_accessible": true, "teams": [{"team_id": 256469, "team_name": "Backend Team", "guid": "0102931e-4d9b-4ac5-a5cd-4de16ffcab9a"}], "scans": [{"status": "PUBLISHED", "modified_date": "2024-04-23T15:21:37.000Z", "scan_url": "DynamicParamsView:90250:1367805:35282781:35251574::35267224", "scan_type": "DYNAMIC"}, {"status": "PUBLISHED", "modified_date": "2024-03-08T19:37:14.000Z", "scan_url": "StaticOverview:90250:1367805:33657073:33626540:33642190", "scan_type": "STATIC"}, {"status": "PUBLISHED", "modified_date": "2022-03-25T17:49:54.000Z", "scan_url": "ManualParamsView:90250:1367805:17489771:17462014:::17477664", "scan_type": "MANUAL"}], "created": "2022-03-03T14:17:53.000Z", "policy_in_grace_period": false, "policy_passed_rules": false, "policies": [{"guid": "ccdc9751-3057-44b4-b8f0-a1712cf17edd", "name": "OWASP Top 10", "policy_compliance_status": "DID_NOT_PASS"}], "last_completed_scan_date": "2024-04-23T15:21:37.000Z", "policy_passed_scan_requirements": true, "is_ignored": false}}}, "5d690c8f-d696-48b8-a2f9-0056d8b05c8c": {"findings_by_severity": {"sev5": 0, "sev4": 0, "sev3": 0, "sev2": 0, "sev1": 0, "sev0": 0}, "policy_findings_by_severity": {"sev5": 0, "sev4": 0, "sev3": 0, "sev2": 0, "sev1": 0, "sev0": 0}, "total_findings": 0, "total_policy_findings": 0, "app_findings": [], "asset_info": {"guid": "5d690c8f-d696-48b8-a2f9-0056d8b05c8c", "type": "APPLICATION", "name": "verademo-java-gcp", "attributes": {"app_url": "HomeAppProfile:90250:1461267", "team_accessible": true, "teams": [{"team_id": 256469, "team_name": "Backend Team", "guid": "0102931e-4d9b-4ac5-a5cd-4de16ffcab9a"}], "scans": [], "created": "2022-06-16T18:59:27.000Z", "policy_in_grace_period": false, "policy_passed_rules": false, "policies": [{"guid": "4cbdbf17-7979-4848-bd7f-f5c0e1b67d18", "name": "Veracode Recommended High + SCA", "policy_compliance_status": "NOT_ASSESSED"}], "last_completed_scan_date": null, "policy_passed_scan_requirements": false, "is_ignored": false}}}, "e88f93c6-afb9-44e4-a002-a4df820d73f7": {"findings_by_severity": {"sev5": 1, "sev4": 4, "sev3": 30, "sev2": 17, "sev1": 0, "sev0": 4}, "policy_findings_by_severity": {"sev5": 1, "sev4": 4, "sev3": 30, "sev2": 1, "sev1": 0, "sev0": 2}, "total_findings": 56, "total_policy_findings": 38, "app_findings": [{"scan_type": "SCA", "description": "log4net is vulnerable to XML external entity attacks. External DTDs are enabled by default and allow attackers to perform XXE attacks using malicious XML data and documents.", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-03-29T17:16:45.495Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:22:21.262Z"}, "finding_details": {"severity": 5, "cwe": {"id": 611, "name": "Improper Restriction of XML External Entity Reference", "href": "https://api.veracode.com/appsec/v1/cwes/611"}, "component_id": "8d522145-d957-4979-96a2-72e5bf3df345", "licenses": [{"license_id": "apache-2.0", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2018-1285", "cvss": 7.5, "href": "http://nvd.nist.gov/vuln/detail/CVE-2018-1285", "severity": "High", "vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "cvss3": {"score": 9.8, "severity": "Very High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"}, "exploitability": {"full_cve": "CVE-2018-1285", "epss_score": 0.00897, "epss_percentile": 0.82786, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "bddbe706-e127-4731-900b-8d8cf3de616a", "component_filename": "log4net.dll", "language": "_NET", "component_path": [{"path": "Verademo-dotnet.zip#zip:Content/D_C/a/1/s/Verademo-dotnet/obj/Release/Package/PackageTmp/bin/log4net.dll"}], "version": "2.0.8"}}, {"issue_id": 179, "scan_type": "DYNAMIC", "description": "<span>By injecting invalid SQL queries or commands such as '=(select(0)from(select(sleep(15)))as0x41)=' into the blabberUsername parameter, the application was observed to respond slower to custom attacks meant to cause execution of SQL queries to be delayed for a measurable amount of time. This is a form of time based SQL Injection, where an attacker injects a query that takes a long period of time to complete to infer whether the target inputs are vulnerable. </span><span>Avoid dynamically constructing SQL queries. Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=89\">CWE</a> <a href=\"http://www.owasp.org/index.php/SQL_injection\">OWASP</a> <a href=\"http://webappsec.pbworks.com/SQL-Injection\">WASC</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "path": "/verademo/blabbers", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "SQL Injection", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "vulnerable_parameter": "blabberUsername", "attack_vector": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/blabbers"}, "build_id": 22619331}, {"issue_id": 188, "scan_type": "DYNAMIC", "description": "<span>Injections happen when untrusted data is inserted into an interpreted syntax and subsequently evaluated on the server side. This syntax may be a SQL query, a parsed JSON or XML document, an executed script or other syntax that may be in use within the application. Although the target syntax has not been identified, the application behavior demonstrates that the input HTTP parameter may be inserted without proper escaping. It was observed by sending valid and invalid payloads that should throw or should not throw errors. By inserting a proper and improper comments such as ``, `*/_/*`, `/*_*/` into the `sort` parameter, the scanner was able to spot a difference in the responses, which is a good indicator of a potential vulnerability. Confidence: medium. Response codes: `200`, `302`, `200`. Similarities: `` vs `*/_/*`: 0.0; `*/_/*` vs `/*_*/`: 0.0; `` vs `/*_*/`: 1.0. </span><span>It is recommended to identify how the current parameter is used in the application source code, and make sure it is escaped before inserting into any syntax or query. You can add valid values to an allowlist and invalid values to a blocklist. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=74\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 4, "cwe": {"id": 74, "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/74"}, "path": "/verademo/blabbers?sort=blab_name+ASC%2F*_*%2F", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Code Injection", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 28, "name": "Code Injection", "href": "https://api.veracode.com/appsec/v1/categories/28"}, "vulnerable_parameter": "sort", "attack_vector": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/blabbers?sort=blab_name+ASC%2F*_*%2F"}, "build_id": 22619331}, {"issue_id": 82, "scan_type": "STATIC", "description": "<span>This database query contains a SQL injection flaw.  The call to system_data_dll.System.Data.IDbCommand.ExecuteReader() constructs a dynamic SQL query using a variable derived from untrusted input.  An attacker could exploit this flaw to execute arbitrary SQL queries against the database. ExecuteReader() was called on the command object, which contains tainted data. </span> <span>Avoid dynamically constructing SQL queries.  Instead, use parameterized prepared statements to prevent the database from interpreting the contents of bind variables as part of the query.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/89.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/SQL_Injection\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "PROPOSED", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 4, "cwe": {"id": 89, "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')", "href": "https://api.veracode.com/appsec/v1/cwes/89"}, "file_path": "a/1/s/verademo-dotnet/controllers/homecontroller.cs", "file_name": "homecontroller.cs", "module": "verademo-dotnet.dll", "relative_location": 64, "finding_category": {"id": 19, "name": "SQL Injection", "href": "https://api.veracode.com/appsec/v1/categories/19"}, "procedure": "verademo_2Ddotnet_dll.Verademo_dotnet.Controllers.HomeController.Index", "exploitability": 0, "attack_vector": "system_data_dll.System.Data.IDbCommand.ExecuteReader", "file_line_number": 39}, "annotations": [{"comment": "Network controlled", "action": "NETENV", "created": "2023-06-30T16:39:23.364Z", "user_name": "Aaron Butler"}], "build_id": 35444429}, {"scan_type": "SCA", "description": "Newtonsoft.Json is vulnerable to denial of service. The use of insecure defaults cause an StackOverFlow exception (SOE) whenever nested expressions are being processed when an attacker sends 5 requests that cause SOE in time frame of 5 minutes.\n\n", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2024-04-26T17:22:18.448Z", "status": "OPEN", "resolution": "UNRESOLVED", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:22:21.262Z"}, "finding_details": {"severity": 4, "cwe": {"id": 755, "name": "Improper Handling of Exceptional Conditions", "href": "https://api.veracode.com/appsec/v1/cwes/755"}, "component_id": "9cb2b0d6-622d-4f72-96da-df5b6a8d1612", "licenses": [{"license_id": "mit", "risk_rating": "2"}], "metadata": {"sca_scan_mode": "UPLOAD", "sca_dep_mode": "UNKNOWN"}, "cve": {"name": "CVE-2024-21907", "cvss": 5.0, "href": "http://nvd.nist.gov/vuln/detail/CVE-2024-21907", "severity": "Medium", "vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "cvss3": {"score": 7.5, "severity": "High", "vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"}, "exploitability": {"full_cve": "CVE-2024-21907", "epss_score": 0.00255, "epss_percentile": 0.65617, "epss_score_date": "2024-06-27", "epss_model_version": "v2023.03.01", "epss_citation": "See EPSS at https://www.first.org/epss", "epss_status": "match found", "exploit_service_status": "available"}}, "product_id": "e6fa8486-6247-4a32-a24a-1bd465d453e1", "component_filename": "Newtonsoft.Json.dll", "language": "_NET", "component_path": [{"path": "Verademo-dotnet.zip#zip:Content/D_C/a/1/s/Verademo-dotnet/obj/Release/Package/PackageTmp/bin/Newtonsoft.Json.dll"}], "version": "6.0.4"}}, {"issue_id": 178, "scan_type": "DYNAMIC", "description": "<span>The product does not use a protection mechanism that provides sufficient defense against directed attacks against the product. Specifically, the site does not take appropriate measures to protect against UI redressing attacks (Clickjacking). It is possible to overlay the target page inside an IFRAME from an attacker's controlled web site. By doing so, they can attempt to trick a user into executing an unwarranted action without the user's knowledge or consent. More information on Clickjacking can be found on OWASP's website: https://www.owasp.org/index.php/Clickjacking. </span><span>To protect against Clickjacking, it is recommended that any page that contains forms which require a user to enter sensitive information use the X-Frame-Options header set to either DENY or SAMEORIGIN. More information on security headers can be found on Veracode's website: https://www.veracode.com/blog/2014/03/guidelines-for-setting-security-headers/#xfo. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=693\">CWE</a> <a href=\"https://www.owasp.org/index.php/Clickjacking\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 693, "name": "Protection Mechanism Failure", "href": "https://api.veracode.com/appsec/v1/cwes/693"}, "path": "/verademo/login", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Encapsulation", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 22, "name": "Encapsulation", "href": "https://api.veracode.com/appsec/v1/categories/22"}, "vulnerable_parameter": "/verademo/login", "attack_vector": "Protection Mechanism Failure", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/login"}, "build_id": 22619331}, {"issue_id": 181, "scan_type": "DYNAMIC", "description": "<span>It has been observed that credentials are being sent over clear text channels when logging in to http://verademo.aabutler.vuln.sa.veracode.io/verademo/feed. </span><span>Ensure that credentials are transmitted over encrypted channels such as HTTPS. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=522\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 522, "name": "Insufficiently Protected Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/522"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Credentials Management", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "vulnerable_parameter": "BODY", "attack_vector": "Insufficiently Protected Credentials", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 22619331}, {"issue_id": 182, "scan_type": "DYNAMIC", "description": "<span>It has been observed that credentials are being sent over clear text channels when logging in to http://verademo.aabutler.vuln.sa.veracode.io/verademo/login. </span><span>Ensure that credentials are transmitted over encrypted channels such as HTTPS. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=522\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 522, "name": "Insufficiently Protected Credentials", "href": "https://api.veracode.com/appsec/v1/cwes/522"}, "path": "/verademo/login", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Credentials Management", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "vulnerable_parameter": "BODY", "attack_vector": "Insufficiently Protected Credentials", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/login"}, "build_id": 22619331}, {"issue_id": 183, "scan_type": "DYNAMIC", "description": "<span>The username cookie does not have the \"HttpOnly\" attribute set. Using this attribute helps to prevent client-side Javascript from accessing the cookie, thereby mitigating one of the most common XSS exploit scenarios. </span><span>Unless the application requires that cookies be accessible to Javascript code, set the \"HttpOnly\" attribute when generating cookies. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=402\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 402, "name": "Transmission of Private Resources into a New Sphere ('Resource Leak')", "href": "https://api.veracode.com/appsec/v1/cwes/402"}, "path": "/verademo/profile", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Deployment Configuration", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 26, "name": "Deployment Configuration", "href": "https://api.veracode.com/appsec/v1/categories/26"}, "vulnerable_parameter": "username", "attack_vector": "Transmission of Private Resources into a New Sphere ('Resource Leak')", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/profile"}, "build_id": 22619331}, {"issue_id": 185, "scan_type": "DYNAMIC", "description": "<span>It is possible to execute Javascript code by entering a payload such as 1\"<script>vc0d3(3224062491)</script>\" into the following input field <INPUT class='form-control' type='text' name='blab' placeholder='Blab something now...'></INPUT> located at http://verademo.aabutler.vuln.sa.veracode.io/verademo/feed. This attack was carried out via text entry in a web browser. This type of vulnerability can be exploited by a malicious third party convincing a user to cut and paste untrusted data into their browser or via compromised client-side tools, such as browser extensions. The application populates the HTTP response with user-supplied input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser. XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. </span><span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=80\">CWE</a> <a href=\"http://www.owasp.org/index.php/XSS\">OWASP</a> <a href=\"http://webappsec.pbworks.com/Cross-Site-Scripting\">WASC</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Cross-Site Scripting (XSS)", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "vulnerable_parameter": "<INPUT class='form-control' type='text' name='blab' placeholder='Blab something now...'></INPUT>", "attack_vector": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 22619331}, {"issue_id": 186, "scan_type": "DYNAMIC", "description": "<span>The username cookie does not have the SameSite attribute set. Using this attribute helps protect against Cross-Site-Request-Forgery (CSRF) attacks, by restricting when cookies will be sent to the site. CSRF attacks are a class of confused deputy attacks that exploit the behavior of browsers always sending authorization cookies in requests. </span><span>By setting the SameSite attribute to 'Strict' or 'Lax' on security-related cookies, it is possible to prevent the web browser from sending cookies to the target site when form submissions or requests are initiated from third party sites. In Strict mode, under no circumstances can a third party site initiate requests with the cookie value being transmitted to the protected site. The cookie will only be sent in requests that originate from the same origin where the cookie was created. This effectively mitigates CSRF attacks provided cookies are set with the SameSite=Strict directive. The 'Lax' directive allows the cookie to be sent from third party sites for GET requests, but not POST, DELETE, or PUT requests. As such, it is recommended if the Lax directive is selected, it be used in combination with other Anti-CSRF measures. More information on CSRF protections and frameworks can be found on OWASP's website: https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF). More information on the SameSite cookie attribute can be found at https://www.owasp.org/index.php/SameSite. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=352\">CWE</a> <a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 352, "name": "Cross-Site Request Forgery (CSRF)", "href": "https://api.veracode.com/appsec/v1/cwes/352"}, "path": "/verademo/profile", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Authentication Issues", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 11, "name": "Authentication Issues", "href": "https://api.veracode.com/appsec/v1/categories/11"}, "vulnerable_parameter": "username", "attack_vector": "Cross-Site Request Forgery (CSRF)", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/profile"}, "build_id": 22619331}, {"issue_id": 191, "scan_type": "DYNAMIC", "description": "<span>It is possible to inject arbitrary HTML tags such as 1<script>vc0d3(9806396730)</script> into the blab parameter on http://verademo.aabutler.vuln.sa.veracode.io/verademo/feed which results in Javascript code being executed on http://verademo.aabutler.vuln.sa.veracode.io/verademo/feed. This form of Cross-Site Scripting is considered persistent XSS due to the fact that once the injected data is sent to the server, it is stored and persists across requests. This can have varying consequences depending on where and to whom the inserted data is displayed. XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. </span><span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=80\">CWE</a> <a href=\"http://www.owasp.org/index.php/XSS\">OWASP</a> <a href=\"http://webappsec.pbworks.com/Cross-Site-Scripting\">WASC</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Cross-Site Scripting (XSS)", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "vulnerable_parameter": "blab", "attack_vector": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 22619331}, {"issue_id": 193, "scan_type": "DYNAMIC", "description": "<span>The target web page does not specify Content-Security-Policy. While lack of Content-Security-Policy on the website does not represents a security risk by itself, a strict Content-Security-Policy may serve as an additional protection layer from Cross-Site-Scripting attacks. Content-Security-Policy helps to ensure that all resources (such as scripts, images or video files) on the website are loaded from trusted sources. Content-Security-Policy may also help to protect from UI redressing attacks, such as \"Clickjacking\". </span><span>Consider implementing strict Content-Security-Policy by setting the corresponding HTTP header for each page response from the website. It is recommended to move all scripts to trusted locations and specify \"script-src\" or \"default-src\" directives. If inline javascript is required on the website, inline scripts may be accompanied with a cryptographic nonce (number used once) or a hash, to ensure only trusted scripts are executed. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=829\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 829, "name": "Inclusion of Functionality from Untrusted Control Sphere", "href": "https://api.veracode.com/appsec/v1/cwes/829"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Insecure Dependencies", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 32, "name": "Insecure Dependencies", "href": "https://api.veracode.com/appsec/v1/categories/32"}, "attack_vector": "Inclusion of Functionality from Untrusted Control Sphere", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 22619331}, {"issue_id": 194, "scan_type": "DYNAMIC", "description": "<span>It is possible to trick a user into executing potentially dangerous actions against the target site due to a lack of Cross-Site-Request-Forgery (CSRF) protections. CSRF attacks are a class of confused deputy attacks that exploit the behavior of browsers always sending authorization cookies in requests. The target site has no secure way of verifying the request was initiated from a link on a trusted domain. </span><span>To protect against CSRF attacks, all forms should be protected by generating a random unique nonce value each time the page is requested. This nonce value should be included into the form as a parameter, usually as a hidden input field. These nonce values should be linked to the user's session ID and validated on submission by comparing the generated nonce value for the form with the one that was submitted by the user. It is recommended that built in CSRF protections offered by various vetted libraries or frameworks are used instead of developing a custom implementation. Additionally, session cookies should be protected with the SameSite attribute set to either Strict or Lax. More information on CSRF protections and frameworks can be found on OWASP's website: https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF). More information on the SameSite cookie attribute can be found at https://www.owasp.org/index.php/SameSite. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=352\">CWE</a> <a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 352, "name": "Cross-Site Request Forgery (CSRF)", "href": "https://api.veracode.com/appsec/v1/cwes/352"}, "path": "/verademo/profile", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Authentication Issues", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 11, "name": "Authentication Issues", "href": "https://api.veracode.com/appsec/v1/categories/11"}, "vulnerable_parameter": "BODY", "attack_vector": "Cross-Site Request Forgery (CSRF)", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/profile"}, "build_id": 22619331}, {"issue_id": 196, "scan_type": "DYNAMIC", "description": "<span>The target web page does not specify Content-Security-Policy. While lack of Content-Security-Policy on the website does not represents a security risk by itself, a strict Content-Security-Policy may serve as an additional protection layer from Cross-Site-Scripting attacks. Content-Security-Policy helps to ensure that all resources (such as scripts, images or video files) on the website are loaded from trusted sources. Content-Security-Policy may also help to protect from UI redressing attacks, such as \"Clickjacking\". </span><span>Consider implementing strict Content-Security-Policy by setting the corresponding HTTP header for each page response from the website. It is recommended to move all scripts to trusted locations and specify \"script-src\" or \"default-src\" directives. If inline javascript is required on the website, inline scripts may be accompanied with a cryptographic nonce (number used once) or a hash, to ensure only trusted scripts are executed. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=829\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 829, "name": "Inclusion of Functionality from Untrusted Control Sphere", "href": "https://api.veracode.com/appsec/v1/cwes/829"}, "path": "/verademo/login", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Insecure Dependencies", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 32, "name": "Insecure Dependencies", "href": "https://api.veracode.com/appsec/v1/categories/32"}, "attack_vector": "Inclusion of Functionality from Untrusted Control Sphere", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/login"}, "build_id": 22619331}, {"issue_id": 199, "scan_type": "DYNAMIC", "description": "<span>The JSESSIONID cookie does not have the SameSite attribute set. Using this attribute helps protect against Cross-Site-Request-Forgery (CSRF) attacks, by restricting when cookies will be sent to the site. CSRF attacks are a class of confused deputy attacks that exploit the behavior of browsers always sending authorization cookies in requests. </span><span>By setting the SameSite attribute to 'Strict' or 'Lax' on security-related cookies, it is possible to prevent the web browser from sending cookies to the target site when form submissions or requests are initiated from third party sites. In Strict mode, under no circumstances can a third party site initiate requests with the cookie value being transmitted to the protected site. The cookie will only be sent in requests that originate from the same origin where the cookie was created. This effectively mitigates CSRF attacks provided cookies are set with the SameSite=Strict directive. The 'Lax' directive allows the cookie to be sent from third party sites for GET requests, but not POST, DELETE, or PUT requests. As such, it is recommended if the Lax directive is selected, it be used in combination with other Anti-CSRF measures. More information on CSRF protections and frameworks can be found on OWASP's website: https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF). More information on the SameSite cookie attribute can be found at https://www.owasp.org/index.php/SameSite. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=352\">CWE</a> <a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 3, "cwe": {"id": 352, "name": "Cross-Site Request Forgery (CSRF)", "href": "https://api.veracode.com/appsec/v1/cwes/352"}, "path": "/verademo/login", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Authentication Issues", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 11, "name": "Authentication Issues", "href": "https://api.veracode.com/appsec/v1/categories/11"}, "vulnerable_parameter": "JSESSIONID", "attack_vector": "Cross-Site Request Forgery (CSRF)", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/login"}, "build_id": 22619331}, {"issue_id": 79, "scan_type": "STATIC", "description": "<span>This call to system_web_dll.System.Web.HttpResponse.Write() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. The first argument to Write() contains tainted data from the variable this.get_Request().get_QueryString().get_Item(). The tainted data originated from an earlier call to system_web_dll.System.Web.HttpRequest.get_QueryString.</span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "file_path": "a/1/s/verademo-dotnet/xssinjection.aspx.cs", "file_name": "xssinjection.aspx.cs", "module": "verademo-dotnet.dll", "relative_location": 53, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "procedure": "verademo_2Ddotnet_dll.Verademo_dotnet.XssInjection.Page_Load", "exploitability": 2, "attack_vector": "system_web_dll.System.Web.HttpResponse.Write", "file_line_number": 16}, "build_id": 35444429}, {"issue_id": 81, "scan_type": "STATIC", "description": "<span>This call to system_web_dll.System.Web.HttpResponse.Redirect() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The first argument to Redirect() contains tainted data from the variable this.get_Request().get_QueryString().get_Item(). The tainted data originated from an earlier call to system_web_dll.System.Web.HttpRequest.get_QueryString.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "file_path": "a/1/s/verademo-dotnet/openredirect.aspx.cs", "file_name": "openredirect.aspx.cs", "module": "verademo-dotnet.dll", "relative_location": 38, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "verademo_2Ddotnet_dll.Verademo_dotnet.FormOpenRedirect.Page_Load", "exploitability": 1, "attack_vector": "system_web_dll.System.Web.HttpResponse.Redirect", "file_line_number": 20}, "build_id": 35444429}, {"issue_id": 80, "scan_type": "STATIC", "description": "<span>This call to system_web_dll.System.Web.HttpResponse.Redirect() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The first argument to Redirect() contains tainted data from the variable UrlEncode(). The tainted data originated from an earlier call to system_web_dll.System.Web.HttpRequest.get_QueryString.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "file_path": "a/1/s/verademo-dotnet/openredirect.aspx.cs", "file_name": "openredirect.aspx.cs", "module": "verademo-dotnet.dll", "relative_location": 66, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "verademo_2Ddotnet_dll.Verademo_dotnet.FormOpenRedirect.Page_Load", "exploitability": 1, "attack_vector": "system_web_dll.System.Web.HttpResponse.Redirect", "file_line_number": 23}, "build_id": 35444429}, {"issue_id": 84, "scan_type": "STATIC", "description": "<span>This call to system_web_dll.System.Web.HttpResponse.Redirect() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The first argument to Redirect() contains tainted data from the variable this.MyCustomCleanser(). The tainted data originated from an earlier call to system_web_dll.System.Web.HttpRequest.get_QueryString.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "file_path": "a/1/s/verademo-dotnet/openredirect.aspx.cs", "file_name": "openredirect.aspx.cs", "module": "verademo-dotnet.dll", "relative_location": 95, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "verademo_2Ddotnet_dll.Verademo_dotnet.FormOpenRedirect.Page_Load", "exploitability": 1, "attack_vector": "system_web_dll.System.Web.HttpResponse.Redirect", "file_line_number": 26}, "build_id": 35444429}, {"issue_id": 85, "scan_type": "STATIC", "description": "<span>This variable assignment uses a hard-coded password that may compromise system security in a way that cannot be easily remedied.  The use of a hard-coded password significantly increases the possibility that the account being protected will be compromised.  Moreover, the password cannot be changed without patching the software.  If a hard-coded password is compromised in a commercial product, all deployed instances may be vulnerable to attack.  In some cases, this finding may indicate a reference to a password (e.g. the name of a key in a properties file) rather than an actual password. hardcodedpasswdset password</span> <span>Store passwords out-of-band from the application code.  Follow best practices for protecting credentials stored in locations such as configuration or properties files. An HSM may be appropriate for particularly sensitive credentials.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/259.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 259, "name": "Use of Hard-coded Password", "href": "https://api.veracode.com/appsec/v1/cwes/259"}, "file_path": "a/1/s/verademo-dotnet/controllers/homecontroller.cs", "file_name": "homecontroller.cs", "module": "verademo-dotnet.dll", "relative_location": 4, "finding_category": {"id": 10, "name": "Credentials Management", "href": "https://api.veracode.com/appsec/v1/categories/10"}, "procedure": "verademo_2Ddotnet_dll.Verademo_dotnet.Controllers.HomeController.Index", "exploitability": 1, "attack_vector": "hardcodedpasswdset", "file_line_number": 17}, "build_id": 35444429}, {"issue_id": 86, "scan_type": "STATIC", "description": "<span>This call to mscorlib_dll.System.IO.File.Delete() contains a path manipulation flaw.  The argument to the function is a filename constructed using untrusted input.  If an attacker is allowed to specify all or part of the filename, it may be possible to gain unauthorized access to files on the server, including those outside the webroot, that would be normally be inaccessible to end users.  The level of exposure depends on the effectiveness of input validation routines, if any. The first argument to Delete() contains tainted data from the variable filePath. The tainted data originated from earlier calls to verademo_2Ddotnet_dll.VirtualController.vc_mvcentry, and verademo_2Ddotnet_dll.Verademo_dotnet.Controllers.HomeController.Index.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/73.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 73, "name": "External Control of File Name or Path", "href": "https://api.veracode.com/appsec/v1/cwes/73"}, "file_path": "a/1/s/verademo-dotnet/controllers/homecontroller.cs", "file_name": "homecontroller.cs", "module": "verademo-dotnet.dll", "relative_location": 90, "finding_category": {"id": 1, "name": "Directory Traversal", "href": "https://api.veracode.com/appsec/v1/categories/1"}, "procedure": "verademo_2Ddotnet_dll.Verademo_dotnet.Controllers.HomeController.Index", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.File.Delete", "file_line_number": 50}, "build_id": 35444429}, {"issue_id": 83, "scan_type": "STATIC", "description": "<span>This call to mscorlib_dll.System.IO.File.OpenText() contains a path manipulation flaw.  The argument to the function is a filename constructed using untrusted input.  If an attacker is allowed to specify all or part of the filename, it may be possible to gain unauthorized access to files on the server, including those outside the webroot, that would be normally be inaccessible to end users.  The level of exposure depends on the effectiveness of input validation routines, if any. The first argument to OpenText() contains tainted data from the variable filePath. The tainted data originated from earlier calls to verademo_2Ddotnet_dll.Verademo_dotnet.Controllers.DefaultController.Index, and verademo_2Ddotnet_dll.VirtualController.vc_mvcentry.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/73.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 73, "name": "External Control of File Name or Path", "href": "https://api.veracode.com/appsec/v1/cwes/73"}, "file_path": "a/1/s/verademo-dotnet/controllers/defaultcontroller.cs", "file_name": "defaultcontroller.cs", "module": "verademo-dotnet.dll", "relative_location": 11, "finding_category": {"id": 1, "name": "Directory Traversal", "href": "https://api.veracode.com/appsec/v1/categories/1"}, "procedure": "verademo_2Ddotnet_dll.Verademo_dotnet.Controllers.DefaultController.Index", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.File.OpenText", "file_line_number": 23}, "build_id": 35444429}, {"issue_id": 87, "scan_type": "STATIC", "description": "<span>This call to log4net_dll.log4net.ILog.Info() could result in a log forging attack.  Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files.  Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility.  For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible. The first argument to Info() contains tainted data. The tainted data originated from earlier calls to verademo_2Ddotnet_dll.VirtualController.vc_mvcentry, and verademo_2Ddotnet_dll.Verademo_dotnet.Controllers.DefaultController.Index.</span> <span>Avoid directly embedding user input in log files when possible.  Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data.  Alternatively, some of the XSS escaping functions from the OWASP Java Encoder project will also sanitize CRLF sequences.  Only create a custom blocklist when absolutely necessary.  Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/117.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Log_Injection\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers?tocId=nYnZqAenFFZmB75MQrZwuA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 117, "name": "Improper Output Neutralization for Logs", "href": "https://api.veracode.com/appsec/v1/cwes/117"}, "file_path": "a/1/s/verademo-dotnet/controllers/defaultcontroller.cs", "file_name": "defaultcontroller.cs", "module": "verademo-dotnet.dll", "relative_location": 77, "finding_category": {"id": 21, "name": "CRLF Injection", "href": "https://api.veracode.com/appsec/v1/categories/21"}, "procedure": "verademo_2Ddotnet_dll.Verademo_dotnet.Controllers.DefaultController.Index", "exploitability": 1, "attack_vector": "log4net_dll.log4net.ILog.Info", "file_line_number": 28}, "build_id": 35444429}, {"issue_id": 71, "scan_type": "STATIC", "description": "<span>This call to mscorlib_dll.System.IO.FileInfo.OpenRead() contains a path manipulation flaw.  The argument to the function is a filename constructed using untrusted input.  If an attacker is allowed to specify all or part of the filename, it may be possible to gain unauthorized access to files on the server, including those outside the webroot, that would be normally be inaccessible to end users.  The level of exposure depends on the effectiveness of input validation routines, if any. OpenRead() was called on an object, which contains tainted data. The tainted data originated from an earlier call to system_web_dll.System.Web.HttpRequestBase.get_PathInfo.</span> <span>Validate all untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.  When using blocklists, be sure that the sanitizing routine performs a sufficient number of iterations to remove all instances of disallowed characters.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/73.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/Path_Traversal\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 73, "name": "External Control of File Name or Path", "href": "https://api.veracode.com/appsec/v1/cwes/73"}, "module": "system.web.optimization.dll", "relative_location": 91, "finding_category": {"id": 1, "name": "Directory Traversal", "href": "https://api.veracode.com/appsec/v1/categories/1"}, "procedure": "system_web_optimization_dll.System.Web.Optimization.FileVirtualPathProvider.FileInfoVirtualFile.Open", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.FileInfo.OpenRead", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 135, "scan_type": "STATIC", "description": "<span>Standard random number generators do not provide a sufficient amount of entropy when used for security purposes. Attackers can brute force the output of pseudorandom number generators such as rand().</span> <span>If this random number is used where security is a concern, such as generating a session key or session identifier, use a trusted cryptographic random number generator instead.  These can be found on the Windows platform in the CryptoAPI or in an open source library such as OpenSSL.  In Java, use the SecureRandom object to ensure sufficient entropy.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/331.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 331, "name": "Insufficient Entropy", "href": "https://api.veracode.com/appsec/v1/cwes/331"}, "module": "log4net.dll", "relative_location": 24, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "log4net_dll.log4net.Util.PatternStringConverters.RandomStringPatternConverter.Convert", "exploitability": -1, "attack_vector": "mscorlib_dll.System.Random.Next", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 118, "scan_type": "STATIC", "description": "<span>This call to mscorlib_dll.System.IO.TextWriter.WriteLine() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. The first argument to WriteLine() contains tainted data. The tainted data originated from earlier calls to system_dll.System.Net.WebResponse.GetResponseStream, and system_dll.System.Net.WebRequest.GetResponse.</span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "module": "log4net.dll", "relative_location": 26, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "procedure": "log4net_dll.log4net.Util.LogLog.EmitOutLine", "exploitability": 2, "attack_vector": "mscorlib_dll.System.IO.TextWriter.WriteLine", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 119, "scan_type": "STATIC", "description": "<span>This call to mscorlib_dll.System.IO.TextWriter.WriteLine() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. The first argument to WriteLine() contains tainted data. The tainted data originated from earlier calls to system_dll.System.Net.WebResponse.GetResponseStream, system_dll.System.Net.WebRequest.GetResponse, system_web_dll.System.Web.HttpRequest.get_Params, and system_dll.System.Net.Dns.GetHostName.</span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "module": "log4net.dll", "relative_location": 26, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "procedure": "log4net_dll.log4net.Util.LogLog.EmitErrorLine", "exploitability": 2, "attack_vector": "mscorlib_dll.System.IO.TextWriter.WriteLine", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 165, "scan_type": "STATIC", "description": "<span>This call to system_web_dll.System.Web.HttpResponseBase.RedirectPermanent() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The first argument to RedirectPermanent() contains tainted data. The tainted data originated from an earlier call to system_web_dll.System.Web.Routing.RouteCollection.GetVirtualPath.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "module": "system.web.mvc.dll", "relative_location": 82, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "system_web_mvc_dll.System.Web.Mvc.RedirectToRouteResult.ExecuteResult", "exploitability": 1, "attack_vector": "system_web_dll.System.Web.HttpResponseBase.RedirectPermanent", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 166, "scan_type": "STATIC", "description": "<span>This call to system_web_dll.System.Web.HttpResponseBase.Redirect() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The first argument to Redirect() contains tainted data. The tainted data originated from an earlier call to system_web_dll.System.Web.Routing.RouteCollection.GetVirtualPath.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "module": "system.web.mvc.dll", "relative_location": 95, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "system_web_mvc_dll.System.Web.Mvc.RedirectToRouteResult.ExecuteResult", "exploitability": 1, "attack_vector": "system_web_dll.System.Web.HttpResponseBase.Redirect", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 167, "scan_type": "STATIC", "description": "<span>This call to system_web_dll.System.Web.HttpResponseBase.RedirectPermanent() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The first argument to RedirectPermanent() contains tainted data. The tainted data originated from earlier calls to system_web_dll.System.Web.HttpRequestBase.get_RawUrl, and system_web_dll.System.Web.HttpRequestBase.get_Url.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "module": "system.web.mvc.dll", "relative_location": 77, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "system_web_mvc_dll.System.Web.Mvc.RedirectResult.ExecuteResult", "exploitability": 1, "attack_vector": "system_web_dll.System.Web.HttpResponseBase.RedirectPermanent", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 168, "scan_type": "STATIC", "description": "<span>This call to system_web_dll.System.Web.HttpResponseBase.Redirect() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The first argument to Redirect() contains tainted data. The tainted data originated from earlier calls to system_web_dll.System.Web.HttpRequestBase.get_RawUrl, and system_web_dll.System.Web.HttpRequestBase.get_Url.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "module": "system.web.mvc.dll", "relative_location": 94, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "system_web_mvc_dll.System.Web.Mvc.RedirectResult.ExecuteResult", "exploitability": 1, "attack_vector": "system_web_dll.System.Web.HttpResponseBase.Redirect", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 169, "scan_type": "STATIC", "description": "<span>This call to system_web_mvc_dll.System.Web.Mvc.RedirectResult.!newinit_0_1() contains a URL redirection to untrusted site flaw.  Writing untrusted input into a URL value could cause the web application to redirect the request to the specified URL, leading to phishing attempts to steal user credentials.</span> <span>Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible. The first argument to !newinit_0_1() contains tainted data. The tainted data originated from earlier calls to system_web_dll.System.Web.HttpRequestBase.get_RawUrl, and system_web_dll.System.Web.HttpRequestBase.get_Url.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/601.html\">CWE</a> <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\">OWASP</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 601, "name": "URL Redirection to Untrusted Site ('Open Redirect')", "href": "https://api.veracode.com/appsec/v1/cwes/601"}, "module": "system.web.mvc.dll", "relative_location": 94, "finding_category": {"id": 25, "name": "Insufficient Input Validation", "href": "https://api.veracode.com/appsec/v1/categories/25"}, "procedure": "system_web_mvc_dll.System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest", "exploitability": 1, "attack_vector": "system_web_mvc_dll.System.Web.Mvc.RedirectResult.!newinit_0_1", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 173, "scan_type": "STATIC", "description": "<span>This function uses the mscorlib_dll.System.Security.Cryptography.MD5.Create() function, which uses a hash algorithm that is considered weak. In recent years, researchers have demonstrated ways to breach many uses of previously-thought-safe hash functions such as MD5. </span> <span>Consider using a stronger algorithm in order to prevent attackers from being able to manipulate hash results. If this algorithm is being used to hash passwords, then consider using a strong computationally-hard algorithm such as PBKDF2 or bcrypt instead of a plain hashing algorithm.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/327.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 327, "name": "Use of a Broken or Risky Cryptographic Algorithm", "href": "https://api.veracode.com/appsec/v1/cwes/327"}, "module": "webgrease.dll", "relative_location": 23, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "webgrease_dll.Microsoft.Ajax.Utilities.ScriptSharpSourceMap.EndPackage", "exploitability": 1, "attack_vector": "mscorlib_dll.System.Security.Cryptography.MD5.Create", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 177, "scan_type": "STATIC", "description": "<span>This function uses the mscorlib_dll.System.Security.Cryptography.MD5CryptoServiceProvider.!newinit_0_0() function, which uses a hash algorithm that is considered weak. In recent years, researchers have demonstrated ways to breach many uses of previously-thought-safe hash functions such as MD5. </span> <span>Consider using a stronger algorithm in order to prevent attackers from being able to manipulate hash results. If this algorithm is being used to hash passwords, then consider using a strong computationally-hard algorithm such as PBKDF2 or bcrypt instead of a plain hashing algorithm.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/327.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 3, "cwe": {"id": 327, "name": "Use of a Broken or Risky Cryptographic Algorithm", "href": "https://api.veracode.com/appsec/v1/cwes/327"}, "module": "webgrease.dll", "relative_location": 83, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "procedure": "webgrease_dll.WebGrease.WebGreaseContext.<.cctor>b__f", "exploitability": 1, "attack_vector": "mscorlib_dll.System.Security.Cryptography.MD5CryptoServiceProvider.!newinit_0_0", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 180, "scan_type": "DYNAMIC", "description": "<span>The software generates an error message that includes sensitive information about its environment, users or associated data. </span><span>Error messages such as stack traces or version information about running software should never be displayed to end users. It is recommended that a custom error identifier be generated for display purposes. The identifier should be stored in logs alongside the error details so that it is possible to correlate the error with the identifier. </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=209\">CWE</a> <a href=\"http://www.owasp.org/index.php/Information_Leakage\">OWASP</a> <a href=\"http://projects.webappsec.org/Information-Leakage\">WASC</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "path": "/verademo/blabbers", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Information Leakage", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "vulnerable_parameter": "BODY", "attack_vector": "Generation of Error Message Containing Sensitive Information", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/blabbers"}, "build_id": 22619331}, {"issue_id": 76, "scan_type": "STATIC", "description": "<span> The application calls the system_dll.System.Net.Mail.SmtpClient.Send() function, which will result in data being transferred out of the application (via the network or another medium).  This data contains sensitive information.  Send() was called on an object, which contains potentially sensitive data. The potentially sensitive data originated from an earlier call to system_dll.System.Net.NetworkCredential.get_Password.</span> <span>Ensure that the transfer of the sensitive data is intended and that it does not violate application security policy.  This flaw is categorized as low severity because it only impacts confidentiality, not integrity or availability.  However, in the context of a mobile application, the significance of an information leak may be much greater, especially if misaligned with user expectations or data privacy policies.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE</a> <a href=\"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/\">OWASP Security Misconfiguration</a> <a href=\"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\">OWASP Cryptographic Failures</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 201, "name": "Insertion of Sensitive Information Into Sent Data", "href": "https://api.veracode.com/appsec/v1/cwes/201"}, "module": "system.web.helpers.dll", "relative_location": 88, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "system_web_helpers_dll.System.Web.Helpers.WebMail.Send", "exploitability": -1, "attack_vector": "system_dll.System.Net.Mail.SmtpClient.Send", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 77, "scan_type": "STATIC", "description": "<span> The application calls the system_dll.System.Net.Mail.SmtpClient.Send() function, which will result in data being transferred out of the application (via the network or another medium).  This data contains sensitive information.  The first argument to Send() contains potentially sensitive data. The potentially sensitive data originated from an earlier call to system_dll.System.Net.NetworkCredential.get_Password.</span> <span>Ensure that the transfer of the sensitive data is intended and that it does not violate application security policy.  This flaw is categorized as low severity because it only impacts confidentiality, not integrity or availability.  However, in the context of a mobile application, the significance of an information leak may be much greater, especially if misaligned with user expectations or data privacy policies.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE</a> <a href=\"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/\">OWASP Security Misconfiguration</a> <a href=\"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\">OWASP Cryptographic Failures</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 201, "name": "Insertion of Sensitive Information Into Sent Data", "href": "https://api.veracode.com/appsec/v1/cwes/201"}, "module": "system.web.helpers.dll", "relative_location": 88, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "system_web_helpers_dll.System.Web.Helpers.WebMail.Send", "exploitability": -1, "attack_vector": "system_dll.System.Net.Mail.SmtpClient.Send", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 120, "scan_type": "STATIC", "description": "<span> The application calls the system_dll.System.Net.Sockets.UdpClient.Send() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. The first argument to Send() contains data from an error message (possibly containing untrusted data). The data from an error message (possibly containing untrusted data) originated from an earlier call to mscorlib_dll.System.Exception.ToString.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "module": "log4net.dll", "relative_location": 72, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Appender.RemoteSyslogAppender.Append", "exploitability": 0, "attack_vector": "system_dll.System.Net.Sockets.UdpClient.Send", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 121, "scan_type": "STATIC", "description": "<span> The application calls the system_dll.System.Net.Sockets.UdpClient.Send() function, which will result in data being transferred out of the application (via the network or another medium).  This data contains sensitive information.  The first argument to Send() contains potentially sensitive data. The potentially sensitive data originated from an earlier call to system_configuration_dll.System.Configuration.ConfigurationManager.get_AppSettings.</span> <span>Ensure that the transfer of the sensitive data is intended and that it does not violate application security policy.  This flaw is categorized as low severity because it only impacts confidentiality, not integrity or availability.  However, in the context of a mobile application, the significance of an information leak may be much greater, especially if misaligned with user expectations or data privacy policies.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE</a> <a href=\"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/\">OWASP Security Misconfiguration</a> <a href=\"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\">OWASP Cryptographic Failures</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 201, "name": "Insertion of Sensitive Information Into Sent Data", "href": "https://api.veracode.com/appsec/v1/cwes/201"}, "module": "log4net.dll", "relative_location": 72, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Appender.RemoteSyslogAppender.Append", "exploitability": -1, "attack_vector": "system_dll.System.Net.Sockets.UdpClient.Send", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 122, "scan_type": "STATIC", "description": "<span> The application calls the system_dll.System.Net.Sockets.UdpClient.Send() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. The first argument to Send() contains data from an error message (possibly containing untrusted data). The data from an error message (possibly containing untrusted data) originated from an earlier call to mscorlib_dll.System.Exception.ToString.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "module": "log4net.dll", "relative_location": 30, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Appender.UdpAppender.Append", "exploitability": 0, "attack_vector": "system_dll.System.Net.Sockets.UdpClient.Send", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 123, "scan_type": "STATIC", "description": "<span> The application calls the mscorlib_dll.System.IO.TextWriter.Write() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. The first argument to Write() contains data from an error message (possibly containing untrusted data). The data from an error message (possibly containing untrusted data) originated from an earlier call to mscorlib_dll.System.Exception.ToString.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "module": "log4net.dll", "relative_location": 90, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Appender.ManagedColoredConsoleAppender.Append", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.TextWriter.Write", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 124, "scan_type": "STATIC", "description": "<span> The application calls the mscorlib_dll.System.IO.TextWriter.Write() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. The first argument to Write() contains data from an error message (possibly containing untrusted data). The data from an error message (possibly containing untrusted data) originated from an earlier call to mscorlib_dll.System.Exception.ToString.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "module": "log4net.dll", "relative_location": 51, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Appender.ConsoleAppender.Append", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.TextWriter.Write", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 125, "scan_type": "STATIC", "description": "<span> The application calls the mscorlib_dll.System.IO.TextWriter.Write() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. The first argument to Write() contains data from an error message (possibly containing untrusted data). The data from an error message (possibly containing untrusted data) originated from an earlier call to mscorlib_dll.System.Exception.ToString.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "module": "log4net.dll", "relative_location": 94, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Appender.AnsiColorTerminalAppender.Append", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.TextWriter.Write", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 126, "scan_type": "STATIC", "description": "<span> The application calls the system_dll.System.Net.Mail.SmtpClient.Send() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. Send() was called on an object, which contains data from an error message (possibly containing untrusted data). The data from an error message (possibly containing untrusted data) originated from an earlier call to mscorlib_dll.System.Exception.ToString.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "module": "log4net.dll", "relative_location": 94, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Appender.SmtpAppender.SendEmail", "exploitability": 0, "attack_vector": "system_dll.System.Net.Mail.SmtpClient.Send", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 127, "scan_type": "STATIC", "description": "<span> The application calls the system_dll.System.Net.Mail.SmtpClient.Send() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. The first argument to Send() contains data from an error message (possibly containing untrusted data). The data from an error message (possibly containing untrusted data) originated from an earlier call to mscorlib_dll.System.Exception.ToString.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "module": "log4net.dll", "relative_location": 94, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Appender.SmtpAppender.SendEmail", "exploitability": 0, "attack_vector": "system_dll.System.Net.Mail.SmtpClient.Send", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 128, "scan_type": "STATIC", "description": "<span> The application calls the system_dll.System.Net.WebRequest.Create() function, which will result in data being transferred out of the application (via the network or another medium).  This data contains sensitive information.  The first argument to Create() contains potentially sensitive data. The potentially sensitive data originated from an earlier call to system_configuration_dll.System.Configuration.ConfigurationManager.get_AppSettings.</span> <span>Ensure that the transfer of the sensitive data is intended and that it does not violate application security policy.  This flaw is categorized as low severity because it only impacts confidentiality, not integrity or availability.  However, in the context of a mobile application, the significance of an information leak may be much greater, especially if misaligned with user expectations or data privacy policies.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE</a> <a href=\"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/\">OWASP Security Misconfiguration</a> <a href=\"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\">OWASP Cryptographic Failures</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 201, "name": "Insertion of Sensitive Information Into Sent Data", "href": "https://api.veracode.com/appsec/v1/cwes/201"}, "module": "log4net.dll", "relative_location": 48, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Config.XmlConfigurator.InternalConfigure", "exploitability": -1, "attack_vector": "system_dll.System.Net.WebRequest.Create", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 129, "scan_type": "STATIC", "description": "<span> The application calls the system_dll.System.Net.Dns.GetHostEntry() function, which will result in data being transferred out of the application (via the network or another medium).  This data contains sensitive information.  The first argument to GetHostEntry() contains potentially sensitive data. The potentially sensitive data originated from an earlier call to mscorlib_dll.System.Environment.GetEnvironmentVariables.</span> <span>Ensure that the transfer of the sensitive data is intended and that it does not violate application security policy.  This flaw is categorized as low severity because it only impacts confidentiality, not integrity or availability.  However, in the context of a mobile application, the significance of an information leak may be much greater, especially if misaligned with user expectations or data privacy policies.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE</a> <a href=\"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/\">OWASP Security Misconfiguration</a> <a href=\"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\">OWASP Cryptographic Failures</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 201, "name": "Insertion of Sensitive Information Into Sent Data", "href": "https://api.veracode.com/appsec/v1/cwes/201"}, "module": "log4net.dll", "relative_location": 31, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Util.TypeConverters.IPAddressConverter.ConvertFrom", "exploitability": -1, "attack_vector": "system_dll.System.Net.Dns.GetHostEntry", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 130, "scan_type": "STATIC", "description": "<span> The application calls the mscorlib_dll.System.IO.TextWriter.WriteLine() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. The first argument to WriteLine() contains data from an error message (possibly containing untrusted data). The data from an error message (possibly containing untrusted data) originated from earlier calls to mscorlib_dll.System.Exception.ToString, mscorlib_dll.System.ArgumentException.get_Message, and mscorlib_dll.System.Exception.get_Message.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "module": "log4net.dll", "relative_location": 26, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Util.LogLog.EmitOutLine", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.TextWriter.WriteLine", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 131, "scan_type": "STATIC", "description": "<span> The application calls the mscorlib_dll.System.IO.TextWriter.WriteLine() function, which will result in data being transferred out of the application (via the network or another medium).  This data contains sensitive information.  The first argument to WriteLine() contains potentially sensitive data. The potentially sensitive data originated from earlier calls to system_configuration_dll.System.Configuration.ConfigurationManager.get_AppSettings, and mscorlib_dll.System.Environment.GetEnvironmentVariables.</span> <span>Ensure that the transfer of the sensitive data is intended and that it does not violate application security policy.  This flaw is categorized as low severity because it only impacts confidentiality, not integrity or availability.  However, in the context of a mobile application, the significance of an information leak may be much greater, especially if misaligned with user expectations or data privacy policies.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE</a> <a href=\"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/\">OWASP Security Misconfiguration</a> <a href=\"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\">OWASP Cryptographic Failures</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 201, "name": "Insertion of Sensitive Information Into Sent Data", "href": "https://api.veracode.com/appsec/v1/cwes/201"}, "module": "log4net.dll", "relative_location": 26, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Util.LogLog.EmitOutLine", "exploitability": -1, "attack_vector": "mscorlib_dll.System.IO.TextWriter.WriteLine", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 132, "scan_type": "STATIC", "description": "<span> The application calls the mscorlib_dll.System.IO.TextWriter.WriteLine() function, which may expose information about the application logic or other details such as the names and versions of the application container and associated components.  This information can be useful in executing other attacks and can also enable the attacker to target known vulnerabilities in application components. The first argument to WriteLine() contains data from an error message (possibly containing untrusted data). The data from an error message (possibly containing untrusted data) originated from earlier calls to mscorlib_dll.System.Exception.ToString, mscorlib_dll.System.Exception.get_StackTrace, mscorlib_dll.System.Exception.get_Source, mscorlib_dll.System.Exception.get_HelpLink, mscorlib_dll.System.Exception.get_TargetSite, mscorlib_dll.System.Exception.get_Message, and mscorlib_dll.System.ApplicationException.!ctor.</span> <span>Ensure that error codes or other messages returned to end users are not overly verbose.  Sanitize all messages of any sensitive information that is not absolutely necessary.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/209.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 209, "name": "Generation of Error Message Containing Sensitive Information", "href": "https://api.veracode.com/appsec/v1/cwes/209"}, "module": "log4net.dll", "relative_location": 26, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Util.LogLog.EmitErrorLine", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.TextWriter.WriteLine", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 133, "scan_type": "STATIC", "description": "<span> The application calls the mscorlib_dll.System.IO.TextWriter.WriteLine() function, which will result in data being transferred out of the application (via the network or another medium).  This data contains sensitive information.  The first argument to WriteLine() contains potentially sensitive data. The potentially sensitive data originated from earlier calls to mscorlib_dll.System.Environment.GetEnvironmentVariables, system_configuration_dll.System.Configuration.ConfigurationManager.get_AppSettings, and system_configuration_dll.System.Configuration.ConnectionStringSettings.get_ConnectionString.</span> <span>Ensure that the transfer of the sensitive data is intended and that it does not violate application security policy.  This flaw is categorized as low severity because it only impacts confidentiality, not integrity or availability.  However, in the context of a mobile application, the significance of an information leak may be much greater, especially if misaligned with user expectations or data privacy policies.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/201.html\">CWE</a> <a href=\"https://owasp.org/Top10/A05_2021-Security_Misconfiguration/\">OWASP Security Misconfiguration</a> <a href=\"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\">OWASP Cryptographic Failures</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 2, "cwe": {"id": 201, "name": "Insertion of Sensitive Information Into Sent Data", "href": "https://api.veracode.com/appsec/v1/cwes/201"}, "module": "log4net.dll", "relative_location": 26, "finding_category": {"id": 8, "name": "Information Leakage", "href": "https://api.veracode.com/appsec/v1/categories/8"}, "procedure": "log4net_dll.log4net.Util.LogLog.EmitErrorLine", "exploitability": -1, "attack_vector": "mscorlib_dll.System.IO.TextWriter.WriteLine", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 192, "scan_type": "DYNAMIC", "description": "<span>The site verademo.aabutler.vuln.sa.veracode.io:80 does not properly utilize the X-Content-Type-Options header. This header can be set to protect against MIME type confusion attacks in Internet Explorer versions 9 and higher, Chrome and Safari. Content sniffing is a method browsers use to attempt to determine the real content type of a response by looking at the content itself, instead of the response header's content-type value. By returning X-Content-Type-Options: nosniff, certain elements will only load external resources if their content-type matches what is expected. It should be noted this check was only executed against the first few pages of this site. </span><span>Set the X-Content-Type-Options header to a value of \"nosniff\" (without quotes). It is recommended this header be set side wide by configuring your web or application server to return this value for all resources. More information on configuring this header can be found at https://www.veracode.com/blog/2014/03/guidelines-for-setting-security-headers#xcto </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=16\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 0, "cwe": {"id": 16, "name": "Configuration", "href": "https://api.veracode.com/appsec/v1/cwes/16"}, "path": "/verademo/login", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Server Configuration", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 27, "name": "Server Configuration", "href": "https://api.veracode.com/appsec/v1/categories/27"}, "vulnerable_parameter": "x-content-type-options header", "attack_vector": "Configuration", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/login"}, "build_id": 22619331}, {"issue_id": 195, "scan_type": "DYNAMIC", "description": "<span>The site verademo.aabutler.vuln.sa.veracode.io:80 does not properly utilize the X-Content-Type-Options header. This header can be set to protect against MIME type confusion attacks in Internet Explorer versions 9 and higher, Chrome and Safari. Content sniffing is a method browsers use to attempt to determine the real content type of a response by looking at the content itself, instead of the response header's content-type value. By returning X-Content-Type-Options: nosniff, certain elements will only load external resources if their content-type matches what is expected. It should be noted this check was only executed against the first few pages of this site. </span><span>Set the X-Content-Type-Options header to a value of \"nosniff\" (without quotes). It is recommended this header be set side wide by configuring your web or application server to return this value for all resources. More information on configuring this header can be found at https://www.veracode.com/blog/2014/03/guidelines-for-setting-security-headers#xcto </span><span><a href=\"http://cwe.mitre.org/cgi-bin/jumpmenu.cgi?id=16\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": true, "finding_status": {"first_found_date": "2022-12-07T21:28:54.227Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-12-07T21:35:03.639Z"}, "finding_details": {"severity": 0, "cwe": {"id": 16, "name": "Configuration", "href": "https://api.veracode.com/appsec/v1/cwes/16"}, "path": "/verademo/feed", "hostname": "verademo.aabutler.vuln.sa.veracode.io", "plugin": "Server Configuration", "port": "80", "discovered_by_vsa": 0, "finding_category": {"id": 27, "name": "Server Configuration", "href": "https://api.veracode.com/appsec/v1/categories/27"}, "vulnerable_parameter": "x-content-type-options header", "attack_vector": "Configuration", "url": "http://verademo.aabutler.vuln.sa.veracode.io:80/verademo/feed"}, "build_id": 22619331}, {"issue_id": 134, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable m_writer, which was previously allocated by a call to mscorlib_dll.System.IO.StreamWriter.!newinit_0_1().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "module": "log4net.dll", "relative_location": 59, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "log4net_dll.log4net.Appender.TelnetAppender.SocketHandler.SocketClient.!ctor", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.StreamWriter.!newinit_0_1", "file_line_number": 1}, "build_id": 35444429}, {"issue_id": 170, "scan_type": "STATIC", "description": "<span>The program fails to release or incorrectly releases the variable GetDeserializedObject, which was previously allocated by a call to mscorlib_dll.System.IO.StreamReader.!newinit_0_1().</span> <span>Ensure that all code paths properly release this resource.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/404.html\">CWE</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "violates_policy": false, "finding_status": {"first_found_date": "2022-08-15T18:33:41.656Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": false, "resolution_status": "NONE", "last_seen_date": "2024-04-26T17:45:10.859Z"}, "finding_details": {"severity": 0, "cwe": {"id": 404, "name": "Improper Resource Shutdown or Release", "href": "https://api.veracode.com/appsec/v1/cwes/404"}, "module": "system.web.mvc.dll", "relative_location": 68, "finding_category": {"id": 17, "name": "Code Quality", "href": "https://api.veracode.com/appsec/v1/categories/17"}, "procedure": "system_web_mvc_dll.System.Web.Mvc.JsonValueProviderFactory.GetDeserializedObject", "exploitability": 0, "attack_vector": "mscorlib_dll.System.IO.StreamReader.!newinit_0_1", "file_line_number": 1}, "build_id": 35444429}], "asset_info": {"guid": "e88f93c6-afb9-44e4-a002-a4df820d73f7", "type": "APPLICATION", "name": "Verademo.NET", "attributes": {"app_url": "HomeAppProfile:90250:1394124", "team_accessible": true, "teams": [{"team_id": 256469, "team_name": "Backend Team", "guid": "0102931e-4d9b-4ac5-a5cd-4de16ffcab9a"}], "scans": [{"status": "PUBLISHED", "modified_date": "2022-12-07T21:35:04.000Z", "scan_url": "DynamicParamsView:90250:1394124:22619331:22590622::22606272", "scan_type": "DYNAMIC"}, {"status": "PUBLISHED", "modified_date": "2024-04-26T17:45:11.000Z", "scan_url": "StaticOverview:90250:1394124:35444429:35413146:35428796", "scan_type": "STATIC"}], "created": "2022-03-29T16:55:35.000Z", "policy_in_grace_period": false, "policy_passed_rules": false, "policies": [{"guid": "61800e31-f076-4def-83b4-89f2f1fb15d0", "name": "Veracode Recommended Very High + SCA", "policy_compliance_status": "DID_NOT_PASS"}], "last_completed_scan_date": "2024-04-26T17:45:11.000Z", "policy_passed_scan_requirements": false, "is_ignored": false}}}, "7d954dc6-fbc3-43da-8572-31c9dc5c0b98": {"findings_by_severity": {"sev5": 0, "sev4": 0, "sev3": 2, "sev2": 0, "sev1": 0, "sev0": 0}, "policy_findings_by_severity": {"sev5": 0, "sev4": 0, "sev3": 0, "sev2": 0, "sev1": 0, "sev0": 0}, "total_findings": 2, "total_policy_findings": 0, "app_findings": [{"issue_id": 1, "scan_type": "STATIC", "description": "<span>Standard random number generators do not provide a sufficient amount of entropy when used for security purposes. Attackers can brute force the output of pseudorandom number generators such as rand().</span> <span>If this random number is used where security is a concern, such as generating passwords, session keys, authentication etc, use a trusted cryptographic random number generator instead. The new secrets module introduced in Python 3.6, is used for generating such cryptographically strong random number generators.</span> <span>References:<a href=\"https://cwe.mitre.org/data/definitions/331.html\">CWE</a> <BR><a href=\"https://docs.python.org/3/library/secrets.html#module-secrets\">secrets module</a><BR><a href=\"https://cryptography.io/en/latest/\">cryptography.io</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "7d954dc6-fbc3-43da-8572-31c9dc5c0b98", "violates_policy": false, "finding_status": {"first_found_date": "2022-04-19T17:35:30.384Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-04-19T17:52:17.835Z"}, "finding_details": {"severity": 3, "cwe": {"id": 331, "name": "Insufficient Entropy", "href": "https://api.veracode.com/appsec/v1/cwes/331"}, "file_path": "server.py", "file_name": "server.py", "module": "Python files within Vulnerable_Tornado_App.zip", "relative_location": 0, "finding_category": {"id": 12, "name": "Cryptographic Issues", "href": "https://api.veracode.com/appsec/v1/categories/12"}, "exploitability": -1, "attack_vector": "RANDMSG_python_331", "file_line_number": 63}, "build_id": 17952623}, {"issue_id": 2, "scan_type": "STATIC", "description": "<span>This call to Node.appendChild() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. </span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://help.veracode.com/reader/4EKhlLSMHm5jC8P8j3XccQ/IiF_rOE79ANbwnZwreSPGA\">Supported Cleansers</a></span>", "count": 1, "context_type": "APPLICATION", "context_guid": "7d954dc6-fbc3-43da-8572-31c9dc5c0b98", "violates_policy": false, "finding_status": {"first_found_date": "2022-04-19T17:35:30.384Z", "status": "OPEN", "resolution": "UNRESOLVED", "mitigation_review_status": "NONE", "new": true, "resolution_status": "NONE", "last_seen_date": "2022-04-19T17:52:17.835Z"}, "finding_details": {"severity": 3, "cwe": {"id": 80, "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)", "href": "https://api.veracode.com/appsec/v1/cwes/80"}, "file_path": "static/js/css3-mediaqueries.js", "file_name": "css3-mediaqueries.js", "module": "JS files within Vulnerable_Tornado_App.zip", "relative_location": -1, "finding_category": {"id": 20, "name": "Cross-Site Scripting (XSS)", "href": "https://api.veracode.com/appsec/v1/categories/20"}, "procedure": "lambda_54", "exploitability": 1, "attack_vector": "Node.appendChild", "file_line_number": 406}, "build_id": 17952623}], "asset_info": {"guid": "7d954dc6-fbc3-43da-8572-31c9dc5c0b98", "type": "APPLICATION", "name": "Vulnerable_Tornado_App", "attributes": {"app_url": "HomeAppProfile:90250:1414756", "team_accessible": true, "teams": [], "scans": [{"status": "PUBLISHED", "modified_date": "2022-04-19T17:52:18.000Z", "scan_url": "StaticOverview:90250:1414756:17952623:17924826:17940476", "scan_type": "STATIC"}], "created": "2022-04-19T17:28:29.000Z", "policy_in_grace_period": true, "policy_passed_rules": true, "policies": [{"guid": "9f47093a-0493-4ab4-bce4-3246eb2ab50f", "name": "Veracode Recommended Medium + SCA", "policy_compliance_status": "DID_NOT_PASS"}], "last_completed_scan_date": "2022-04-19T17:52:18.000Z", "policy_passed_scan_requirements": false, "is_ignored": false}}}, "df376eb3-a039-40db-8d24-1c11da1bfd42": {"findings_by_severity": {"sev5": 0, "sev4": 0, "sev3": 0, "sev2": 0, "sev1": 0, "sev0": 0}, "policy_findings_by_severity": {"sev5": 0, "sev4": 0, "sev3": 0, "sev2": 0, "sev1": 0, "sev0": 0}, "total_findings": 0, "total_policy_findings": 0, "app_findings": [], "asset_info": {"guid": "df376eb3-a039-40db-8d24-1c11da1bfd42", "type": "APPLICATION", "name": "OpenSSL", "attributes": {"app_url": "HomeAppProfile:90250:1509220", "team_accessible": true, "teams": [], "scans": [{"status": "PUBLISHED", "modified_date": "2022-08-16T17:49:49.000Z", "scan_url": "StaticOverview:90250:1509220:20235769:20207605:20223255", "scan_type": "STATIC"}], "created": "2022-08-16T13:14:48.000Z", "policy_in_grace_period": true, "policy_passed_rules": false, "policies": [{"guid": "61800e31-f076-4def-83b4-89f2f1fb15d0", "name": "Veracode Recommended Very High + SCA", "policy_compliance_status": "DID_NOT_PASS"}], "last_completed_scan_date": "2022-08-16T17:49:49.000Z", "policy_passed_scan_requirements": false, "is_ignored": false}}}}}